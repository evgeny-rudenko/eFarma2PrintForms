SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.REPEX_INVOICE_OUT_INVOICE_RIGLA') IS NULL) EXEC ('CREATE PROCEDURE DBO.REPEX_INVOICE_OUT_INVOICE_RIGLA AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_INVOICE_OUT_INVOICE_RIGLA
	@XMLPARAM NTEXT AS
		
DECLARE	@HDOC INT
DECLARE	@ID_GLOBAL UNIQUEIDENTIFIER
		
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT , @XMLPARAM OUTPUT
SELECT @ID_GLOBAL = ID_GLOBAL FROM OPENXML(@HDOC , '/XML') WITH(ID_GLOBAL UNIQUEIDENTIFIER 'ID_GLOBAL')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT
	[INVOICE_OUT_NAME] = I.MNEMOCODE,
	[INVOICE_OUT_DATE] = I.DATE,
	[CONTRACTOR_FROM_NAME] = ISNULL(C_FR.LEGAL_PERS,'') + ' (' + ISNULL(C_FR.LEGAL_PERS_SHORT,'') + ')',
	[CONTRACTOR_FROM_ADDRESS] = ISNULL(C_FR.[UR_ADDRESS], ''),
	[CONTRACTOR_FROM_INN] = ISNULL(C_FR.INN, '') + '/' + ISNULL(C_FR.KPP, ''),

--	[GCONTRACTOR] = ISNULL(ISNULL(C_FR.LEGAL_PERS + ' ', C_FR.LEGAL_PERS_SHORT + ' '), '') + ISNULL(C_FR.NAME, 'Не указано') + ', ' + ISNULL(C_FR.ADDRESS, 'Адрес не указан'), 
	[GCONTRACTOR] = ISNULL(C_FR.NAME+', ', '') + ISNULL(C_FR.[ADDRESS], ''),
	[GCONTRACTOR_TO_NAME] = ISNULL(C_TO.FULL_NAME+', ', '') + ISNULL(C_TO.[ADDRESS], ''),
	[CONTRACTOR_TO_NAME] = ISNULL(C_P.FULL_NAME, ''),
	[CONTRACTOR_TO_ADDRESS] = ISNULL(C_P.[ADDRESS], ''),
	[CONTRACTOR_TO_INN] = ISNULL(C_P.INN, '') + '/' + ISNULL(C_P.KPP, '')
	--,C_FR.ID_CONTRACTOR
	--select * 
FROM INVOICE_OUT I
	INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE
	INNER JOIN CONTRACTOR C_FR ON C_FR.ID_CONTRACTOR = S.ID_CONTRACTOR
	INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
	INNER JOIN CONTRACTOR C_P ON C_P.ID_CONTRACTOR = I.ID_PAYER
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
--select * from CONTRACTOR where ID_CONTRACTOR = 6016
DECLARE @IS_SUP BIT
DECLARE @IS_USE_VAT BIGINT
DECLARE @DTDoc datetime, @IDSend bigint
SELECT 
	@IS_SUP = IS_SUPPLIER,
	@IS_USE_VAT = C_TO.USE_VAT
	,@DTDoc = DOC_DATE
FROM INVOICE_OUT I
	INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL

--select @is_sup, @is_use_vat

IF (@IS_SUP = 1)
BEGIN
	IF (@IS_USE_VAT = 1)
	BEGIN

	SELECT
		[GOODS_NAME] = G.NAME,
		[UNIT_NAME] = U.SHORT_NAME,
		[QUANTITY] = II.QUANTITY,
		[PRICE_SAL] = L.PRICE_SUP - L.PVAT_SUP,
		[SUM_SAL_WITHOUT_VAT] = II.QUANTITY * (L.PRICE_SUP - L.PVAT_SUP),
		[VAT_SAL] = CASE WHEN L.PVAT_SUP = 0 THEN CAST('Без НДС' AS VARCHAR(10)) ELSE CAST(L.VAT_SUP AS VARCHAR(9)) + '%' END,
		[PSUM_SAL] = II.QUANTITY * L.PVAT_SUP,
		[SUM_SAL] = II.QUANTITY * L.PRICE_SUP,
		[COUNTRY] = C.NAME,
		GTD_NUMBER = L.GTD_NUMBER
	FROM INVOICE_OUT_ITEM II
		INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
		INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
		LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
		LEFT JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
		INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO 
		INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
	WHERE II.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
	ORDER BY GOODS_NAME

	END
	ELSE
	BEGIN
	SELECT
		[GOODS_NAME] = G.NAME,
		[UNIT_NAME] = U.SHORT_NAME,
		[QUANTITY] = II.QUANTITY,
		[PRICE_SAL] = (L.PRICE_SUP / (100 + ISNULL(TT.TAX_RATE, 0))) * 100,
		[SUM_SAL_WITHOUT_VAT] = (L.PRICE_SUP / (100 + ISNULL(TT.TAX_RATE, 0))) * 100 * II.QUANTITY,
		[VAT_SAL] = CASE WHEN ISNULL(TT.TAX_RATE, 0) = 0 THEN CAST('Без НДС' AS VARCHAR(10)) ELSE CAST(ISNULL(TT.TAX_RATE, 0) AS VARCHAR(9)) + '%' END,
		[PSUM_SAL] = II.QUANTITY * ISNULL(TT.TAX_RATE, 0) * L.PRICE_SUP / (100 + ISNULL(TT.TAX_RATE, 0)),
		[SUM_SAL] = II.QUANTITY * L.PRICE_SUP,
		[COUNTRY] = C.NAME,
		GTD_NUMBER = L.GTD_NUMBER
	FROM INVOICE_OUT_ITEM II
		INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
		INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
		LEFT JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = G.ID_TAX_TYPE
		LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
		LEFT JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
		INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO 
		INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
	WHERE II.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
	ORDER BY GOODS_NAME
	END
END
ELSE
BEGIN
SELECT
	[GOODS_NAME] = G.NAME,
	[UNIT_NAME] = U.SHORT_NAME,
	[QUANTITY] = II.QUANTITY,
	[PRICE_SAL] = II.PRICE_SAL - II.PVAT_SAL,
	[SUM_SAL_WITHOUT_VAT] = II.SUM_SAL - II.PSUM_SAL,
	[VAT_SAL] = CASE WHEN II.PSUM_SAL = 0 THEN CAST('Без НДС' AS VARCHAR(10)) ELSE CAST(L.VAT_SAL AS VARCHAR(9)) + '%' END,
	[PSUM_SAL] = II.PSUM_SAL,
	[SUM_SAL] = II.SUM_SAL,
	[COUNTRY] = C.NAME,
	GTD_NUMBER = L.GTD_NUMBER
	--select *
FROM INVOICE_OUT_ITEM II
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
	INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
	LEFT JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO 
	INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
WHERE II.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
ORDER BY GOODS_NAME
END
/*
DECLARE @Buh varchar(512), @Dir varchar(512)
DECLARE @BuhDog varchar(512), @DirDog varchar(512)
SELECT
	@Dir = DIRECTOR_FIO,
	@Buh = BUH_FIO
FROM CONTRACTOR
WHERE ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)

IF OBJECT_ID('ContractorOfPeriod') IS NOT NULL
BEGIN	
		select top 1 @Buh = isnull(ValueName, @Buh)
			,@BuhDog = Value
		from ContractorOfPeriod
		where @DTDoc > DTStart and @DTDoc <= (case when DTEnd IS NULL then GETDATE() else DTEnd end)
			And [TYPE] = 'BUH'
			And Date_deleted is null
		order by DTStart DESC

		select top 1 @Dir = isnull(ValueName, @Dir)
			,@DirDog = Value
		from ContractorOfPeriod
		where @DTDoc > DTStart and @DTDoc <= (case when DTEnd IS NULL then GETDATE() else DTEnd end)
			And [TYPE] = 'DIR'
			And Date_deleted is null
		order by DTStart DESC
END

	SELECT 
		DIR = @Dir, 
		DIRDOG = @DirDog, 
		BUH = @Buh, 
		BUHDOG = @BuhDog
		
		*/
DECLARE @BUH_DOC VARCHAR(300),
		@DIRECTOR_DOC  VARCHAR(300),
		@SQL NVARCHAR(200),
		@CONTRACTOR BIGINT
SELECT TOP 1 @CONTRACTOR = ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1


IF (1 = (SELECT DBO.REPL_REPL_CONFIG_SELF_IS_CENTER()))
BEGIN
	SELECT TOP 1 @CONTRACTOR = ID_CONTRACTOR FROM STORE WHERE ID_STORE = (	
																			SELECT ID_STORE 
																			FROM INVOICE_OUT I
																			WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
																		  )
END



SET @SQL = N'SELECT @BUH_DOC = BUH_DOC, 
					@DIRECTOR_DOC = DIRECTOR_DOC
			FROM CONTRACTOR
			WHERE ID_CONTRACTOR = @CONTRACTOR'
	
IF (COL_LENGTH('CONTRACTOR', 'BUH_DOC') IS NOT NULL)and(COL_LENGTH('CONTRACTOR', 'DIRECTOR_DOC') IS NOT NULL) 
EXEC SP_EXECUTESQL @SQL, N'@CONTRACTOR BIGINT, @BUH_DOC VARCHAR(300) OUT,  @DIRECTOR_DOC VARCHAR(300) OUT', @CONTRACTOR=@CONTRACTOR, @BUH_DOC=@BUH_DOC OUT, @DIRECTOR_DOC=@DIRECTOR_DOC OUT

SELECT
	DIR = DIRECTOR_FIO,
	DIRECTOR_DOC = @DIRECTOR_DOC,
	BUH = BUH_FIO,
	BUH_DOC = @BUH_DOC
FROM CONTRACTOR
WHERE ID_CONTRACTOR = @CONTRACTOR

RETURN
GO

--EXEC DBO.REPEX_INVOICE_OUT_INVOICE_RIGLA N'<XML><ID_GLOBAL>2777FECC-9923-4CF2-94C6-22D93410D3BF</ID_GLOBAL></XML>' --56896F4D-C561-4349-B294-B556E7AFAF9A
--SELECT DBO.REPL_REPL_CONFIG_SELF_IS_CENTER()
--selet * from CONTRACTOR where ID_CONTRACTOR = 6016
--select * from ENTERPRISE_BRANCH
/*
SELECT *
FROM CONTRACTOR C(NOLOCK)
WHERE ID_CONTRACTOR in (5609,5571,
5650)*/
/*
select * from store where ID_STORE IN (
select * FROM INVOICE_OUT where ID_STORE  = 249)
*/






SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'InvoiceOutInvoiceRigla.ActReturnToContractorInvoice'