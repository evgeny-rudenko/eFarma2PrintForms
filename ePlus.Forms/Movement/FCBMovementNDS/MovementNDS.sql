SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('REPEX_MOVEMENT_NDS') IS NULL EXEC('CREATE PROCEDURE REPEX_MOVEMENT_NDS AS RETURN')
GO
ALTER PROCEDURE REPEX_MOVEMENT_NDS
	(@XMLPARAM NTEXT) AS 

DECLARE @HDOC INT, @ID_MOVEMENT BIGINT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @ID_MOVEMENT = ID_MOVEMENT
	FROM OPENXML(@HDOC, '/XML') WITH(ID_MOVEMENT BIGINT 'ID_MOVEMENT')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT
	case
	  when Full_NAME is null then NAME 
	  when Full_NAME = '' then NAME 
	  else Full_NAME
	 end AS COMPANY
FROM CONTRACTOR WHERE ID_CONTRACTOR = DBO.FN_CONST_CONTRACTOR_SELF()

SELECT
	MNEMOCODE = MNEMOCODE + ' ' + COMMENT,
	DATE,
	STORENAMEFROM = (SELECT TOP 1 case 
	                                  when C.FULL_NAME is null then C.NAME
	                                  when C.FULL_NAME = '' then C.NAME
	                                  else  C.FULL_NAME
	                                end  + ' - ' + S.NAME FROM STORE AS S  
		LEFT JOIN CONTRACTOR AS C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
		WHERE S.ID_STORE = M.ID_STORE_FROM),
	STORENAMETO = (SELECT TOP 1 case 
	                                  when C.FULL_NAME is null then C.NAME
	                                  when C.FULL_NAME = '' then C.NAME
	                                  else  C.FULL_NAME
	                                end + ' - ' + S.NAME FROM STORE AS S 
		LEFT JOIN CONTRACTOR AS C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR 
		WHERE S.ID_STORE = M.ID_STORE_TO),
--	DOC = (SELECT TOP 1 'œ–»’ŒƒÕ¿ﬂ Õ¿ À¿ƒÕ¿ﬂ ' + INV.MNEMOCODE + ' Œ“ '+ CONVERT(VARCHAR(10),INV.DOCUMENT_DATE,104) FROM INVOICE AS INV WHERE M.ID_DOCUMENT_BASE = INV.ID_INVOICE)
DOC = M.BASE_DOCUMENT_NAME
FROM MOVEMENT AS M WHERE ID_MOVEMENT = @ID_MOVEMENT

SELECT
	GOODSNAME = G.NAME + ' ( ' + (SELECT TOP 1 P.NAME FROM PRODUCER AS P WHERE G.ID_PRODUCER = P.ID_PRODUCER) + ' ) ',
	SERIESNUMBER = SER.SERIES_NUMBER,
	QUANTITY = M.QUANTITY,
	UNITNAME = DBO.FN_SCALE_NAME(M.ID_SCALING_RATIO),
	PRICE_SUPPLIER,
	L.VAT_SUP,
	L.PVAT_SUP,
	PRICE_SUMMA = QUANTITY * PRICE_SUPPLIER,
	PRICE_SUMMA_VAT = QUANTITY * PRICE_SUPPLIER_VAT,
	PRICE_SAL = PRICE_SALE - L.PVAT_SAL,
	L.VAT_SAL,
	L.PVAT_SAL,
	PRICE_SAL_VAT = PRICE_SALE,
	PRICE_SUMM_SALE = QUANTITY * PRICE_SALE
INTO #TEMP
FROM MOVEMENT_ITEM AS M
	INNER JOIN LOT L ON L.ID_LOT = M.ID_LOT_FROM
	LEFT JOIN GOODS AS G ON G.ID_GOODS = M.ID_GOODS
	LEFT JOIN SERIES SER ON SER.ID_SERIES = L.ID_SERIES
	LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = M.ID_SCALING_RATIO
	LEFT JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT WHERE ID_MOVEMENT = @ID_MOVEMENT
ORDER BY GOODSNAME

SELECT * FROM #TEMP

SELECT
	DIR = DIRECTOR_FIO,
	BUH = BUH_FIO
FROM CONTRACTOR
WHERE ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)

SELECT 
	VAT_SUP10 = ISNULL((SELECT SUM(PVAT_SUP) FROM #TEMP WHERE VAT_SUP = 10 GROUP BY VAT_SUP), 0),
	VAT_SUP18 = ISNULL((SELECT SUM(PVAT_SUP) FROM #TEMP WHERE VAT_SUP = 18 GROUP BY VAT_SUP), 0),
	VAT_SAL10 = ISNULL((SELECT SUM(PVAT_SAL) FROM #TEMP WHERE VAT_SAL = 10 GROUP BY VAT_SAL), 0),
	VAT_SAL18 = ISNULL((SELECT SUM(PVAT_SAL) FROM #TEMP WHERE VAT_SAL = 18 GROUP BY VAT_SAL), 0)
RETURN 0
GO

--exec REPEX_MOVEMENT_NDS '<XML><ID_MOVEMENT>212</ID_MOVEMENT></XML>'