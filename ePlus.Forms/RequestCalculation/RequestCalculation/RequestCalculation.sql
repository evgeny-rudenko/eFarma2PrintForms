SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_REQUEST_CALCULATION') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_REQUEST_CALCULATION AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_REQUEST_CALCULATION
    @XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @ID_GLOBAL UNIQUEIDENTIFIER
DECLARE @PARAM VARCHAR(MAX)
DECLARE @GROUP_BY BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
SELECT @ID_GLOBAL = ID_GLOBAL FROM OPENXML(@HDOC, '/XML') WITH(ID_GLOBAL UNIQUEIDENTIFIER 'ID_GLOBAL')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

DECLARE @RESULT VARCHAR(4000)
SELECT 
    @RESULT = ISNULL(@RESULT + '; ' + ' c ' + CONVERT(NVARCHAR(12), DATE_FROM, 104) + ' по ' + CONVERT(NVARCHAR(12), DATE_TO, 104), ISNULL(' c ' + CONVERT(NVARCHAR(12), DATE_FROM, 104) + ' по ' + CONVERT(NVARCHAR(12), DATE_TO, 104), ''))
FROM REQUEST_CALCULATION_INTERVAL
WHERE ID_REQUEST_CALCULATION = @ID_GLOBAL

SELECT DATES = @result

SELECT
	CT.NAME
FROM CONTRACTOR CT
	INNER JOIN REQUEST_CALCULATION RC ON RC.ID_CONTRACTOR = CT.ID_CONTRACTOR
WHERE RC.ID_REQUEST_CALCULATION = @ID_GLOBAL
-----------------------------------------
SELECT @PARAM = [PARAMETERS] FROM REQUEST_CALCULATION WHERE ID_REQUEST_CALCULATION = @ID_GLOBAL
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @PARAM OUTPUT
SELECT TOP 1 @GROUP_BY = [GROUP] FROM OPENXML(@HDOC, '/XML/REQUEST_PARAM/CONFIG') WITH([GROUP] BIT 'GROUP')
WHERE [GROUP] IS NOT NULL
EXEC SP_XML_REMOVEDOCUMENT @HDOC

--select @GROUP_BY
--select @PARAM
SELECT 
	ID_GOODS
INTO #TMP
FROM
	GOODS_CLASSIFIER_2_GOODS

SELECT
	GOODS_NAME = I.GOODS_NAME,
	PRODUCER_NAME = I.PRODUCER_NAME,
	SPEED = I.SALES_SPEED,
	MIN_QTY = I.MIN_QTY,
	SALES = I.QTY_SUB,
	REMAIN = I.REMAIN,
	NEED = I.NEEDS,
	SUPPLIER_NAME = I.SUPPLIER_NAME,
	LAST_PRICE = I.LAST_PRICE,
	ABCGROUP = '√руппа ' + I.ABCCATEGORY
	--select *
FROM REQUEST_CALCULATION_ITEM I
WHERE I.ID_REQUEST_CALCULATION = @ID_GLOBAL
AND (@GROUP_BY = 0 OR I.ID_GOODS NOT IN (SELECT ID_GOODS FROM #TMP) )
ORDER BY ABCGROUP

RETURN 0
GO

--exec REPEX_REQUEST_CALCULATION N'<XML><ID_GLOBAL>00B14138-DECF-4403-BDF6-F6F0CC4108D9</ID_GLOBAL></XML>'


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'RequestCalculation.RequestCalculation'