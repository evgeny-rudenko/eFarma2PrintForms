SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('REPEX_KM6') IS NULL) EXEC ('CREATE PROCEDURE REPEX_KM6 AS RETURN')
GO
ALTER PROCEDURE REPEX_KM6
	@XMLPARAM NTEXT
AS

DECLARE @HDOC INT
DECLARE @ID_CASH_SESSION BIGINT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @ID_CASH_SESSION = ID_CASH_SESSION
	FROM OPENXML(@HDOC, '/XML') 
	WITH(ID_CASH_SESSION BIGINT 'ID_CASH_SESSION')
	
EXEC SP_XML_REMOVEDOCUMENT @HDOC

DECLARE @STORE VARCHAR(500)
DECLARE @LEN INT

SET @STORE = ''
SET @LEN = 0
SELECT @STORE = @STORE + STORE.[NAME] + ', '
FROM (SELECT DISTINCT S.ID_STORE, S.[NAME]
		FROM CASH_SESSION CS LEFT JOIN CHEQUE CH
			ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL LEFT JOIN CHEQUE_ITEM CH_IT
			ON CH_IT.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL LEFT JOIN LOT L
			ON L.ID_LOT_GLOBAL = CH_IT.ID_LOT_GLOBAL LEFT JOIN STORE S
			ON L.ID_STORE = S.ID_STORE
		WHERE  CS.ID_CASH_SESSION = @ID_CASH_SESSION) STORE

SET @LEN = LEN(@STORE)
IF (@LEN >= 1)
BEGIN
	SET @STORE = LEFT(@STORE, @LEN - 1)
END

SELECT
	C.FULL_NAME AS FULL_NAME,
	C.ADDRESS AS ADDRESS,
	C.PHONE AS PHONE,
	C.INN AS INN,
	CR.NAME_CASH_REGISTER AS NAME_CASH_REGISTER,
	CR.NUMBER_CASH_REGISTER AS NUMBER_CASH_REGISTER,
	US.FULL_NAME AS US_FULL_NAME,
	CS.MNEMOCODE AS MNEMOCODE,
	@STORE AS NAME_STORE,
	GETDATE() AS DATE_DOC,
	CS.DATE_OPEN AS DATE_OPEN, 
	CS.DATE_CLOSE AS DATE_CLOSE,
	C.OKPO AS OKPO,
	C.BANK AS BANK,
	C.ACCOUNT AS ACCOUNT
FROM CASH_SESSION CS LEFT JOIN CASH_REGISTER CR
	ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER LEFT JOIN CONTRACTOR C
	ON C.ID_CONTRACTOR = CR.ID_CONTRACTOR LEFT JOIN [USER] US
	ON CS.ID_USER_DATA = US.ID_USER
WHERE CS.ID_CASH_SESSION = @ID_CASH_SESSION

SELECT
	S.ID_STORE AS ID_STORE,
	S.[NAME] AS NAME_STORE,
	SUM	(CASE CH.CHEQUE_TYPE
			WHEN 'SALE' THEN CH_IT.SUMM
			WHEN 'RETURN' THEN -CH_IT.SUMM
			ELSE 0 
		END) AS SUMM_SALE,
	SUM	(CASE CH.CHEQUE_TYPE
			WHEN 'RETURN' THEN CH_IT.SUMM
			ELSE CAST(0 AS DECIMAL(18,2))
		END) AS SUMM_RETURN,
	US.[NAME],
	US.FULL_NAME AS FULL_NAME_CS
FROM CASH_SESSION CS INNER JOIN CHEQUE CH
	ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL INNER JOIN CHEQUE_ITEM CH_IT
	ON CH_IT.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL LEFT JOIN LOT L
	ON L.ID_LOT_GLOBAL = CH_IT.ID_LOT_GLOBAL LEFT JOIN STORE S
	ON S.ID_STORE = L.ID_STORE LEFT JOIN [USER] US
	ON CS.ID_USER_DATA = US.ID_USER
WHERE CS.ID_CASH_SESSION = @ID_CASH_SESSION AND CH.CHEQUE_TYPE IN ('SALE','RETURN')
GROUP BY S.ID_STORE, S.[NAME], US.[NAME], US.FULL_NAME

RETURN 0
GO



SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'KM6Ex.KM6Ex'