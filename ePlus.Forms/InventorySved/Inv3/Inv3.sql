SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_INV3') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_INV3 AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_INV3 @XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @ID_GLOBAL UNIQUEIDENTIFIER
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT TOP 1 @ID_GLOBAL = ID_GLOBAL
FROM OPENXML(@HDOC, '/XML') WITH(ID_GLOBAL UNIQUEIDENTIFIER 'ID_GLOBAL')

EXEC SP_XML_REMOVEDOCUMENT @HDOC

DECLARE @DOC_DATE DATETIME, @USE_VAT BIT, @FULL BIT
SELECT TOP 1 @DOC_DATE = I.DOC_DATE, @USE_VAT = C.USE_VAT, @FULL = I.[FULL]
FROM INVENTORY_SVED I 
INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
WHERE I.ID_INVENTORY_GLOBAL = @ID_GLOBAL

DECLARE @CONST VARCHAR(10)
SELECT TOP 1 @CONST = VALUE FROM SYS_OPTION WHERE CODE = 'INVENTORY_CALC_PRICE'

SELECT
	CONTRACTOR = COALESCE(C.FULL_NAME, C.NAME),
	STORE = S.NAME,
	DOC_NUM = I.DOC_NUM,
	DOC_DATE = CONVERT(VARCHAR(10), I.DOC_DATE, 104)
FROM INVENTORY_SVED I
	INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
WHERE I.ID_INVENTORY_GLOBAL = @ID_GLOBAL

SELECT
    L.ID_GOODS,
	PRICE = ROUND((CASE WHEN @CONST = 'SAL' THEN L.PRICE_SAL ELSE L.PRICE_SUP END) * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR, 2),
    QUANTITY = CAST(NULL AS MONEY),
    RETAIL_SUM = CAST(NULL AS MONEY),
    QUANTITY_DOC = ROUND(SUM((LM.QUANTITY_ADD - LM.QUANTITY_SUB) * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR), 2),
    RET_SUM_DOC = SUM((LM.QUANTITY_ADD - LM.QUANTITY_SUB) * (CASE WHEN @CONST = 'SAL' THEN L.PRICE_SAL ELSE L.PRICE_SUP END)),
    VAT_SUP = CASE WHEN @USE_VAT = 1 THEN L.VAT_SUP ELSE 0 END
INTO #LOT
FROM LOT_MOVEMENT LM
INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
WHERE (@FULL = 1 OR (@FULL = 0 
    AND EXISTS(SELECT TOP 1 1 FROM INVENTORY_VED IV
        INNER JOIN INVENTORY_VED_ITEM II ON II.ID_INVENTORY_VED_GLOBAL = IV.ID_INVENTORY_VED_GLOBAL
        WHERE IV.ID_INVENTORY_SVED_GLOBAL = @ID_GLOBAL 
            AND L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
		AND L.ID_STORE = IV.ID_STORE)))
AND LM.DATE_OP < @DOC_DATE
AND EXISTS(SELECT TOP 1 1 FROM INVENTORY_VED II WHERE II.ID_STORE = L.ID_STORE 
	AND II.ID_INVENTORY_SVED_GLOBAL = @ID_GLOBAL)
GROUP BY L.ID_GOODS, 
    (CASE WHEN @USE_VAT = 1 THEN L.VAT_SUP ELSE 0 END),
    ROUND((CASE WHEN @CONST = 'SAL' THEN L.PRICE_SAL ELSE L.PRICE_SUP END) * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR, 2)
HAVING (SUM(LM.QUANTITY_ADD) - SUM(LM.QUANTITY_SUB)) > 0

CREATE INDEX #LOT$ID_GOODS$PRICE$VAT_SUP ON #LOT(ID_GOODS, PRICE, VAT_SUP)

SELECT 
    II.ID_GOODS, 
	PRICE = ROUND((CASE WHEN @CONST = 'SAL' THEN II.PRICE_SAL ELSE II.PRICE_SUP END) * (CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR), 2), 
    QUANTITY = SUM(ROUND(II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR, 2)),
    RETAIL_SUM = SUM(II.QUANTITY * (CASE WHEN @CONST = 'SAL' THEN II.PRICE_SAL ELSE II.PRICE_SUP END)),
    VAT_SUP = CASE WHEN @USE_VAT = 1 THEN II.VAT_SUP ELSE 0 END
INTO #INVENTORY_VED
FROM INVENTORY_VED IV
INNER JOIN INVENTORY_VED_ITEM II ON II.ID_INVENTORY_VED_GLOBAL = IV.ID_INVENTORY_VED_GLOBAL
INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = II.ID_SCALING_RATIO
WHERE IV.ID_INVENTORY_SVED_GLOBAL = @ID_GLOBAL 
GROUP BY II.ID_GOODS, 
    (CASE WHEN @USE_VAT = 1 THEN II.VAT_SUP ELSE 0 END), 
    ROUND((CASE WHEN @CONST = 'SAL' THEN II.PRICE_SAL ELSE II.PRICE_SUP END) * (CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR), 2)

CREATE INDEX #INVENTORY_VED$ID_GOODS$PRICE$VAT_SUP ON #INVENTORY_VED(ID_GOODS, PRICE, VAT_SUP)

INSERT INTO #LOT(ID_GOODS, PRICE, QUANTITY, RETAIL_SUM, VAT_SUP)
SELECT ID_GOODS, PRICE, QUANTITY, RETAIL_SUM, VAT_SUP FROM #INVENTORY_VED I
WHERE NOT EXISTS(SELECT TOP 1 1 FROM #LOT L 
    WHERE L.ID_GOODS = I.ID_GOODS AND L.PRICE = I.PRICE AND L.VAT_SUP = I.VAT_SUP)

UPDATE L SET QUANTITY = I.QUANTITY, RETAIL_SUM = I.RETAIL_SUM
FROM #LOT L
INNER JOIN #INVENTORY_VED I ON I.ID_GOODS = L.ID_GOODS AND I.PRICE = L.PRICE AND I.VAT_SUP = L.VAT_SUP

DECLARE @OKEI_CODE VARCHAR(40), @NAME VARCHAR(100)
SELECT TOP 1 @OKEI_CODE = OKEI_CODE, @NAME = NAME FROM UNIT WHERE MNEMOCODE = 'BOX' 

SELECT G.ID_GOODS,
	GOODS_NAME = G.NAME,
	GOODS_CODE = G.CODE,
	OKEI_CODE = @OKEI_CODE,
	UNIT_NAME = @NAME,
	RETAIL_PRICE = L.PRICE,
	QUANTITY = L.QUANTITY,
	RETAIL_SUM = L.RETAIL_SUM,
    QUANTITY_DOC = L.QUANTITY_DOC,
    RET_SUM_DOC = L.RET_SUM_DOC
FROM #LOT L
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
ORDER BY G.NAME
RETURN 0
GO

exec REPEX_INV3 @XMLPARAM = N'<XML><ID_GLOBAL>042cf993-e84a-4709-a999-d8893893cf2f</ID_GLOBAL></XML>'
-- exec REPEX_INV3 '<XML><ID_GLOBAL>042CF993-E84A-4709-A999-D8893893CF2F</ID_GLOBAL></XML>'
