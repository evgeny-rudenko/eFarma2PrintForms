SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('REPEX_ACC_RETURN_TO_CONTRACTOR') IS NULL EXEC('CREATE PROCEDURE REPEX_ACC_RETURN_TO_CONTRACTOR AS RETURN')
GO
ALTER PROCEDURE REPEX_ACC_RETURN_TO_CONTRACTOR
	@XMLPARAM NTEXT AS
		
DECLARE	@HDOC INT, @ID_ACT_RETURN_TO_CONTRACTOR BIGINT
DECLARE	@ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL UNIQUEIDENTIFIER
		
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT , @XMLPARAM OUTPUT		
SELECT TOP 1 @ID_ACT_RETURN_TO_CONTRACTOR = ID_ACT_RETURN_TO_CONTRACTOR, @ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL
FROM OPENXML(@HDOC , '/XML') WITH(ID_ACT_RETURN_TO_CONTRACTOR BIGINT 'ID_ACT_RETURN_TO_CONTRACTOR', ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL UNIQUEIDENTIFIER 'ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL')
EXEC SP_XML_REMOVEDOCUMENT @HDOC
		
SELECT TOP 1 FROM_ID = CO.ID_CONTRACTOR ,
	FROM_NAME = CASE WHEN CO.FULL_NAME IS NULL OR CO.FULL_NAME = '' THEN CO.NAME ELSE CO.FULL_NAME END ,
	FROM_FULLNAME = CO.FULL_NAME ,
	FROM_INN = CO.INN ,
	FROM_ADDRESS = CO.ADDRESS ,
	FROM_PHONE = CO.PHONE ,
	FROM_BANK = CO.BANK ,
	FROM_BANKADDRESS = CO.BANK_ADDRESS ,
	FROM_ACCOUNT = CO.ACCOUNT ,
	FROM_CORRACCOUNT = CO.CORR_ACCOUNT ,
	FROM_BIK = CO.BIK
FROM	CONTRACTOR CO
WHERE	CO.ID_CONTRACTOR = (SELECT TOP 1 AC.ID_CONTRACTOR_FROM FROM ACT_RETURN_TO_CONTRACTOR AC WHERE ID_ACT_RETURN_TO_CONTRACTOR = @ID_ACT_RETURN_TO_CONTRACTOR OR ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = @ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL)
		
SELECT TOP 1
	AC_ID = AC.ID_ACT_RETURN_TO_CONTRACTOR ,
	AC_NUMBER = AC.MNEMOCODE ,
	AC_DATE = CONVERT(VARCHAR , AC.DATE , 104) ,
	AC_DATE1 = AC.DATE ,
	AC_STORE = (SELECT TOP 1 S.NAME FROM STORE S WHERE S.ID_STORE = AC.ID_STORE) ,
	TO_ID = CO.ID_CONTRACTOR ,
	TO_NAME = CASE WHEN CO.FULL_NAME IS NULL OR CO.FULL_NAME = '' THEN CO.NAME ELSE CO.FULL_NAME END ,
	TO_FULLNAME = CO.FULL_NAME ,
	TO_INN = CO.INN ,
	TO_ADDRESS = CO.ADDRESS ,
	TO_PHONE = CO.PHONE ,
	TO_BANK = CO.BANK ,
	TO_BANKADDRESS = CO.BANK_ADDRESS ,
	TO_ACCOUNT = CO.ACCOUNT ,
	TO_CORRACCOUNT = CO.CORR_ACCOUNT ,
	TO_BIK = CO.BIK ,
	I_NUMBER = (SELECT TOP 1 COALESCE(I.INCOMING_NUMBER , I.MNEMOCODE , '') FROM INVOICE I WHERE I.ID_INVOICE = AC.ID_DOCUMENT_BASE) ,
	I_DATE = (SELECT TOP 1 COALESCE(CONVERT(VARCHAR , I.INCOMING_DATE , 104) , CONVERT(VARCHAR , I.DOCUMENT_DATE , 104) , '') FROM INVOICE I WHERE I.ID_INVOICE = AC.ID_DOCUMENT_BASE), 
	REASON = R.DESCRIPTION 
FROM	ACT_RETURN_TO_CONTRACTOR AC INNER JOIN CONTRACTOR CO ON CO.ID_CONTRACTOR = AC.ID_CONTRACTOR_TO
LEFT JOIN (SELECT * FROM FN_RETURN_TO_CONTRACTOR_REASON()) AS R ON R.REASON = AC.REASON
WHERE	ID_ACT_RETURN_TO_CONTRACTOR = @ID_ACT_RETURN_TO_CONTRACTOR OR ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = @ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL
ORDER BY AC.REASON DESC
		
SELECT
	G_ID = G.ID_GOODS ,
	G_MODELCODE = G.MNEMOCODE ,
	G_RUSNAME = G.NAME ,
	G_SERIALNUMBER = (SELECT TOP 1 SN.SERIES_NUMBER FROM SERIES SN WHERE SN.ID_SERIES = ISNULL(L.ID_SERIES , 0)) ,
	G_BESTBEFORE = (SELECT TOP 1 CONVERT(VARCHAR , SN.BEST_BEFORE , 104) FROM SERIES SN WHERE SN.ID_SERIES = ISNULL(L.ID_SERIES , 0)) ,
	G_NAMESCALING = dbo.FN_SCALE_NAME_SHORT(ACI.ID_SCALING_RATIO),
	ACI_QUANTITY = ACI.QUANTITY ,
	ACI_PRICESUPP = ACI.PRICE_VAT  ,
	ACI_PVATSUPP = ACI.PRICE_VAT - ACI.PRICE ,
	ACI_SUMSUPP = 0  ,
	ACI_PRICESAL =L.PRICE_SAL  ,
	ACI_PVATSAL = L.PVAT_SAL,
	ACI_SUMSAL = 0 ,
	ACI_SUMDISCOUNT = 0 ,
	ACI_TAXSALE = 0 
FROM GOODS G, LOT L , ACT_RETURN_TO_CONTRACTOR_ITEM ACI
WHERE G.ID_GOODS = ACI.ID_GOODS AND L.ID_LOT_GLOBAL = ACI.ID_LOT_GLOBAL AND (ACI.ID_ACT_RETURN_TO_CONTRACTOR = @ID_ACT_RETURN_TO_CONTRACTOR OR ACI.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = @ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL)
ORDER BY G_RUSNAME
		
RETURN 0
GO

/*
exec REPEX_ACC_RETURN_TO_CONTRACTOR N'<XML>
<ID_ACT_RETURN_TO_CONTRACTOR>236</ID_ACT_RETURN_TO_CONTRACTOR>
</XML>'

*/


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'AccReturnToContractorEx.AccReturnToContractorEx'