SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_INVOICE_OUT_INVOICE') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_INVOICE_OUT_INVOICE AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_INVOICE_OUT_INVOICE
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @ID_GLOBAL UNIQUEIDENTIFIER

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @ID_GLOBAL = ID_GLOBAL
	FROM OPENXML(@HDOC, '/XML') 
	WITH(ID_GLOBAL UNIQUEIDENTIFIER 'ID_GLOBAL')
EXEC SP_XML_REMOVEDOCUMENT @HDOC
 
SELECT
	[CONTRACTOR_FROM_NAME] = CASE WHEN ISNULL(C_FR.FULL_NAME, '') != '' THEN C_FR.FULL_NAME + ', ' + C_FR.[NAME] ELSE C_FR.[NAME] END,
	[CONTRACTOR_FROM_ADDRESS] = C_FR.ADDRESS,
	[CONTRACTOR_FROM_INN] = C_FR.INN + ISNULL('/' + C_FR.KPP, ''),

	[GCONTRACTOR] = CASE WHEN ISNULL(C_FR.FULL_NAME, '') != '' THEN C_FR.FULL_NAME ELSE C_FR.[NAME] END + ', Адрес: ' + C_FR.ADDRESS + ', Структурное подразделение: ' + S.NAME,
	[CONTRACTOR_TO_NAME] = CASE WHEN ISNULL(C_P.FULL_NAME, '') != '' THEN C_P.FULL_NAME ELSE C_P.[NAME] END,
	[CONTRACTOR_TO_ADDRESS] = C_P.ADDRESS,
	[CONTRACTOR_TO_INN] = C_P.INN + ISNULL('/' + C_P.KPP, ''),

	[GCONTRACTOR_TO_NAME] = CASE WHEN ISNULL(C_TO.FULL_NAME, '') != '' THEN C_TO.FULL_NAME ELSE C_TO.[NAME] END,
	[GCONTRACTOR_TO_ADDRESS] = C_TO.ADDRESS,

	[INVOICE_OUT_NAME] = I.MNEMOCODE,
	[INVOICE_OUT_DATE] = I.DATE,
	[SUMM_WITHOUT_TAX] = I.SUM_SAL - I.SVAT_SAL,
	[SUMM_TAX] = I.SVAT_SAL,
	[SUMM_WITH_TAX] = I.SUM_SAL
FROM INVOICE_OUT I
	INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE
	INNER JOIN CONTRACTOR C_FR ON C_FR.ID_CONTRACTOR = S.ID_CONTRACTOR
	INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
	INNER JOIN CONTRACTOR C_P ON C_P.ID_CONTRACTOR = I.ID_PAYER
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL

DECLARE @IS_SUP BIT
DECLARE @IS_USE_VAT BIGINT
SELECT 
	@IS_SUP = IS_SUPPLIER,
	@IS_USE_VAT = C_TO.USE_VAT
FROM INVOICE_OUT I
	INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL

--select @is_sup, @is_use_vat

IF (@IS_SUP = 1)
BEGIN
	IF (@IS_USE_VAT = 1)
	BEGIN

	SELECT
		[GOODS_NAME] = G.NAME,
		[UNIT_NAME] = U.SHORT_NAME,
		[QUANTITY] = II.QUANTITY,
		[PRICE_SAL] = L.PRICE_SUP - L.PVAT_SUP,
		[SUM_SAL_WITHOUT_VAT] = II.QUANTITY * (L.PRICE_SUP - L.PVAT_SUP),
		[VAT_SAL] = CASE WHEN L.PVAT_SUP = 0 THEN CAST('Без НДС' AS VARCHAR(10)) ELSE CAST(L.VAT_SUP AS VARCHAR(9)) + '%' END,
		[PSUM_SAL] = II.QUANTITY * L.PVAT_SUP,
		[SUM_SAL] = II.QUANTITY * L.PRICE_SUP,
		[COUNTRY] = C.NAME,
		GTD_NUMBER = L.GTD_NUMBER
	FROM INVOICE_OUT_ITEM II
		INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
		INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
		LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
		LEFT JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
		INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO 
		INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
	WHERE II.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
	ORDER BY GOODS_NAME

	END
	ELSE
	BEGIN
	SELECT
		[GOODS_NAME] = G.NAME,
		[UNIT_NAME] = U.SHORT_NAME,
		[QUANTITY] = II.QUANTITY,
		[PRICE_SAL] = (L.PRICE_SUP / (100 + ISNULL(TT.TAX_RATE, 0))) * 100,
		[SUM_SAL_WITHOUT_VAT] = (L.PRICE_SUP / (100 + ISNULL(TT.TAX_RATE, 0))) * 100 * II.QUANTITY,
		[VAT_SAL] = CASE WHEN ISNULL(TT.TAX_RATE, 0) = 0 THEN CAST('Без НДС' AS VARCHAR(10)) ELSE CAST(ISNULL(TT.TAX_RATE, 0) AS VARCHAR(9)) + '%' END,
		[PSUM_SAL] = II.QUANTITY * ISNULL(TT.TAX_RATE, 0) * L.PRICE_SUP / (100 + ISNULL(TT.TAX_RATE, 0)),
		[SUM_SAL] = II.QUANTITY * L.PRICE_SUP,
		[COUNTRY] = C.NAME,
		GTD_NUMBER = L.GTD_NUMBER
	FROM INVOICE_OUT_ITEM II
		INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
		INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
		LEFT JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = G.ID_TAX_TYPE
		LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
		LEFT JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
		INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO 
		INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
	WHERE II.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
	ORDER BY GOODS_NAME
	END
END
ELSE
BEGIN
SELECT
	[GOODS_NAME] = G.NAME,
	[UNIT_NAME] = U.SHORT_NAME,
	[QUANTITY] = II.QUANTITY,
	[PRICE_SAL] = II.PRICE_SAL - II.PVAT_SAL,
	[SUM_SAL_WITHOUT_VAT] = II.SUM_SAL - II.PSUM_SAL,
	[VAT_SAL] = CASE WHEN II.PSUM_SAL = 0 THEN CAST('Без НДС' AS VARCHAR(10)) ELSE CAST(L.VAT_SAL AS VARCHAR(9)) + '%' END,
	--[PSUM_SAL] = II.PSUM_SAL,
	[PSUM_SAL] = L.PVAT_SAL * II.QUANTITY,
	[SUM_SAL] = II.SUM_SAL,
	[COUNTRY] = C.NAME,
	GTD_NUMBER = L.GTD_NUMBER
FROM INVOICE_OUT_ITEM II
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
	INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
	LEFT JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO 
	INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
WHERE II.ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL
ORDER BY GOODS_NAME
END

DECLARE @BUSINESS_OWNER VARCHAR(100)
	,@SQL NVARCHAR(200)
	,@CONTRACTOR BIGINT
SELECT TOP 1 @CONTRACTOR = ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1

SET @SQL = N'SELECT @BUSINESS_OWNER = BUSINESS_OWNER
	FROM CONTRACTOR
	WHERE ID_CONTRACTOR = @CONTRACTOR'
	
IF (COL_LENGTH('CONTRACTOR', 'BUSINESS_OWNER') IS NOT NULL) 
EXEC SP_EXECUTESQL @SQL, N'@CONTRACTOR BIGINT, @BUSINESS_OWNER VARCHAR(100) OUT', @CONTRACTOR=@CONTRACTOR, @BUSINESS_OWNER=@BUSINESS_OWNER OUT


SELECT
	DIR = DIRECTOR_FIO,
	BUH = BUH_FIO,
	BUSINESS_OWNER = @BUSINESS_OWNER
FROM CONTRACTOR
WHERE ID_CONTRACTOR = @CONTRACTOR

RETURN 0
GO

--exec REPEX_INVOICE_OUT_INVOICE '<XML><ID_GLOBAL>08BCD418-C210-44A2-B9FB-608E9FD10455</ID_GLOBAL></XML>'
--exec REPEX_INVOICE_OUT_INVOICE '<XML><ID_GLOBAL>C6482C27-5216-4C35-B645-525B91FFE749</ID_GLOBAL></XML>'
--select * from INVOICE_OUT

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'InvoiceOutInvoiceEx.InvoiceOutInvoiceEx'
