IF (OBJECT_ID('[REPEX_SHIPPING]') IS NULL) EXEC ('CREATE PROCEDURE [REPEX_SHIPPING] AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_SHIPPING]
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME,
    @ALL_SUPPLIER BIT, @ALL_PROGRAM BIT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO
    FROM OPENXML(@HDOC, '/XML') WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO')

    SELECT * INTO #SUPPLIER FROM OPENXML(@HDOC, '//ID_SUPPLIER') 
    WITH(ID_SUPPLIER BIGINT '.') WHERE ID_SUPPLIER <> 0
    IF @@ROWCOUNT = 0 SET @ALL_SUPPLIER = 1 ELSE SET @ALL_SUPPLIER = 0

    SELECT * INTO #PROGRAM FROM OPENXML(@HDOC, '//ID_TASK_PROGRAM_GLOBAL') 
    WITH(ID_TASK_PROGRAM_GLOBAL UNIQUEIDENTIFIER '.') WHERE ID_TASK_PROGRAM_GLOBAL IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_PROGRAM = 1 ELSE SET @ALL_PROGRAM = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT
    CM.DOC_NUM,
    NAME_CONTRACTS = CON.[NAME],
    NAMBER_STORE = CAST(NULL AS VARCHAR(40)),
    SUMM = SUM(CM.SUM_SAL),
    T.PROGRAM_NAME
FROM CONTRACTS C 
INNER JOIN CONTRACTS_MOVEMENT CM ON CM.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL
INNER JOIN CONTRACTOR CON ON CON.ID_CONTRACTOR = C.ID_CONTRACTOR
LEFT JOIN TASK_PROGRAM T ON T.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL
WHERE (@ALL_SUPPLIER = 1 OR EXISTS(SELECT TOP 1 1 FROM #SUPPLIER WHERE #SUPPLIER.ID_SUPPLIER = C.ID_CONTRACTOR))
    AND (@ALL_PROGRAM = 1 OR EXISTS(SELECT TOP 1 1 FROM #PROGRAM WHERE #PROGRAM.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL))
	AND C.TYPE = 'SUPPLY'	
	AND CM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
GROUP BY CM.DOC_NUM, CON.[NAME], T.PROGRAM_NAME

RETURN 0
GO
--exec REPEX_SHIPPING @xmlParam=N'<XML><DATE_FR>2010-01-30T15:02:20.437</DATE_FR><DATE_TO>2010-03-30T15:02:20.437</DATE_TO></XML>'


