IF (OBJECT_ID('[REPEX_INVOICE_OUT]') IS NULL) EXEC ('CREATE PROCEDURE [REPEX_INVOICE_OUT] AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_INVOICE_OUT]
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME,
    @ALL_CONTRACTOR BIT, @ALL_STORE BIT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO
    FROM OPENXML(@HDOC, '/XML') WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO')

    SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
    WITH(ID_CONTRACTOR BIGINT '.') WHERE ID_CONTRACTOR IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1 ELSE SET @ALL_CONTRACTOR = 0

    SELECT * INTO #STORE FROM OPENXML(@HDOC, '//ID_STORE') 
    WITH(ID_STORE BIGINT '.') WHERE ID_STORE IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_STORE = 1 ELSE SET @ALL_STORE = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT
    G.ID_GOODS,
    GOODS_NAME = G.[NAME],
    C_TO.ID_CONTRACTOR,
    CONTRACTOR_NAME = C_TO.[NAME],
    SUM_SAL = SUM(II.SUM_SAL)
FROM INVOICE_OUT I
INNER JOIN INVOICE_OUT_ITEM II ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT TOP 1 1 FROM #CONTRACTOR WHERE #CONTRACTOR.ID_CONTRACTOR = I.ID_CONTRACTOR_TO))
    AND (@ALL_STORE = 1 OR EXISTS(SELECT TOP 1 1 FROM #STORE WHERE #STORE.ID_STORE = I.ID_STORE))
    AND I.DOC_DATE BETWEEN @DATE_FR AND @DATE_TO
GROUP BY G.ID_GOODS, G.[NAME], C_TO.ID_CONTRACTOR, C_TO.[NAME]

RETURN 0
GO
exec REPEX_INVOICE_OUT @xmlParam=N'<XML></XML>'


