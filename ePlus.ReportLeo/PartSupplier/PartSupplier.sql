IF (OBJECT_ID('[REPEX_PART_SUPPLIER]') IS NULL) EXEC ('CREATE PROCEDURE [REPEX_PART_SUPPLIER] AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_PART_SUPPLIER]
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME,
    @ALL_CONTRACTOR BIT, @ALL_STORE BIT, @ALL_GOODS_GROUP BIT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO
    FROM OPENXML(@HDOC, '/XML') WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO')

    SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
    WITH(ID_CONTRACTOR BIGINT '.') WHERE ID_CONTRACTOR IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1 ELSE SET @ALL_CONTRACTOR = 0

    SELECT * INTO #STORE FROM OPENXML(@HDOC, '//ID_STORE') 
    WITH(ID_STORE BIGINT '.') WHERE ID_STORE IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_STORE = 1 ELSE SET @ALL_STORE = 0

    SELECT * INTO #GOODS_GROUP FROM OPENXML(@HDOC, '//ID_GOODS_GROUP') 
    WITH(ID_GOODS_GROUP BIGINT '.') WHERE ID_GOODS_GROUP IS NOT NULL

    IF @@ROWCOUNT = 0 SET @ALL_GOODS_GROUP = 1 
    ELSE BEGIN
            insert into #GOODS_GROUP
            select distinct t.id_goods_group 
            from FN_GOODS_GROUP_CHILD_GROUPS(null) t
            inner join goods_group gg on gg.id_goods_group = t.id_goods_group_parent and gg.DATE_DELETED IS NULL
            where exists(select null from #GOODS_GROUP t1 where t1.ID_GOODS_GROUP = gg.id_goods_group)
            and not exists(select null from #GOODS_GROUP g where g.ID_GOODS_GROUP = t.ID_GOODS_GROUP)
        SET @ALL_GOODS_GROUP = 0
    END

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT Y = YEAR(I.DOCUMENT_DATE), M = MONTH(I.DOCUMENT_DATE),
	MONTH_STR = CASE 
		WHEN MONTH(I.[DOCUMENT_DATE]) = 1 THEN 'январь'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 2 THEN 'февраль'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 3 THEN 'март'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 4 THEN 'апрель'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 5 THEN 'май'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 6 THEN 'июнь'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 7 THEN 'июль'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 8 THEN 'август'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 9 THEN 'сентябрь'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 10 THEN 'октябрь'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 11 THEN 'ноябрь'
		WHEN MONTH(I.[DOCUMENT_DATE]) = 12 THEN 'декабрь' ELSE '' END,
    SUM_SUPPLIER = SUM(II.SUPPLIER_SUM_VAT), --Закупка всего (руб.),
	SUPPLIER_PRICE_VAT = SUM(CASE WHEN T.ID_GOODS IS NULL 
		THEN SUPPLIER_SUM_VAT ELSE 0 END), --Закупка нелекарственных средств (руб.)
	SUM_SUPPLIER_C = SUM(CASE WHEN C.ID_CONTRACTOR IS NOT NULL 
		THEN II.SUPPLIER_SUM_VAT ELSE 0 END), --Закупка у контрагента (руб.)
	PART_NO_LS = (SUM(CASE WHEN T.ID_GOODS IS NULL 
		THEN SUPPLIER_SUM_VAT ELSE 0 END) / SUM(II.SUPPLIER_SUM_VAT)) * 100, --Доля нелекарств в общей закупке, %
	PART_C_TOTAL = (SUM(CASE WHEN C.ID_CONTRACTOR IS NOT NULL 
		THEN II.SUPPLIER_SUM_VAT ELSE 0 END) / SUM(II.SUPPLIER_SUM_VAT)) * 100, --Доля контрагента в общей закупке (%)
	PART_C_NO_LS =  (SUM(CASE WHEN C.ID_CONTRACTOR IS NOT NULL AND T.ID_GOODS IS NULL
		THEN II.SUPPLIER_SUM_VAT ELSE 0 END) / SUM(CASE WHEN T.ID_GOODS IS NULL 
		THEN SUPPLIER_SUM_VAT ELSE 0 END)) * 100 --Доля контрагента в закупке нелекарств (%)
FROM INVOICE I
INNER JOIN INVOICE_ITEM II ON II.ID_INVOICE = I.ID_INVOICE
LEFT JOIN (SELECT DISTINCT ID_GOODS FROM GOODS_2_GROUP G2G
        INNER JOIN #GOODS_GROUP GG ON GG.ID_GOODS_GROUP = G2G.ID_GOODS_GROUP
        WHERE G2G.DATE_DELETED IS NULL) T ON T.ID_GOODS = II.ID_GOODS
LEFT JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
WHERE (@ALL_STORE = 1 OR EXISTS(SELECT TOP 1 1 FROM #STORE WHERE #STORE.ID_STORE = I.ID_STORE))
	AND I.DOCUMENT_STATE = 'PROC'
    AND I.DOCUMENT_DATE BETWEEN @DATE_FR AND @DATE_TO
GROUP BY YEAR(I.DOCUMENT_DATE), MONTH(I.DOCUMENT_DATE)
ORDER BY Y, M


RETURN 0
GO
--exec REPEX_PART_SUPPLIER @xmlParam=N'<XML></XML>'


