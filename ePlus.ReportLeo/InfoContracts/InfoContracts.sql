IF (OBJECT_ID('[REPEX_INFO_CONTRACTS]') IS NULL) EXEC ('CREATE PROCEDURE [REPEX_INFO_CONTRACTS] AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_INFO_CONTRACTS]
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME,
    @ALL_STORE BIT, @ALL_PROGRAM BIT, @ALL_CONTRACTS BIT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO
    FROM OPENXML(@HDOC, '/XML') WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO')

    SELECT * INTO #STORE FROM OPENXML(@HDOC, '//ID_STORE') 
    WITH(ID_STORE BIGINT '.') WHERE ID_STORE <> 0
    IF @@ROWCOUNT = 0 SET @ALL_STORE = 1 ELSE SET @ALL_STORE = 0

    SELECT * INTO #PROGRAM FROM OPENXML(@HDOC, '//ID_TASK_PROGRAM_GLOBAL') 
    WITH(ID_TASK_PROGRAM_GLOBAL UNIQUEIDENTIFIER '.') WHERE ID_TASK_PROGRAM_GLOBAL IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_PROGRAM = 1 ELSE SET @ALL_PROGRAM = 0

    SELECT * INTO #CONTRACTS FROM OPENXML(@HDOC, '//ID_CONTRACTS_GLOBAL') 
    WITH(ID_CONTRACTS_GLOBAL UNIQUEIDENTIFIER '.') WHERE ID_CONTRACTS_GLOBAL IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_CONTRACTS = 1 ELSE SET @ALL_CONTRACTS = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT C.ID_CONTRACTS_GLOBAL,
    CONTRACTOR_CODE = C.[NAME],
    S.MNEMOCODE,
    TP.ID_TASK_PROGRAM_GLOBAL,
    TP.PROGRAM_NAME,
    CONTRACTOR_NAME = CONT.[NAME],
    REQUEST_NAME = MAX(C.REQ_AMOUNT),
    PN = SUM(CASE WHEN CODE_OP IN ('INVOICE', 'IMPORT_REMAINS', 'PC_REBIND') THEN CM.SUM_SUP ELSE 0 END),
    OUT_IN_FIRM = SUM(CASE WHEN CODE_OP IN ('ACT_R2C') THEN CM.SUM_SUP ELSE 0 END) * (-1),
    PO = CAST(0 AS MONEY),
    OUT_IN_STORE = CAST(0 AS MONEY),
    PROCENT = CAST(NULL AS MONEY)
INTO #TEMP
FROM CONTRACTS C 
INNER JOIN CONTRACTS_MOVEMENT CM ON CM.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL
INNER JOIN CONTRACTOR CONT ON CONT.ID_CONTRACTOR = C.ID_CONTRACTOR
LEFT JOIN TASK_PROGRAM TP ON TP.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL
LEFT JOIN STORE S ON S.ID_STORE = TP.ID_STORE
LEFT JOIN LOT L ON L.ID_LOT_GLOBAL = CM.ID_LOT_GLOBAL
WHERE 
    (@ALL_STORE = 1 OR L.ID_LOT_GLOBAL IS NULL OR EXISTS(SELECT TOP 1 1 FROM #STORE WHERE #STORE.ID_STORE = L.ID_STORE))
    AND (@ALL_PROGRAM = 1 OR EXISTS(SELECT TOP 1 1 FROM #PROGRAM WHERE #PROGRAM.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL))
    AND (@ALL_CONTRACTS = 1 OR EXISTS(SELECT TOP 1 1 FROM #CONTRACTS WHERE #CONTRACTS.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL))
	AND CM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
  	AND C.TYPE = 'PURCHASE'	
GROUP BY C.ID_CONTRACTS_GLOBAL,  C.[NAME], S.MNEMOCODE, TP.ID_TASK_PROGRAM_GLOBAL, TP.PROGRAM_NAME, CONT.[NAME]
ORDER BY S.MNEMOCODE, CONTRACTOR_CODE

UPDATE T SET 
    T.PO = T.PO + TT.PO,
    T.OUT_IN_STORE = T.OUT_IN_STORE + TT.OUT_IN_STORE
FROM #TEMP T
INNER JOIN (
    SELECT 
        CG1.ID_CONTRACTS_GLOBAL,
        C2.ID_TASK_PROGRAM_GLOBAL,
        PO = SUM(CASE WHEN CM2.CODE_OP IN ('INVOICE_OUT') THEN CM2.SUM_SAL ELSE 0 END),
        OUT_IN_STORE = SUM(CASE WHEN CM2.CODE_OP IN ('ACT_R2B') THEN CM2.SUM_SAL ELSE 0 END) * (-1)
    FROM CONTRACTS_GOODS CG1 
    INNER JOIN GOODS G1 ON G1.ID_GOODS = CG1.ID_GOODS
    INNER JOIN GOODS G2 ON G2.[NAME] = G1.[NAME]
    INNER JOIN CONTRACTS_GOODS CG2 ON CG2.ID_GOODS = G2.ID_GOODS AND CG1.PRICE = CG2.PRICE
    INNER JOIN CONTRACTS C2 ON C2.ID_CONTRACTS_GLOBAL = CG2.ID_CONTRACTS_GLOBAL
    INNER JOIN CONTRACTS_MOVEMENT CM2 ON CM2.ID_CONTRACTS_GOODS_GLOBAL = CG2.ID_CONTRACTS_GOODS_GLOBAL
    WHERE C2.TYPE = 'SUPPLY'
    	AND CM2.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
    GROUP BY CG1.ID_CONTRACTS_GLOBAL, C2.ID_TASK_PROGRAM_GLOBAL) TT ON TT.ID_CONTRACTS_GLOBAL = T.ID_CONTRACTS_GLOBAL 
        AND TT.ID_TASK_PROGRAM_GLOBAL = T.ID_TASK_PROGRAM_GLOBAL

SELECT * FROM #TEMP

RETURN 0
GO
--exec REPEX_INFO_CONTRACTS @xmlParam=N'<XML><DATE_FR>2000-01-30T15:02:20.437</DATE_FR><DATE_TO>2010-03-30T15:02:20.437</DATE_TO></XML>'

--GO
--SELECT * FROM CONTRACTS_MOVEMENT WHERE ID_GOODS IS NULL
