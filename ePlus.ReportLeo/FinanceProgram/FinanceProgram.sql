IF (OBJECT_ID('[REPEX_FINANCE_PROGRAM]') IS NULL) EXEC ('CREATE PROCEDURE [REPEX_FINANCE_PROGRAM] AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_FINANCE_PROGRAM]
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME, @ALL_PROGRAM BIT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO
    FROM OPENXML(@HDOC, '/XML') WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO')

    SELECT * INTO #PROGRAM FROM OPENXML(@HDOC, '//ID_TASK_PROGRAM_GLOBAL') 
    WITH(ID_TASK_PROGRAM_GLOBAL UNIQUEIDENTIFIER '.') WHERE ID_TASK_PROGRAM_GLOBAL IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_PROGRAM = 1 ELSE SET @ALL_PROGRAM = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT 
    T.ID_TASK_PROGRAM_GLOBAL,
    T.PROGRAM_NAME,
    NAME_CONTRACTOR = C.[NAME],
    NAME_STORE = CAST(NULL AS VARCHAR(100)),
    C.REQ_AMOUNT,
    INVOICE_QUANTITY = ISNULL((SELECT  SUM(CM.QUANTITY / ISNULL(SR.DENOMINATOR, 1)) FROM CONTRACTS_MOVEMENT CM
        LEFT JOIN LOT L ON L.ID_LOT_GLOBAL = CM.ID_LOT_GLOBAL
        LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
        WHERE CM.CODE_OP = 'INVOICE' AND CM.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL), 0),
    INVOICE_OUT_QUANTITY = ISNULL((SELECT  SUM(CM.QUANTITY / ISNULL(SR.DENOMINATOR, 1)) FROM CONTRACTS_MOVEMENT CM
        LEFT JOIN LOT L ON L.ID_LOT_GLOBAL = CM.ID_LOT_GLOBAL
        LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
        WHERE CM.CODE_OP = 'AR_2C' AND CM.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL), 0),
    SHIPPING_QUANTITY = ISNULL((SELECT SUM(CM.QUANTITY / ISNULL(SR.DENOMINATOR, 1)) FROM CONTRACTS CC
        INNER JOIN CONTRACTS_MOVEMENT CM ON CM.ID_CONTRACTS_GLOBAL = CC.ID_CONTRACTS_GLOBAL
        INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CM.ID_LOT_GLOBAL
        INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
        WHERE C.TYPE = 'SUPPLY' AND CM.CODE_OP = 'INVOICE_OUT' 
            AND CC.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL AND L.ID_SUPPLIER = C.ID_CONTRACTOR), 0),
    SHIPPING_OUT_QUANTITY = ISNULL((SELECT  SUM(CM.QUANTITY / ISNULL(SR.DENOMINATOR, 1)) FROM CONTRACTS CC
        INNER JOIN CONTRACTS_MOVEMENT CM ON CM.ID_CONTRACTS_GLOBAL = CC.ID_CONTRACTS_GLOBAL
        INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CM.ID_LOT_GLOBAL
        INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
        WHERE C.TYPE = 'SUPPLY' AND CM.CODE_OP = 'AR_2B' 
            AND CC.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL AND L.ID_SUPPLIER = C.ID_CONTRACTOR), 0)
FROM CONTRACTS C 
INNER JOIN TASK_PROGRAM T ON T.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL
INNER JOIN CONTRACTOR CON ON CON.ID_CONTRACTOR = C.ID_CONTRACTOR
WHERE (@ALL_PROGRAM = 1 OR EXISTS(SELECT TOP 1 1 FROM #PROGRAM WHERE #PROGRAM.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL))
    AND C.TYPE = 'PURCHASE'
	AND EXISTS(SELECT TOP 1 1 FROM CONTRACTS_MOVEMENT CMM WHERE CMM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
		AND CMM.CODE_OP IN ('INVOICE', 'AR_2C', 'INVOICE_OUT', 'AR_2B'))	
ORDER BY T.PROGRAM_NAME

RETURN 0
GO
--exec REPEX_FINANCE_PROGRAM @xmlParam=N'<XML><DATE_FR>2010-01-30T15:02:20.437</DATE_FR><DATE_TO>2010-03-30T15:02:20.437</DATE_TO></XML>'


