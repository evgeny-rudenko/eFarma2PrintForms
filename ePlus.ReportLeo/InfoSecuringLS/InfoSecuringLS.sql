IF OBJECT_ID('FN_INFO_SECURING_LS_P') IS NOT NULL EXEC('DROP FUNCTION DBO.FN_INFO_SECURING_LS_P')
GO
CREATE FUNCTION DBO.FN_INFO_SECURING_LS_P(@BEST_BEFORE DATETIME, @DATE_PRODUCTION DATETIME)
RETURNS VARCHAR(20)
AS
BEGIN
    RETURN CAST(ABS((ROUND(CAST((CAST(@BEST_BEFORE AS BIGINT) - CAST(GETDATE() AS BIGINT)) AS MONEY) / 30, 1) /
        ((CAST((CAST(@BEST_BEFORE AS BIGINT) - CAST(@DATE_PRODUCTION AS BIGINT)) AS MONEY)) / 30))) * 100 AS VARCHAR(20))
END
GO
---------------------------------------------------------------------------------------
IF OBJECT_ID('FN_INFO_SECURING_LS_M') IS NOT NULL EXEC('DROP FUNCTION DBO.FN_INFO_SECURING_LS_M')
GO
CREATE FUNCTION DBO.FN_INFO_SECURING_LS_M(@BEST_BEFORE DATETIME)
RETURNS VARCHAR(20)
AS
BEGIN
    RETURN CAST(ROUND(ABS((CAST((CAST(@BEST_BEFORE AS BIGINT) - CAST(GETDATE() AS BIGINT)) AS MONEY)) / 30), 1) AS VARCHAR(20))
END
GO
---------------------------------------------------------------------------------------
IF (OBJECT_ID('[REPEX_INFO_SECURING_LS]') IS NULL) EXEC ('CREATE PROCEDURE [REPEX_INFO_SECURING_LS] AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_INFO_SECURING_LS]
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT
DECLARE @DATE_BEGIN DATETIME, @DATE_1P DATETIME, @DATE_2P DATETIME,
    @ALL_PROGRAM BIT, @ALL_CONTRACTS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    SELECT TOP 1 @DATE_BEGIN = DATE_BEGIN, 
        @DATE_1P = DATE_1P, @DATE_2P = DATE_2P
    FROM OPENXML(@HDOC, '/XML') WITH(DATE_BEGIN DATETIME 'DATE_BEGIN',
        DATE_1P DATETIME 'DATE_1P', DATE_2P DATETIME 'DATE_2P')

    SELECT * INTO #PROGRAM FROM OPENXML(@HDOC, '//ID_TASK_PROGRAM_GLOBAL') 
    WITH(ID_TASK_PROGRAM_GLOBAL UNIQUEIDENTIFIER '.') WHERE ID_TASK_PROGRAM_GLOBAL IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_PROGRAM = 1 ELSE SET @ALL_PROGRAM = 0

    SELECT * INTO #CONTRACTS FROM OPENXML(@HDOC, '//ID_CONTRACTS_GLOBAL') 
    WITH(ID_CONTRACTS_GLOBAL UNIQUEIDENTIFIER '.') WHERE ID_CONTRACTS_GLOBAL IS NOT NULL
    IF @@ROWCOUNT = 0 SET @ALL_CONTRACTS = 1 ELSE SET @ALL_CONTRACTS = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT CM.ID_CONTRACTS_MOVEMENT, ID_PERIOD = CASE WHEN CM.DATE_OP < @DATE_BEGIN THEN 1
        WHEN CM.DATE_OP >= @DATE_BEGIN AND CM.DATE_OP < @DATE_1P THEN 2
        WHEN CM.DATE_OP >= @DATE_1P AND CM.DATE_OP <= @DATE_2P THEN 3 ELSE 0 END,
    PERIOD = CASE WHEN CM.DATE_OP < @DATE_BEGIN THEN 'По состоянию на ' + CONVERT(VARCHAR, @DATE_BEGIN, 104) + ' г.'
        WHEN CM.DATE_OP >= @DATE_BEGIN AND CM.DATE_OP < @DATE_1P THEN 'За 1-е полугодие ' + CAST(YEAR(@DATE_1P) AS VARCHAR) + 'г. по состоянию на ' + CONVERT(VARCHAR, @DATE_1P, 104) + ' г.'
        WHEN CM.DATE_OP >= @DATE_1P AND CM.DATE_OP <= @DATE_2P THEN 'За 2-е полугодие ' + CAST(YEAR(@DATE_2P) AS VARCHAR) + 'г. по состоянию на ' + CONVERT(VARCHAR, @DATE_2P, 104) + ' г.'
        ELSE '' END,
    NAME_MNN = S.[NAME],
    NAME_TN =  G.[NAME] + ' (' + P.[NAME] + ') ' + ISNULL(CON.[NAME], '')  + ' (' + CONVERT(VARCHAR, C.START_DATE, 104) + ')',
    PRICE = CG.PRICE,
    QUANTITY = CG.QUANTITY,
    QUANTITY_LOT = CM.QUANTITY,
    SERIES = CONVERT(VARCHAR, SER.BEST_BEFORE, 104) + ' (' 
        + DBO.FN_INFO_SECURING_LS_P(SER.BEST_BEFORE, SER.DATE_PRODUCTION) + '%, ' 
        + DBO.FN_INFO_SECURING_LS_M(SER.BEST_BEFORE) + 'мес.)'
FROM CONTRACTS C 
INNER JOIN CONTRACTS_GOODS CG ON CG.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL
INNER JOIN CONTRACTS_MOVEMENT CM ON CM.ID_CONTRACTS_GOODS_GLOBAL = CG.ID_CONTRACTS_GOODS_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = CG.ID_GOODS
INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
INNER JOIN SUBSTANCE S ON S.ID_SUBSTANCE = G.ID_SUBSTANCE
LEFT JOIN LOT L ON L.ID_LOT_GLOBAL = CM.ID_LOT_GLOBAL
LEFT JOIN CONTRACTOR CON ON CON.ID_CONTRACTOR = L.ID_SUPPLIER
LEFT JOIN SERIES SER ON SER.ID_SERIES = L.ID_SERIES
WHERE (@ALL_PROGRAM = 1 OR EXISTS(SELECT TOP 1 1 FROM #PROGRAM WHERE #PROGRAM.ID_TASK_PROGRAM_GLOBAL = C.ID_TASK_PROGRAM_GLOBAL))
    AND (@ALL_CONTRACTS = 1 OR EXISTS(SELECT TOP 1 1 FROM #CONTRACTS WHERE #CONTRACTS.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL))
    AND CM.DATE_OP <= @DATE_2P
    AND C.TYPE = 'PURCHASE'

RETURN 0
GO
--exec REPEX_INFO_SECURING_LS @xmlParam=N'<XML><DATE_BEGIN>2010-01-01T00:00:00.000</DATE_BEGIN><DATE_1P>2010-07-01T00:00:00.000</DATE_1P><DATE_2P>2010-12-31T00:00:00.000</DATE_2P></XML>'
