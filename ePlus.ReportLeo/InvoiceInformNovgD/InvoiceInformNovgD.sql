SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID(N'DBO.REPEX_INVOICE_INFORMNOVG_D') IS NULL) EXEC (N'CREATE PROCEDURE DBO.REPEX_INVOICE_INFORMNOVG_D AS RETURN')
GO


ALTER PROCEDURE DBO.REPEX_INVOICE_INFORMNOVG_D
    @XMLPARAM NTEXT AS

DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @DATE_PER_FR DATETIME
DECLARE @DATE_PER_TO DATETIME
DECLARE @SORT_DOC BIT
DECLARE @ALL_CONTRACTORS_TO BIT
DECLARE @ALL_CONTRACTORS BIT
DECLARE @ALL_STORES BIT
DECLARE @ALL_CONTRACTS BIT


DECLARE @HDOC INT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM


SELECT
	@DATE_FROM = DATE_FROM,
	@DATE_TO = DATE_TO,
	@SORT_DOC = SORT_DOC,
	@DATE_PER_FR = DATE_PER_FR,
	@DATE_PER_TO = DATE_PER_TO
FROM OPENXML(@HDOC, '/XML', 2) WITH(
	DATE_FROM DATETIME 'DATE_FROM',
	DATE_TO DATETIME 'DATE_TO',
	DATE_PER_FR DATETIME 'DATE_PER_FR',
	DATE_PER_TO DATETIME 'DATE_PER_TO',
	SORT_DOC BIT 'SORT_DOC'
)

EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_PER_FR OUT, @DATE_PER_TO OUT
EXEC USP_RANGE_DAYS @DATE_PER_FR OUT, @DATE_PER_TO OUT
--
SELECT * INTO #CONTRACTORS_TO
FROM OPENXML(@HDOC, '//XML/CONTRACTORS_TO/ID_CONTRACTOR', 2) WITH (ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTORS_TO = 1


SELECT * INTO #CONTRACTS
FROM OPENXML(@HDOC, '//XML/CONTRACTS/ID_CONTRACTS', 2) WITH (ID_CONTRACTS VARCHAR(38) '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTS = 1


CREATE TABLE #TASK_PROGRAM(
ID_TASK_PROGRAM_GLOBAL UNIQUEIDENTIFIER,
ID_CONTRACTS_GLOBAL UNIQUEIDENTIFIER
)
INSERT INTO #TASK_PROGRAM
SELECT ID_TASK_PROGRAM_GLOBAL, ID_CONTRACTS_GLOBAL
FROM CONTRACTS C WHERE C.ID_CONTRACTS_GLOBAL IN (SELECT ID_CONTRACTS FROM  #CONTRACTS)

EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT G.ID_SUBSTANCE, G.ID_GOODS,
    CG.ID_CONTRACTS_GOODS_GLOBAL,
    MNN = CASE WHEN CHARINDEX('*', S.[NAME])>0 THEN
            CASE WHEN CHARINDEX('[', S.[NAME])>0 THEN SUBSTRING(S.[NAME], 1,CHARINDEX('[', S.[NAME]) - 1)
            ELSE SUBSTRING(S.[NAME], 1,CHARINDEX('*', S.[NAME]) - 1) END
            WHEN CHARINDEX('(', S.[NAME])>0 THEN SUBSTRING(S.[NAME], 1,CHARINDEX('(', S.[NAME]) - 1)
            WHEN CHARINDEX('[', S.[NAME])>0 THEN SUBSTRING(S.[NAME], 1,CHARINDEX('[', S.[NAME]) - 1)
    	  ELSE S.[NAME] END, 
    TN_NAME = G.[NAME],
	PLAN_PRICE = CG.PRICE,
	PLAN_QUANT = CG.QUANTITY,
    PLAN_SUM = CG.PRICE * CG.QUANTITY,
    QUANTITY_FACT = CMM.QUANTITY_FACT, 
	SUMM_FACT = CMM.SUMM_FACT,
    CONTRACTOR = CMM_OUT.CONTRACTOR,
    QUANTITY_OUT = CMM_OUT.QUANTITY_OUT, 
	SUMM_OUT = CMM_OUT.SUMM_OUT
FROM CONTRACTS C 
INNER JOIN CONTRACTS_GOODS CG ON CG.ID_CONTRACTS_GLOBAL = C.ID_CONTRACTS_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = CG.ID_GOODS
INNER JOIN SUBSTANCE S ON S.ID_SUBSTANCE = G.ID_SUBSTANCE
LEFT JOIN (SELECT CM.ID_CONTRACTS_GOODS_GLOBAL, QUANTITY_FACT = SUM(CM.QUANTITY), SUMM_FACT = SUM(CM.SUM_SAL)
    FROM CONTRACTS_MOVEMENT CM 
    WHERE CM.DATE_OP BETWEEN @DATE_PER_FR AND @DATE_PER_TO
    GROUP BY CM.ID_CONTRACTS_GOODS_GLOBAL) CMM ON CMM.ID_CONTRACTS_GOODS_GLOBAL = CG.ID_CONTRACTS_GOODS_GLOBAL
LEFT JOIN (
    SELECT GG.ID_SUBSTANCE, GG.ID_GOODS, GG.[NAME],
        CON.ID_CONTRACTOR,
        CONTRACTOR = CON.[NAME], 
        QUANTITY_OUT = SUM(CM.QUANTITY), 
        SUMM_OUT = SUM(CM.SUM_SAL)  
    FROM TASK_PROGRAM TP
    INNER JOIN CONTRACTS CC ON CC.ID_TASK_PROGRAM_GLOBAL = TP.ID_TASK_PROGRAM_GLOBAL
    INNER JOIN CONTRACTOR CON ON CON.ID_CONTRACTOR = CC.ID_CONTRACTOR
    INNER JOIN CONTRACTS_MOVEMENT CM ON CM.ID_CONTRACTS_GLOBAL = CC.ID_CONTRACTS_GLOBAL
    INNER JOIN GOODS GG ON GG.ID_GOODS = CM.ID_GOODS
    WHERE TP.ID_TASK_PROGRAM_GLOBAL = CC.ID_TASK_PROGRAM_GLOBAL
        AND CM.DATE_OP BETWEEN @DATE_PER_FR AND @DATE_PER_TO
        AND CC.TYPE = 'SUPPLY'
    GROUP BY GG.ID_SUBSTANCE, GG.ID_GOODS, CON.ID_CONTRACTOR, CON.[NAME], GG.[NAME]) CMM_OUT
         ON CMM_OUT.ID_SUBSTANCE = G.ID_SUBSTANCE 
            AND ((CG.CONTROL_TYPE = 'TN' AND CMM_OUT.[NAME] = G.[NAME])
                OR (CG.CONTROL_TYPE = 'LS' AND CMM_OUT.ID_GOODS = G.ID_GOODS))
WHERE C.TYPE = 'PURCHASE'
    AND (@ALL_CONTRACTS = 1 OR C.ID_CONTRACTS_GLOBAL IN (SELECT ID_CONTRACTS FROM #CONTRACTS))
    AND (@ALL_CONTRACTORS_TO = 1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO))
SELECT
    COMPANY = CASE
        WHEN FULL_NAME IS NULL THEN NAME 
        WHEN FULL_NAME = '' THEN NAME 
    ELSE FULL_NAME END,
    DIRECTOR = DIRECTOR_FIO
FROM CONTRACTOR 
WHERE ID_CONTRACTOR = DBO.FN_CONST_CONTRACTOR_SELF()

SELECT
    SUPPL_NAME = CASE
        WHEN CT.FULL_NAME IS NULL THEN CT.NAME 
        WHEN CT.FULL_NAME = '' THEN CT.NAME 
    ELSE CT.FULL_NAME END,
    CONTRACT = C.[NAME] + ' Œ“ ' +CONVERT(VARCHAR(10), C.START_DATE, 104)
FROM CONTRACTOR CT
INNER JOIN CONTRACTS C ON C.ID_CONTRACTOR = CT.ID_CONTRACTOR
WHERE C.ID_CONTRACTS_GLOBAL  IN (SELECT ID_CONTRACTS FROM #CONTRACTS)

RETURN 0
GO
--exec REPEX_INVOICE_INFORMNOVG_D 
--@xmlParam=N'<XML><DATE_FROM>2010-03-30T14:41:15.406</DATE_FROM><DATE_TO>2010-04-12T14:41:15.406</DATE_TO><CONTRACTS></CONTRACTS><CONTRACTORS_TO></CONTRACTORS_TO><STORES></STORES><SORT_DOC>0</SORT_DOC></XML>'