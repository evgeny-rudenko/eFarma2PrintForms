SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('REPEX_INVOICE_OUT_PTORG12') IS NULL EXEC('CREATE PROCEDURE REPEX_INVOICE_OUT_PTORG12 AS RETURN')
GO
ALTER PROCEDURE REPEX_INVOICE_OUT_PTORG12(
    @XMLPARAM NTEXT
) AS

DECLARE @HDOC INT, @ID_INVOICE_OUT_GLOBAL UNIQUEIDENTIFIER

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1 @ID_INVOICE_OUT_GLOBAL = ID_INVOICE_OUT_GLOBAL
    FROM OPENXML(@HDOC, '/XML') WITH(        
        ID_INVOICE_OUT_GLOBAL UNIQUEIDENTIFIER 'ID_INVOICE_OUT_GLOBAL'
    )
EXEC SP_XML_REMOVEDOCUMENT @HDOC

    -- —œ»—Œ  “Œ¬¿–Œ¬ ¬ –¿—’ŒƒÕŒ… Õ¿ À¿ƒÕŒ…
    SELECT
        GOODS = G.NAME + ' [' + P.NAME + ', ' + COALESCE(C.NAME, '') + ']',
        GOODS_FEDERAL_CODE = G.FEDERAL_CODE,
        UNIT_NAME = U.NAME + '(' + CAST(SR.NUMERATOR AS VARCHAR) + '/' + CAST(SR.DENOMINATOR AS VARCHAR) + ')',
        OKEI_CODE = U.OKEI_CODE,
        QUANTITY = II.QUANTITY,
        CONTRACTOR_PRICE_PER_UNIT = II.PRICE_SAL,
        SUM_CONTRACTOR_PRICE = II.SUM_SAL - II.PSUM_SAL,
        VAT_RATE = L.VAT_SAL,
        SUM_VAT = II.PSUM_SAL,
        SUM_CONTRACTOR_PRICE_VAT = II.SUM_SAL
    FROM DBO.INVOICE_OUT I(NOLOCK)
        INNER JOIN DBO.INVOICE_OUT_ITEM II(NOLOCK) ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
        INNER JOIN DBO.LOT L(NOLOCK) ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
        INNER JOIN DBO.GOODS G(NOLOCK) ON G.ID_GOODS = L.ID_GOODS
        INNER JOIN DBO.PRODUCER P(NOLOCK) ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT OUTER JOIN DBO.COUNTRY C(NOLOCK) ON C.ID_COUNTRY = P.ID_COUNTRY
        INNER JOIN DBO.SCALING_RATIO SR(NOLOCK) ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
        INNER JOIN DBO.UNIT U(NOLOCK) ON SR.ID_UNIT = U.ID_UNIT
    WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_INVOICE_OUT_GLOBAL
    ORDER BY GOODS

    SELECT TOP 1
        INVOICE_NUMBER = I.MNEMOCODE, -- ÕŒÃ≈– –¿—’ŒƒÕŒ… Õ¿ ÀŒƒÕŒ…
        INVICE_DATE = I.DATE, -- ƒ¿“¿ –¿—’ŒƒÕŒ… Õ¿ À¿ƒÕŒ…
        SUPPLIER_NAME = COALESCE(NULLIF(RTRIM(LTRIM(SUP.FULL_NAME)),''), SUP.[NAME], ''), -- »Ãﬂ œŒ—“¿¬Ÿ» ¿
        SUPPLIER_OKPO = SUP.OKPO, -- Œ œŒ œŒ—“¿¬Ÿ» ¿
        SUPPLIER_DESCRIPT = -- Œœ»—¿Õ»≈ œŒ—“¿¬Ÿ» ¿
            CASE WHEN ISNULL(SUP.FULL_NAME, '') != '' THEN SUP.FULL_NAME ELSE SUP.[NAME] END +
            COALESCE(' »ÕÕ:' + SUP.INN, '') +
            COALESCE(' ¿‰ÂÒ:' + SUP.ADDRESS, '') +
            COALESCE(' “ÂÎÂÙÓÌ:' + SUP.PHONE, '') +
            COALESCE('  œœ:' + SUP.KPP, '') +
            COALESCE(' ¡‡ÌÍ:' + SUP.BANK + ' ' + SUP.BANK_ADDRESS , ' ¡‡ÌÍ:' + SUP.BANK, ' ¡‡ÌÍ:' + SUP.BANK_ADDRESS, '') +
            COALESCE(' /c:' + SUP.ACCOUNT, '') +
            COALESCE(' Í/Ò:' + SUP.CORR_ACCOUNT, '') +
            COALESCE(' ¡» :' + SUP.BIK, ''),
        CUSTOMER_NAME = COALESCE(NULLIF(RTRIM(LTRIM(CONT.FULL_NAME)),''), CONT.[NAME], ''),
        CUSTOMER_OKPO = CONT.OKPO,
        CUSTOMER_DESCRIPT = 
            CASE WHEN ISNULL(CONT.FULL_NAME, '') != '' THEN CONT.FULL_NAME ELSE CONT.NAME END +
            COALESCE(' »ÕÕ:' + CONT.INN, '') +
            COALESCE(' ¿‰ÂÒ:' + CONT.ADDRESS, '') +
            COALESCE(' “ÂÎÂÙÓÌ:' + CONT.PHONE, '') +
            COALESCE('  œœ:' + CONT.KPP, '') +
            COALESCE(' ¡‡ÌÍ:' + CONT.BANK + ' ' + CONT.BANK_ADDRESS, ' ¡‡ÌÍ:' + CONT.BANK, ' ¡‡ÌÍ:' + CONT.BANK_ADDRESS, '') +
            COALESCE(' /c:' + CONT.ACCOUNT, '') +
            COALESCE(' Í/Ò:' + CONT.CORR_ACCOUNT, '') +
            COALESCE(' ¡» :' + CONT.BIK, '') , 
        PAYER_NAME = COALESCE(NULLIF(LTRIM(RTRIM(PAY.FULL_NAME)),''), PAY.[NAME], ''),
        STORE_NAME = S.NAME, -- — À¿ƒ
        INCOMING_NUMBER = -- ƒŒ ”Ã≈Õ“-Œ—ÕŒ¬¿Õ»≈
            COALESCE(INPUT.MNEMOCODE, M.MNEMOCODE, '') +
            COALESCE(' ÓÚ ' + CONVERT(VARCHAR, INPUT.DOCUMENT_DATE, 4), ' ÓÚ ' + CONVERT(VARCHAR, M.DATE, 4), '')
    FROM DBO.INVOICE_OUT I(NOLOCK)
        INNER JOIN DBO.STORE S(NOLOCK) ON S.ID_STORE = I.ID_STORE
        INNER JOIN DBO.CONTRACTOR SUP(NOLOCK) ON SUP.ID_CONTRACTOR = S.ID_CONTRACTOR
        INNER JOIN DBO.CONTRACTOR CONT(NOLOCK) ON CONT.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
        LEFT JOIN DBO.CONTRACTOR PAY(NOLOCK) ON PAY.ID_CONTRACTOR = I.ID_PAYER
        LEFT JOIN DBO.INVOICE INPUT(NOLOCK)ON INPUT.ID_INVOICE_GLOBAL = I.ID_DOC_BASE_GLOBAL
        LEFT JOIN DBO.MOVEMENT M(NOLOCK) ON M.ID_MOVEMENT_GLOBAL = I.ID_DOC_BASE_GLOBAL
    WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_INVOICE_OUT_GLOBAL

    -- —“–Œ ¿ — —≈–»≈… » ƒ¿“Œ… —≈–“»‘» ¿÷»»
    SELECT TOP 1
        CERTIFICATION_INFO = CAST(NULL AS NVARCHAR(256)), --CONVERT(NVARCHAR(12), C.CERT_DATE, 104) + ' ‚˚‰‡Ì ' + ISSUED_BY,
        BEST_BEFORE = CAST(NULL AS DATETIME), --S.BEST_BEFORE,
        SERIES_NUMBER = CAST(NULL AS NVARCHAR(256)) --S.SERIES_NUMBER
    /*FROM DBO.INVOICE I(NOLOCK)
        INNER JOIN DBO.INVOICE_ITEM II(NOLOCK) ON II.ID_INVOICE = I.ID_INVOICE
        INNER JOIN DBO.SERIES S(NOLOCK) ON S.ID_SERIES = II.ID_SERIES
        INNER JOIN DBO.CERTIFICATE C(NOLOCK) ON C.ID_SERIES = S.ID_SERIES
    WHERE I.ID_INVOICE = @ID_INVOICE*/

RETURN 0
GO