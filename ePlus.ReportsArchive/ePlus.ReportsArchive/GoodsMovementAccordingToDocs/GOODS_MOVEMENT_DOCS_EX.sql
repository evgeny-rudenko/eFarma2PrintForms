IF OBJECT_ID('DBO.GOODS_MOVEMENT_DOCS_EX') IS NULL EXEC('CREATE PROCEDURE DBO.GOODS_MOVEMENT_DOCS_EX AS RETURN')
GO
ALTER PROCEDURE GOODS_MOVEMENT_DOCS_EX
     (@XMLPARAM NTEXT) AS
/* PARAMETERS */
DECLARE @HDOC INT
DECLARE @DATE_FROM DATETIME, @DATE_TO DATETIME
DECLARE @IS_SHORT BIT
DECLARE @ALL_CONTRACTORS BIT, @ALL_STORES BIT, @ALL_GOODS BIT, @ALL_SUPPLIERS BIT, @ALL_PRODUCERS BIT
DECLARE @STORES TABLE(ID_CONTRACTOR BIGINT, ID_STORE BIGINT)

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 
		@DATE_FROM = DATE_FROM, 
		@DATE_TO = DATE_TO,
		@IS_SHORT = IS_SHORT
	FROM OPENXML(@HDOC, '/XML') 
	WITH(
		DATE_FROM DATETIME 'DATE_FROM', 
		DATE_TO DATETIME 'DATE_TO',
		IS_SHORT BIT 'IS_SHORT')
	
	/* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ — À¿ƒŒ¬ */

	INSERT INTO @STORES
	SELECT 
		S.ID_CONTRACTOR,				
		A.ID_STORE
	FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.')A 
    INNER JOIN STORE S ON S.ID_STORE = A.ID_STORE	
	WHERE A.ID_STORE <> 0 

-- 	/* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬  ŒÕ“–¿√≈Õ“Œ¬ */
	SELECT * INTO #CONTRACTOR 
	FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
	WITH(ID_CONTRACTOR BIGINT '.') WHERE ID_CONTRACTOR <> 0
	
	IF (SELECT COUNT(*) FROM #CONTRACTOR)=0 SET @ALL_CONTRACTORS = 1 ELSE SET @ALL_CONTRACTORS = 0

    INSERT INTO @STORES
    SELECT 
        C.ID_CONTRACTOR,
        S.ID_STORE
    FROM #CONTRACTOR C
    INNER JOIN STORE S ON S.ID_CONTRACTOR = C.ID_CONTRACTOR
    AND NOT EXISTS (SELECT NULL FROM @STORES S1 WHERE S1.ID_CONTRACTOR=C.ID_CONTRACTOR)
	WHERE C.ID_CONTRACTOR <> 0 and s.is_accountable<>0

 	IF(SELECT COUNT(*) FROM @STORES)=0 SET @ALL_STORES = 1 ELSE SET @ALL_STORES = 0
	
	/* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ “Œ¬¿–Œ¬ */
	SELECT * INTO #GOODS 
	FROM OPENXML(@HDOC, '//ID_GOODS') 
	WITH(ID_GOODS BIGINT '.') WHERE ID_GOODS <> 0
	
	IF (SELECT COUNT(*) FROM #GOODS)=0 SET @ALL_GOODS = 1 ELSE SET @ALL_GOODS = 0

	/* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ œŒ—“¿¬Ÿ» Œ¬ */
	SELECT * INTO #SUPPLIER 
	FROM OPENXML(@HDOC, '//ID_SUPPLIER') 
	WITH(ID_SUPPLIER BIGINT '.') WHERE ID_SUPPLIER <> 0
	
	IF (SELECT COUNT(*) FROM #SUPPLIER)=0 SET @ALL_SUPPLIERS = 1 ELSE SET @ALL_SUPPLIERS = 0

	/* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ œ–Œ»«¬Œƒ»“≈À≈… */
	SELECT * INTO #PRODUCER 
	FROM OPENXML(@HDOC, '//ID_PRODUCER') 
	WITH(ID_PRODUCER BIGINT '.') WHERE ID_PRODUCER <> 0
	
	IF (SELECT COUNT(*) FROM #PRODUCER)=0 SET @ALL_PRODUCERS = 1 ELSE SET @ALL_PRODUCERS = 0

	EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT
	EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT

--
    DECLARE @CONTRACTOR_STRING VARCHAR(4000)
    DECLARE @STORE_STRING VARCHAR(4000)
    DECLARE @GOODS_STRING VARCHAR(4000)
    DECLARE @SUPPLIER_STRING VARCHAR(4000)
    DECLARE @PRODUCER_STRING VARCHAR(4000)

	IF (@ALL_CONTRACTORS = 0)
	BEGIN
	    SELECT 
	        @CONTRACTOR_STRING = ISNULL(@CONTRACTOR_STRING+' ,'+C.NAME, C.NAME)
	    FROM (SELECT DISTINCT ID_CONTRACTOR FROM #CONTRACTOR) T
	    INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR
	END
	ELSE BEGIN SELECT @CONTRACTOR_STRING = '‚ÒÂ' END

	IF (@ALL_STORES = 0)
	BEGIN
	    SELECT 
	        @STORE_STRING = ISNULL(@STORE_STRING+' ,'+S.NAME, S.NAME)
	    FROM (SELECT DISTINCT ID_STORE FROM @STORES) T
	    INNER JOIN STORE S ON S.ID_STORE = T.ID_STORE
	END
	ELSE BEGIN SELECT @STORE_STRING = '‚ÒÂ' END

	IF (@ALL_GOODS = 0)
	BEGIN
	    SELECT 
	        @GOODS_STRING = ISNULL(@GOODS_STRING+' ,'+G.NAME, G.NAME)
	    FROM (SELECT DISTINCT ID_GOODS FROM #GOODS) T
	    INNER JOIN GOODS G ON G.ID_GOODS = T.ID_GOODS
	END
	ELSE BEGIN SELECT @GOODS_STRING = '‚ÒÂ' END

	IF (@ALL_SUPPLIERS = 0)
	BEGIN
	    SELECT 
	        @SUPPLIER_STRING = ISNULL(@SUPPLIER_STRING+' ,'+C.NAME, C.NAME)
	    FROM (SELECT DISTINCT ID_SUPPLIER FROM #SUPPLIER) T
	    INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_SUPPLIER
	END
	ELSE BEGIN SELECT @SUPPLIER_STRING = '‚ÒÂ' END

	IF (@ALL_PRODUCERS = 0)
	BEGIN
	    SELECT 
	        @PRODUCER_STRING = ISNULL(@PRODUCER_STRING+' ,'+P.NAME, P.NAME)
	    FROM (SELECT DISTINCT ID_PRODUCER FROM #PRODUCER) T
	    INNER JOIN PRODUCER P ON P.ID_PRODUCER = T.ID_PRODUCER
	END
	ELSE BEGIN SELECT @PRODUCER_STRING = '‚ÒÂ' END

--Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ
	SELECT 
		ID_GOODS = G.ID_GOODS,
		GOODS_NAME = G.NAME,
		QUANTITY_ADD = SUM(LM.QUANTITY_ADD * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)),
		QUANTITY_SUB = SUM(LM.QUANTITY_SUB * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))
	INTO #QUANTITY_FROM
	FROM LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	LEFT JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	LEFT JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = LM.ID_TABLE
	WHERE (LM.DATE_OP <= @DATE_FROM) 
		AND (LM.QUANTITY_ADD!=0 OR LM.QUANTITY_SUB!=0) 
		AND (@ALL_GOODS = 1 OR G.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS))
		AND (@ALL_STORES = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM @STORES))
		AND (@ALL_SUPPLIERS = 1 OR L.ID_SUPPLIER IN (SELECT ID_SUPPLIER FROM #SUPPLIER))
		AND (@ALL_PRODUCERS = 1 OR G.ID_PRODUCER IN (SELECT ID_PRODUCER FROM #PRODUCER))
	GROUP BY G.ID_GOODS, G.NAME

--Œ—“¿“Œ  Õ¿  ŒÕ≈÷
	SELECT 
		ID_GOODS = G.ID_GOODS,
		GOODS_NAME = G.NAME,
		QUANTITY_ADD = SUM(LM.QUANTITY_ADD * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)),
		QUANTITY_SUB = SUM(LM.QUANTITY_SUB * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))
	INTO #QUANTITY_TO
	FROM LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	LEFT JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	LEFT JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = LM.ID_TABLE
	WHERE (LM.DATE_OP <= @DATE_TO) 
		AND (LM.QUANTITY_ADD!=0 OR LM.QUANTITY_SUB!=0) 
		AND (@ALL_GOODS = 1 OR G.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS))
		AND (@ALL_STORES = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM @STORES))
		AND (@ALL_SUPPLIERS = 1 OR L.ID_SUPPLIER IN (SELECT ID_SUPPLIER FROM #SUPPLIER))
		AND (@ALL_PRODUCERS = 1 OR G.ID_PRODUCER IN (SELECT ID_PRODUCER FROM #PRODUCER))
	GROUP BY G.ID_GOODS, G.NAME

--ƒ¬»∆≈Õ»≈
	SELECT 
		ID_GOODS = G.ID_GOODS,
		GOODS_NAME = G.NAME,
		QUANTITY_FROM = QF.QUANTITY_ADD - QF.QUANTITY_SUB,
		DATE_OP = LM.DATE_OP,	
		DOC_NAME = TD.DESCRIPTION + ' ' + L.LOT_NAME,
		QUANTITY_ADD = LM.QUANTITY_ADD * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR),
		QUANTITY_SUB = LM.QUANTITY_SUB * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR),
		QUANTITY_TO = QT.QUANTITY_ADD - QT.QUANTITY_SUB
	FROM LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	LEFT JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	LEFT JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = LM.ID_TABLE
	LEFT JOIN #QUANTITY_FROM QF ON QF.ID_GOODS = G.ID_GOODS
	LEFT JOIN #QUANTITY_TO QT ON QT.ID_GOODS = G.ID_GOODS
	WHERE (DATE_OP BETWEEN @DATE_FROM AND @DATE_TO) 
		AND (LM.QUANTITY_ADD!=0 OR LM.QUANTITY_SUB!=0) 
		AND (@ALL_GOODS = 1 OR G.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS))
		AND (@ALL_STORES = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM @STORES))
		AND (@ALL_SUPPLIERS = 1 OR L.ID_SUPPLIER IN (SELECT ID_SUPPLIER FROM #SUPPLIER))
		AND (@ALL_PRODUCERS = 1 OR G.ID_PRODUCER IN (SELECT ID_PRODUCER FROM #PRODUCER))
	ORDER BY G.NAME, LM.DATE_OP

	SELECT TOTAL_SUM_FROM = SUM(QUANTITY_ADD - QUANTITY_SUB) FROM #QUANTITY_FROM
	SELECT TOTAL_SUM_TO = SUM(QUANTITY_ADD - QUANTITY_SUB) FROM #QUANTITY_TO

-- ¬€¬Œƒ »Õ‘€ ¬ ÿ¿œ ”
	SELECT
		CONTRACTOR_STRING = @CONTRACTOR_STRING,
		STORE_STRING = @STORE_STRING,
		GOODS_STRING = @GOODS_STRING,
		SUPPLIER_STRING = @SUPPLIER_STRING,
		PRODUCER_STRING = @PRODUCER_STRING

RETURN 0
GO

--exec GOODS_MOVEMENT_DOCS_EX @xmlParam = N'<XML><DATE_FROM>2008-11-15T00:00:00.000</DATE_FROM><DATE_TO>2008-11-18T00:00:00.000</DATE_TO></XML>'
--exec GOODS_MOVEMENT_DOCS_EX @xmlParam = N'<XML><DATE_FROM>2008-11-10T00:00:00.000</DATE_FROM><DATE_TO>2008-11-20T00:00:00.000</DATE_TO></XML>'
--exec GOODS_MOVEMENT_DOCS_EX @xmlParam = N'<XML><DATE_FROM>2008-11-01T00:00:00.000</DATE_FROM><DATE_TO>2008-11-20T00:00:00.000</DATE_TO><ID_STORE>152</ID_STORE><ID_CONTRACTOR>5270</ID_CONTRACTOR><ID_CONTRACTOR>5275</ID_CONTRACTOR></XML>'
--exec GOODS_MOVEMENT_DOCS_EX @xmlParam = N'<XML><DATE_FROM>2008-11-01T00:00:00.000</DATE_FROM><DATE_TO>2008-11-20T00:00:00.000</DATE_TO><ID_STORE>154</ID_STORE></XML>'
--exec GOODS_MOVEMENT_DOCS_EX @xmlParam = N'<XML><DATE_FROM>2008-11-15T00:00:00.000</DATE_FROM><DATE_TO>2008-11-20T00:00:00.000</DATE_TO><ID_CONTRACTOR>5270</ID_CONTRACTOR><ID_STORE>154</ID_STORE><ID_STORE>153</ID_STORE></XML>'

--exec GOODS_MOVEMENT_DOCS_EX @xmlParam = N'<XML><DATE_FROM>2008-11-01T00:00:00.000</DATE_FROM><DATE_TO>2008-11-20T00:00:00.000</DATE_TO><ID_CONTRACTOR>5274</ID_CONTRACTOR></XML>'

