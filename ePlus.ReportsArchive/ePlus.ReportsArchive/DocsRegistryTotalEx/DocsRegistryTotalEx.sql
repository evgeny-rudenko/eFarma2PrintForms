SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF

IF (OBJECT_ID('DBO.FN_GET_SUP_VAT_STRING') IS NULL) EXEC ('CREATE FUNCTION DBO.FN_GET_SUP_VAT_STRING() RETURNS BIGINT AS BEGIN RETURN 0 END')
GO
ALTER FUNCTION DBO.FN_GET_SUP_VAT_STRING(
	@ID_INVOICE_GLOBAL UNIQUEIDENTIFIER
) RETURNS VARCHAR(4000)
AS
BEGIN
	DECLARE @VAT_SUP VARCHAR(4000)
	SELECT
		@VAT_SUP = CASE 
				WHEN CHARINDEX(REPLACE(CONVERT(VARCHAR(4000),II.SUPPLIER_VAT),'.00','%'), ISNULL(@VAT_SUP,''))=0 
				THEN ISNULL(@VAT_SUP+', '+REPLACE(CONVERT(VARCHAR(4000),II.SUPPLIER_VAT),'.00','%'), REPLACE(CONVERT(VARCHAR(4000),II.SUPPLIER_VAT),'.00','%'))
				ELSE @VAT_SUP
			   END

	FROM INVOICE_ITEM II
	WHERE II.ID_INVOICE_GLOBAL = @ID_INVOICE_GLOBAL
	ORDER BY II.SUPPLIER_VAT
RETURN @VAT_SUP
END
GO

IF (OBJECT_ID('REPEX_DOCSREGISTRY_TOTAL_EX') IS NULL) EXEC ('CREATE PROCEDURE REPEX_DOCSREGISTRY_TOTAL_EX AS RETURN')
GO
ALTER PROCEDURE REPEX_DOCSREGISTRY_TOTAL_EX(
    @XMLPARAM NTEXT
)
AS
DECLARE @DOC_STATE_DESCRIPTION TABLE(
    CODE VARCHAR(4),
    NAME VARCHAR(10)
)
SET NOCOUNT ON

INSERT INTO @DOC_STATE_DESCRIPTION
SELECT 'SAVE', 'Сохранен'
UNION SELECT 'PROC', 'Отработан'
UNION SELECT 'DEL', 'Удален'

DECLARE @DOC_STATE TABLE(
    CODE VARCHAR(4)
) 
INSERT INTO @DOC_STATE
SELECT 'SAVE'
UNION SELECT 'PROC'
UNION SELECT 'DEL'

DECLARE @HDOC INT

DECLARE @USER_DOC_STATE TABLE(
    CODE VARCHAR(4)
)

DECLARE @DOC_TYPE TABLE(
    DOC_TYPE VARCHAR(30)
)

DECLARE @DATE_FROM DATETIME, @DATE_TO DATETIME

DECLARE @STORE_FROM TABLE(
    ID_STORE BIGINT
)

DECLARE @STORE_TO TABLE(
    ID_STORE BIGINT
)

DECLARE @GOODS TABLE(
    ID_GOODS BIGINT
)

DECLARE @CONTRACTOR_FROM TABLE(
    ID_CONTRACTOR BIGINT
)

DECLARE @CONTRACTOR_TO TABLE(
    ID_CONTRACTOR BIGINT
)

DECLARE @ALL_STORES BIT
DECLARE @ALL_GOODS BIT
DECLARE @ALL_CONTRACTORS BIT
DECLARE @SORT_DOC BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    INSERT INTO @USER_DOC_STATE
    SELECT *
    FROM OPENXML(@HDOC, '/XML/DOC_STATE', 2) WITH(
        CODE VARCHAR(4)
    )    

    SELECT
        @DATE_FROM = DATE_FROM,
        @DATE_TO = DATE_TO,
		@SORT_DOC = SORT_DOC
    FROM OPENXML(@HDOC, '/XML',2) WITH(
        DATE_FROM DATETIME,
        DATE_TO DATETIME,
        SORT_DOC BIT 'SORT_DOC' --1 - по типу документа, 0 - по дате
    )

    INSERT INTO @DOC_TYPE
    SELECT *
    FROM OPENXML(@HDOC, '/XML/DOC_TYPE') WITH(
    	DOC_TYPE VARCHAR(30)
    )

    INSERT INTO @STORE_FROM
    SELECT * 
    FROM OPENXML(@HDOC, '/XML/STORE_FROM') WITH(
        ID_STORE BIGINT
    )

    INSERT INTO @STORE_TO
    SELECT * 
    FROM OPENXML(@HDOC, '/XML/STORE_TO') WITH(
        ID_STORE BIGINT
    )

    INSERT INTO @CONTRACTOR_FROM
    SELECT *
    FROM OPENXML(@HDOC, '/XML/CONTRACTOR_FROM') WITH(
        ID_CONTRACTOR BIGINT
    )

    INSERT INTO @CONTRACTOR_TO
    SELECT *
    FROM OPENXML(@HDOC, '/XML/CONTRACTOR_TO') WITH(
        ID_CONTRACTOR BIGINT
    )

    INSERT INTO @GOODS
    SELECT *
    FROM OPENXML(@HDOC, '/XML/GOODS') WITH(
        ID_GOODS BIGINT '.'
    )   

EXEC SP_XML_REMOVEDOCUMENT @HDOC

DELETE 
FROM @DOC_STATE 
WHERE CODE NOT IN (SELECT CODE FROM @USER_DOC_STATE UDS) 
      AND 1<=(SELECT COUNT(*) FROM @USER_DOC_STATE)


EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT

EXEC USP_DOCUMENT_VED_IMPORT @XMLPARAM

IF (@SORT_DOC = 0)
	SELECT 
		DV.*,
		DSD.NAME 
	FROM DOCUMENT_VED DV
	INNER JOIN @DOC_STATE_DESCRIPTION DSD ON DSD.CODE = DV.DOC_STATE
	WHERE DV.DOC_STATE IN (SELECT CODE FROM @DOC_STATE) AND DV.DOC_TYPE<>'CASH_SESSION'
	UNION
	SELECT 
		DV.*,
		NAME = 'Закрыта'
	FROM DOCUMENT_VED DV
	WHERE DV.DOC_TYPE='CASH_SESSION'
	ORDER BY DV.DOC_DATE,DV.DOC_TYPE_NAME
ELSE
	SELECT 
		DV.*,
		DSD.NAME 
	FROM DOCUMENT_VED DV
	INNER JOIN @DOC_STATE_DESCRIPTION DSD ON DSD.CODE = DV.DOC_STATE
	WHERE DV.DOC_STATE IN (SELECT CODE FROM @DOC_STATE) AND DV.DOC_TYPE<>'CASH_SESSION'
	UNION
	SELECT 
		DV.*,
		NAME = 'Закрыта'
	FROM DOCUMENT_VED DV
	WHERE DV.DOC_TYPE='CASH_SESSION'	
	ORDER BY DV.DOC_TYPE_NAME,DV.DOC_DATE
RETURN
GO
--exec REPEX_DOCSREGISTRY_TOTAL_EX @xmlParam = N'<XML><DATE_FROM>2008-01-01T00:00:00.000</DATE_FROM><DATE_TO>2008-11-06T00:00:00.000</DATE_TO><SORT_DOC>0</SORT_DOC></XML>'
--exec REPEX_DOCSREGISTRY_TOTAL_EX @xmlParam = N'<XML><DATE_FROM>2008-07-21T00:00:00.000</DATE_FROM><DATE_TO>2008-07-22T00:00:00.000</DATE_TO><DOC_TYPE>CASH_SESSION</DOC_TYPE><DOC_STATE><CODE>SAVE</CODE></DOC_STATE><DOC_STATE><CODE>PROC</CODE></DOC_STATE><DOC_STATE><CODE>DEL</CODE></DOC_STATE><SORT_DOC>1</SORT_DOC></XML>'
--exec REPEX_DOCSREGISTRY_TOTAL_EX @xmlParam = N'<XML><DATE_FROM>2008-07-06T00:00:00.000</DATE_FROM><DATE_TO>2008-07-06T00:00:00.000</DATE_TO><DOC_TYPE>INVOICE_OUT</DOC_TYPE><DOC_STATE><CODE>SAVE</CODE></DOC_STATE><DOC_STATE><CODE>PROC</CODE></DOC_STATE><DOC_STATE><CODE>DEL</CODE></DOC_STATE><STORE_FROM>152</STORE_FROM><CONTRACTOR_FROM>5270</CONTRACTOR_FROM><SORT_DOC>1</SORT_DOC></XML>'

-- SELECT * FROM STORE S
-- INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR

--exec REPEX_DOCSREGISTRY_TOTAL_EX @xmlParam = N'<XML><DATE_FROM>2008-11-24T00:00:00.000</DATE_FROM><DATE_TO>2009-02-04T00:00:00.000</DATE_TO><DOC_TYPE>INVOICE_CASH_ORDER</DOC_TYPE><DOC_TYPE>EXPENCE_CASH_ORDER</DOC_TYPE><DOC_STATE><CODE>SAVE</CODE></DOC_STATE><DOC_STATE><CODE>PROC</CODE></DOC_STATE><DOC_STATE><CODE>DEL</CODE></DOC_STATE><SORT_DOC>1</SORT_DOC></XML>'

