IF (OBJECT_ID('USP_EX_TABLE_DATA_LIST') IS NULL) EXEC ('CREATE PROCEDURE USP_EX_TABLE_DATA_LIST AS RETURN')
GO
ALTER PROCEDURE USP_EX_TABLE_DATA_LIST
AS
    SELECT 
        ID_TABLE_DATA, 
        DESCRIPTION 
    FROM TABLE_DATA
    WHERE ID_TABLE_DATA IN (2,3,6,7,8,12,13,19,20,21,22,23,24,25,26)
RETURN
GO

IF (OBJECT_ID('DBO.FN_GET_SUP_VAT_STRING') IS NULL) EXEC ('CREATE FUNCTION DBO.FN_GET_SUP_VAT_STRING() RETURNS BIGINT AS BEGIN RETURN 0 END')
GO
ALTER FUNCTION DBO.FN_GET_SUP_VAT_STRING(
	@ID_INVOICE_GLOBAL UNIQUEIDENTIFIER
) RETURNS VARCHAR(4000)
AS
BEGIN
	DECLARE @VAT_SUP VARCHAR(4000)
	SELECT
		@VAT_SUP = CASE 
				WHEN CHARINDEX(REPLACE(CONVERT(VARCHAR(4000),II.SUPPLIER_VAT),'.00','%'), ISNULL(@VAT_SUP,''))=0 
				THEN ISNULL(@VAT_SUP+', '+REPLACE(CONVERT(VARCHAR(4000),II.SUPPLIER_VAT),'.00','%'), REPLACE(CONVERT(VARCHAR(4000),II.SUPPLIER_VAT),'.00','%'))
				ELSE @VAT_SUP
			   END

	FROM INVOICE_ITEM II
	WHERE II.ID_INVOICE_GLOBAL = @ID_INVOICE_GLOBAL
	ORDER BY II.SUPPLIER_VAT
RETURN @VAT_SUP
END
GO

IF (OBJECT_ID('REPEX_DOCSREGISTRY') IS NULL) EXEC ('CREATE PROCEDURE REPEX_DOCSREGISTRY AS RETURN')
GO
ALTER PROCEDURE REPEX_DOCSREGISTRY(
    @XMLPARAM NTEXT
)
AS
DECLARE @DOC_STATE_DESCRIPTION TABLE(
    CODE VARCHAR(4),
    NAME VARCHAR(10)
)
INSERT INTO @DOC_STATE_DESCRIPTION
SELECT 'SAVE', 'Новый'
UNION SELECT 'PROC', 'Отработан'
UNION SELECT 'DEL', 'Удален'

DECLARE @DOC_STATE TABLE(
    CODE VARCHAR(4)
) 
insert into @DOC_STATE
SELECT 'SAVE'
UNION SELECT 'PROC'
UNION SELECT 'DEL'

DECLARE @HDOC INT

DECLARE @USER_DOC_STATE TABLE(
    CODE VARCHAR(4)
)

DECLARE @DOC_TYPE TABLE(
    ID_TABLE_DATA BIGINT
)

DECLARE @DATE_FROM DATETIME, @DATE_TO DATETIME

DECLARE @STORES TABLE(
    ID_STORE BIGINT
)

DECLARE @GOODS TABLE(
    ID_GOODS BIGINT
)


DECLARE @CONTRACTORS TABLE(
    ID_CONTRACTOR BIGINT
)

DECLARE @ALL_STORES BIT
DECLARE @ALL_GOODS BIT
DECLARE @ALL_CONTRACTORS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

    INSERT INTO @USER_DOC_STATE
    SELECT *
    FROM OPENXML(@HDOC, '/XML/DOC_STATE/STATE', 2) WITH(
        CODE VARCHAR(4)
    )    
    
    INSERT INTO @DOC_TYPE
    SELECT *
    FROM OPENXML(@HDOC, '/XML/DOC_TYPE/TYPE',2) WITH(
        ID_TABLE_DATA BIGINT
    )
    
    SELECT
        @DATE_FROM = DATE_FROM,
        @DATE_TO = DATE_TO
    FROM OPENXML(@HDOC, '/XML/PERIOD',2) WITH(
        DATE_FROM DATETIME,
        DATE_TO DATETIME
    )

    INSERT INTO @STORES
    SELECT * 
    FROM OPENXML(@HDOC, '/XML/STORES/STORE',2) WITH(
        ID_STORE BIGINT
    )
    IF (@@ROWCOUNT=0)
        SET @ALL_STORES = 1


    INSERT INTO @CONTRACTORS
    SELECT *
    FROM OPENXML(@HDOC, '/XML/CONTRACTORS/CONTRACTOR', 2) WITH(
        ID_CONTRACTOR BIGINT
    )
    IF (@@ROWCOUNT=0)
        SET @ALL_CONTRACTORS = 1

    INSERT INTO @GOODS
    SELECT *
    FROM OPENXML(@HDOC, '/XML/GOODS_LIST/GOODS', 2) WITH(
        ID_GOODS BIGINT
    )
    IF (@@ROWCOUNT=0)
        SET @ALL_GOODS = 1
   

EXEC SP_XML_REMOVEDOCUMENT @HDOC

DELETE FROM @DOC_STATE WHERE CODE NOT IN (SELECT CODE FROM @USER_DOC_STATE UDS) AND 1<=(SELECT COUNT(*) FROM @USER_DOC_STATE)

EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT

SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = I.DOCUMENT_DATE,
    DOC_NUMBER = I.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = I.INCOMING_NUMBER + ' от '+DBO.FN_DATE_2_VARCHAR(I.INCOMING_DATE),
    SUM_SUP = I.SUM_SUPPLIER,
    SVAT_SUP = I.SVAT_SUPPLIER,
    SUM_SAL = I.SUM_RETAIL,
    SUP_VAT = DBO.FN_GET_SUP_VAT_STRING(I.ID_INVOICE_GLOBAL)
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
INVOICE I
--INNER JOIN INVOICE_ITEM II ON II.ID_INVOICE_GLOBAL = I.ID_INVOICE_GLOBAL
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = I.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 2
AND I.DOCUMENT_DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR I.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR EXISTS (SELECT NULL FROM INVOICE_ITEM II
			      WHERE II.ID_INVOICE_GLOBAL = I.ID_INVOICE_GLOBAL
                              AND II.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS)))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = AR.DATE,
    DOC_NUMBER = AR.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = BASE_DOCUMENT_NAME,
    SUM_SUP = SUM(ARI.PRICE_VAT * ARI.QUANTITY),
    SVAT_SUP = SUM((ARI.PRICE_VAT - ARI.PRICE)*ARI.QUANTITY),
    SUM_SAL = 0,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
ACT_RETURN_TO_CONTRACTOR AR
INNER JOIN ACT_RETURN_TO_CONTRACTOR_ITEM ARI ON ARI.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = AR.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = AR.ID_CONTRACTOR_TO
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = AR.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 3
AND AR.DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR AR.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR ARI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))
GROUP BY TD.DESCRIPTION, MDS.NAME, AR.DATE, AR.MNEMOCODE, C.NAME, BASE_DOCUMENT_NAME

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = AD.DATE,
    DOC_NUMBER = AD.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = BASE_DOCUMENT_NAME,
    SUM_SUP = 0,--I.SUM_SUPPLIER,
    SVAT_SUP = 0,
    SUM_SAL = AD.AMOUNT_VAT,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
ACT_DISASSEMBLING AD
INNER JOIN ACT_DISASSEMBLING_ITEM ADI ON ADI.ID_ACT_DISASSEMBLING_GLOBAL = AD.ID_ACT_DISASSEMBLING_GLOBAL
INNER JOIN STORE S ON S.ID_STORE = AD.ID_STORE
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = AD.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 6
AND AD.DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR AD.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR ADI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = CH.DATE_CHEQUE,
    DOC_NUMBER = CH.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = NULL,
    SUM_SUP = 0,
    SVAT_SUP = 0,
    SUM_SAL = CH.SUMM,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
CHEQUE CH
INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL
INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
INNER JOIN CASH_REGISTER_2_STORE CRS ON CRS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = CR.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = CH.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 7
AND CH.DATE_CHEQUE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR CRS.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR CHI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = M.DATE,
    DOC_NUMBER = M.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = BASE_DOCUMENT_NAME,
    SUM_SUP = M.TOTAL_SUPPLIER_VAT,
    SVAT_SUP = TOTAL_SUPPLIER_VAT - TOTAL_SUPPLIER,
    SUM_SAL = M.TOTAL_SALE,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
MOVEMENT M 
INNER JOIN MOVEMENT_ITEM MI ON MI.ID_MOVEMENT_GLOBAL = M.ID_MOVEMENT_GLOBAL
INNER JOIN STORE S ON S.ID_STORE = M.ID_STORE_TO
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = M.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 8
AND M.DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR M.ID_STORE_FROM IN (SELECT ID_STORE FROM @STORES) OR M.ID_STORE_TO IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR MI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = ARB.DATE,
    DOC_NUMBER = ARB.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = MD.DOC_NUM + ' от '+DBO.FN_DATE_2_VARCHAR(MD.DOC_DATE),
    SUM_SUP = ARB.TOTAL_WITH_VAT_SUPPLIER,
    SVAT_SUP = TOTAL_WITH_VAT_SUPPLIER - TOTAL_SUPPLIER,
    SUM_SAL = ARB.TOTAL_WITH_VAT,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
ACT_RETURN_TO_BUYER ARB
INNER JOIN ACT_RETURN_TO_BUYER_ITEM ARBI ON ARBI.ID_ACT_RETURN_TO_BUYER_GLOBAL = ARB.ID_ACT_RETURN_TO_BUYER_GLOBAL
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = ARB.ID_CONTRACTOR_FROM
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = ARB.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
LEFT JOIN MV_DOCUMENTS MD ON MD.ID_DOCUMENT = ARB.ID_DOCUMENT_BASE AND MD.ID_TABLE = ARB.ID_TABLE_DATA_DOCUMENT_BASE
WHERE DT.ID_TABLE_DATA = 12
AND ARB.DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR ARB.ID_STORE_TO IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR ARBI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = AR.DATE,
    DOC_NUMBER = AR.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = MD.DOC_NUM + ' от '+DBO.FN_DATE_2_VARCHAR(MD.DOC_DATE),
    SUM_SUP = 0,
    SVAT_SUP = 0,
    SUM_SAL = AR.TOTAL_RETAIL,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
ACT_REVALUATION AR
INNER JOIN ACT_REVALUATION_ITEM ARI ON ARI.ID_ACT_REVALUATION_GLOBAL = AR.ID_ACT_REVALUATION_GLOBAL 
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = AR.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = AR.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
LEFT JOIN MV_DOCUMENTS MD ON MD.ID_DOCUMENT = AR.ID_BASE_DOCUMENT AND MD.ID_TABLE = AR.ID_TABLE_DATA_BASE_DOCUMENT
WHERE DT.ID_TABLE_DATA = 13
AND AR.DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR AR.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR ARI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = CS.DATE_CLOSE,
    DOC_NUMBER = CS.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = NULL,
    SUM_SUP = 0,
    SVAT_SUP = 0,
    SUM_SAL = CS.SUM_SALES - CS.SUM_SALES_RETURNS - CS.SUM_PAYMENT+CS.SUM_REQUISITIONING,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
CASH_SESSION CS
INNER JOIN CHEQUE CH ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL
INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL
INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR =CR.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = 'PROC'
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 19
AND CS.DATE_CLOSE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_GOODS =1 OR CHI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = AD.DATE,
    DOC_NUMBER = AD.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = AD.BASE_DOCUMENT_NAME,
    SUM_SUP = 0,
    SVAT_SUP = 0,
    SUM_SAL = AD.RETAIL_SUM_VAT,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
ACT_DEDUCTION AD
INNER JOIN ACT_DEDUCTION_ITEM ADI ON ADI.ID_ACT_DEDUCTION_GLOBAL = AD.ID_ACT_DEDUCTION_GLOBAL
INNER JOIN STORE S ON S.ID_STORE = AD.ID_STORE
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = AD.DOCUMENT_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 20
AND AD.DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR AD.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR ADI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = I.DATE,
    DOC_NUMBER = I.MNEMOCODE,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = I.BASE_DOCUMENT_NAME,
    SUM_SUP = I.SUM_SUP,
    SVAT_SUP = I.SVAT_SUP, -- возможно неправильные данные
    SUM_SAL = I.SUM_SAL,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
INVOICE_OUT I
INNER JOIN INVOICE_OUT_ITEM II ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = I.STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 21
AND I.DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR I.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR L.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = B.DOC_DATE,
    DOC_NUMBER = B.DOC_NUM,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = NULL,
    SUM_SUP = 0,
    SVAT_SUP =0,
    SUM_SAL = SUM(PRICE_SAL * QUANTITY),
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
BILL B
INNER JOIN BILL_ITEM BI ON BI.ID_BILL_GLOBAL = B.ID_BILL_GLOBAL
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = B.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = B.DOC_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 22
AND B.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR B.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR BI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))
GROUP BY TD.DESCRIPTION,MDS.NAME,B.DOC_DATE, B.DOC_NUM,C.NAME

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = IV.DOC_DATE,
    DOC_NUMBER = IV.DOC_NUM,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = NULL,
    SUM_SUP = IV.SUM_SUP,
    SVAT_SUP = IV.SVAT_SUP,
    SUM_SAL = IV.SUM_SAL,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
INVENTORY_VED IV
INNER JOIN INVENTORY_VED_ITEM IVI ON IVI.ID_INVENTORY_VED_GLOBAL = IV.ID_INVENTORY_VED_GLOBAL
INNER JOIN STORE S ON S.ID_STORE = IV.ID_STORE
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = IV.DOC_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 23
AND IV.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR IV.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_GOODS =1 OR IVI.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = ISV.DOC_DATE,
    DOC_NUMBER = ISV.DOC_NUM,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = NULL,
    SUM_SUP = ISV.SUM_SUP,
    SVAT_SUP = ISV.SVAT_SUP,
    SUM_SAL = ISV.SUM_SAL,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
INVENTORY_SVED ISV
INNER JOIN STORE S ON S.ID_STORE = ISV.ID_STORE
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = ISV.DOC_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 24
AND ISV.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR ISV.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = R.DOC_DATE,
    DOC_NUMBER = R.DOC_NUM,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = NULL,
    SUM_SUP = 0,
    SVAT_SUP =0,
    SUM_SAL = 0,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
REQUEST R
INNER JOIN REQUEST_ITEM RI ON RI.ID_REQUEST = R.ID_REQUEST
INNER JOIN GOODS G ON G.ID_GOODS_GLOBAL = RI.ID_GOODS
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = R.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = R.DOC_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 25
AND R.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_GOODS =1 OR G.ID_GOODS IN (SELECT ID_GOODS FROM @GOODS))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

UNION
SELECT
    DOC_TYPE = TD.DESCRIPTION,
    DOCUMENT_STATE = MDS.NAME,

    DOC_DATE = VC.DOC_DATE,
    DOC_NUMBER = VC.DOC_NUM,
    CONTRACTOR_NAME = C.NAME,
    BASE_DOC = NULL,
    SUM_SUP = 0,
    SVAT_SUP =0,
    SUM_SAL = VC.SUM_SAL,
    SUP_VAT = ''
FROM TABLE_DATA TD
INNER JOIN @DOC_TYPE DT ON DT.ID_TABLE_DATA = TD.ID_TABLE_DATA,
VAT_CORRECT VC
INNER JOIN STORE S ON S.ID_STORE = VC.ID_STORE
INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
INNER JOIN @DOC_STATE_DESCRIPTION MDS ON MDS.CODE = VC.DOC_STATE
INNER JOIN @DOC_STATE DS ON DS.CODE = MDS.CODE
WHERE DT.ID_TABLE_DATA = 24
AND VC.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO
AND (@ALL_STORES =1 OR VC.ID_STORE IN (SELECT ID_STORE FROM @STORES))
AND (@ALL_CONTRACTORS =1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM @CONTRACTORS))

RETURN
GO

--exec REP_DOCSREGISTRY @xmlParam = N'<XML><DOC_STATE></DOC_STATE><DOC_TYPE></DOC_TYPE><PERIOD><DATE_FROM>2008-04-01T14:14:10.218</DATE_FROM><DATE_TO>2008-09-09T14:14:10.218</DATE_TO></PERIOD><STORES></STORES><CONTRACTORS></CONTRACTORS><GOODS_LIST></GOODS_LIST></XML>'
--exec REPEX_DOCSREGISTRY @xmlParam = N'<XML><DOC_STATE></DOC_STATE><DOC_TYPE><TYPE><ID_TABLE_DATA>2</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>3</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>6</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>7</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>8</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>12</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>13</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>19</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>20</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>21</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>22</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>23</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>24</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>25</ID_TABLE_DATA></TYPE><TYPE><ID_TABLE_DATA>26</ID_TABLE_DATA></TYPE></DOC_TYPE><PERIOD><DATE_FROM>2008-06-01T14:14:10.218</DATE_FROM><DATE_TO>2008-09-09T14:14:10.218</DATE_TO></PERIOD><STORES></STORES><CONTRACTORS></CONTRACTORS><GOODS_LIST></GOODS_LIST></XML>'