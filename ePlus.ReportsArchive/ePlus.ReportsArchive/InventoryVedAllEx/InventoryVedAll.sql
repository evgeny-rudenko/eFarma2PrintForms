SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('REPEX_INVENTORY_VED_ALL') IS NULL EXEC('CREATE PROCEDURE REPEX_INVENTORY_VED_ALL AS RETURN')
GO
ALTER PROCEDURE REPEX_INVENTORY_VED_ALL
    @XMLPARAM NTEXT
AS

DECLARE	@HDOC INT, @ID_INVENTORY_GLOBAL UNIQUEIDENTIFIER, @ID_STORE BIGINT, @DOC_DATE DATETIME, @FULL BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT , @XMLPARAM OUTPUT
	SELECT TOP 1 @ID_INVENTORY_GLOBAL = ID_INVENTORY_GLOBAL FROM OPENXML(@HDOC , '/XML') WITH(
        ID_INVENTORY_GLOBAL UNIQUEIDENTIFIER 'ID_INVENTORY_GLOBAL')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT TOP 1 @ID_STORE = ID_STORE, @FULL = [FULL], @DOC_DATE = DOC_DATE
FROM INVENTORY_SVED I(NOLOCK)
WHERE ID_INVENTORY_GLOBAL = @ID_INVENTORY_GLOBAL

SELECT TOP 1
    DOC_DATE = I.DOC_DATE,
    DOC_NUM = I.DOC_NUM,
    DOC_NAME = 'Инвентаризационная ведомость № ' + RTRIM(I.DOC_NUM) + ' от ' + CONVERT(VARCHAR , I.DOC_DATE , 104),
    STORE_NAME = S.NAME,
    CONTRACTOR_NAME = C.NAME
FROM INVENTORY_SVED I(NOLOCK)
    INNER JOIN STORE S(NOLOCK) ON S.ID_STORE = I.ID_STORE
    INNER JOIN CONTRACTOR C(NOLOCK) ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
WHERE I.ID_INVENTORY_GLOBAL = @ID_INVENTORY_GLOBAL


SELECT 
    QUANTITY_DOC = NULL,
    QUANTITY_FACT = SUM(LM.QUANTITY_ADD-LM.QUANTITY_SUB),
    GOODS_NAME = G.NAME,
    GOODS_CODE = G.MNEMOCODE,
    SERIAL_NUMBER = ISNULL(RTRIM(LTRIM(S.SERIES_NUMBER)), '') + CHAR(10) + ISNULL(CONVERT(VARCHAR(256), S.BEST_BEFORE, 104), ''),
    L.VAT_PROD, L.PRICE_PROD,
    L.VAT_SUP, L.PVAT_SUP, L.PRICE_SUP, SVAT_SUP = SUM(L.PVAT_SUP * (LM.QUANTITY_ADD - LM.QUANTITY_SUB)), SUM_SUP = SUM(L.PRICE_SUP * (LM.QUANTITY_ADD - LM.QUANTITY_SUB)),
    L.VAT_SAL, L.PVAT_SAL, L.PRICE_SAL, SVAT_SAL = SUM(L.PVAT_SAL * (LM.QUANTITY_ADD - LM.QUANTITY_SUB)), SUM_SAL = SUM(L.PRICE_SAL * (LM.QUANTITY_ADD - LM.QUANTITY_SUB)),
    SCALING_RATIO_NAME = CONVERT(VARCHAR, SR.NUMERATOR) + '/' + CONVERT(VARCHAR, SR.DENOMINATOR) + ' ' + U.NAME
FROM LOT L
INNER JOIN LOT_MOVEMENT LM ON LM.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL 
INNER JOIN GOODS G(NOLOCK) ON G.ID_GOODS = L.ID_GOODS
INNER JOIN SCALING_RATIO SR(NOLOCK) ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
INNER JOIN UNIT U(NOLOCK) ON U.ID_UNIT = SR.ID_UNIT
LEFT JOIN SERIES S(NOLOCK) ON S.ID_SERIES = L.ID_SERIES
WHERE L.ID_STORE = @ID_STORE
AND LM.DATE_OP<=@DOC_DATE
GROUP BY 
G.NAME,
G.MNEMOCODE,
ISNULL(RTRIM(LTRIM(S.SERIES_NUMBER)), '') + CHAR(10) + ISNULL(CONVERT(VARCHAR(256), S.BEST_BEFORE, 104), ''),
L.VAT_PROD, L.PRICE_PROD,
L.VAT_SUP, L.PVAT_SUP, L.PRICE_SUP,
L.VAT_SAL, L.PVAT_SAL, L.PRICE_SAL, 
CONVERT(VARCHAR, SR.NUMERATOR) + '/' + CONVERT(VARCHAR, SR.DENOMINATOR) + ' ' + U.NAME
HAVING
SUM(LM.QUANTITY_ADD-LM.QUANTITY_SUB)>0
ORDER BY GOODS_NAME

RETURN 0
GO

