SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('FN_GET_SERIES') IS NULL EXEC('CREATE FUNCTION FN_GET_SERIES() RETURNS INT BEGIN RETURN 0 END')
GO
ALTER FUNCTION FN_GET_SERIES(@ITEMID BIGINT)
RETURNS VARCHAR(256) 
BEGIN
	DECLARE @STRKEY VARCHAR(256)
	DECLARE @LEN INT
	SET @STRKEY = ''
	SET @LEN = 0
	SELECT @STRKEY = @STRKEY + S.SERIES_NUMBER + ', ' FROM DBO.SERIES AS S WHERE S.ID_SERIES IN 
		(SELECT MIS.ID_SERIES FROM  DBO.MOVEMENT_ITEM_SERIES AS MIS WHERE MIS.ID_MOVEMENT_ITEM = @ITEMID)
	SET @LEN = LEN(@STRKEY)
	IF (@LEN >= 1)
	BEGIN
		SET @STRKEY = LEFT(@STRKEY, @LEN - 1)
	END
	RETURN @STRKEY
	
END
GO

IF OBJECT_ID('REPEX_MOVEMENT') IS NULL EXEC('CREATE PROCEDURE REPEX_MOVEMENT AS RETURN')
GO
ALTER PROCEDURE REPEX_MOVEMENT

	(@XMLPARAM NTEXT) AS 

/* PARAMETERS */
DECLARE @HDOC INT
DECLARE @ID_MOVEMENT BIGINT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @ID_MOVEMENT = ID_MOVEMENT
	FROM OPENXML(@HDOC, '/XML') 
	WITH(ID_MOVEMENT BIGINT 'ID_MOVEMENT')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

--тнплхпсел яепхч
DECLARE @ID_SERIES BIGINT
SELECT @ID_SERIES = LOT.ID_SERIES FROM LOT LOT
	INNER JOIN MOVEMENT_ITEM MIT ON(LOT.ID_LOT = MIT.ID_LOT_FROM)
	WHERE MIT.ID_MOVEMENT = @ID_MOVEMENT
DECLARE @STRKEY VARCHAR(256)
DECLARE @LEN INT
SET @STRKEY = ''
SET @LEN = 0
SELECT @STRKEY = @STRKEY + SERIES_NUMBER + ', ' FROM DBO.SERIES WHERE ID_SERIES = @ID_SERIES
SET @LEN = LEN(@STRKEY)
IF (@LEN >= 1)
BEGIN
	SET @STRKEY = LEFT(@STRKEY, @LEN - 1)
END
-- рюакхвмюъ вюярэ нрв╗рю
SELECT 
	G.ID_GOODS AS GOODSID, -- онпъдйнбши мнлеп
	GOODSNAME = G.NAME + ' ( ' + (SELECT TOP 1 P.NAME FROM PRODUCER AS P WHERE G.ID_PRODUCER = P.ID_PRODUCER) + ' ) ', -- мюхлемнбюмхе днйслемрю
	SERIESNUMBER = SER.SERIES_NUMBER,
	QUANTITY = M.QUANTITY, -- йнкхвеярбн
	UNITNAME = DBO.FN_SCALE_NAME(M.ID_SCALING_RATIO),
	--U.NAME AS UNITNAME, -- едхмхжю хглепемхъ
	PRICE_SUPPLIER, -- жемю онярюбыхйю аег мдя
	PRICE_SUMMA = QUANTITY * PRICE_SUPPLIER, -- ясллю онярюбыхйю аег мдя
	PRICE_SUPPLIER_VAT, -- жемю онярюбыхйю я мдя
	PRICE_SUMMA_VAT = QUANTITY * PRICE_SUPPLIER_VAT, -- ясллю онярюбыхйю я мдя
        PRICE_SALE,--пнгмхвмюъ жемю
        PRICE_SUMM_SALE = QUANTITY * PRICE_SALE, --пнгмхвмюъ ясллю
	G.ID_GOODS AS NUMBER
FROM MOVEMENT_ITEM AS M 
INNER JOIN LOT L ON L.ID_LOT = M.ID_LOT_FROM
LEFT JOIN GOODS AS G ON G.ID_GOODS = M.ID_GOODS
LEFT JOIN SERIES SER ON SER.ID_SERIES = L.ID_SERIES
--LEFT JOIN MOVEMENT_ITEM_SERIES AS MS ON MS.ID_MOVEMENT_ITEM = M.ID_MOVEMENT_ITEM
LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = M.ID_SCALING_RATIO
LEFT JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT WHERE ID_MOVEMENT = @ID_MOVEMENT
ORDER BY 2 ASC
-- ьюойю
SELECT
	M.MNEMOCODE, -- мнлеп днйслемрю
    MNEMOCODESHORT = RIGHT(M.MNEMOCODE, 4),
	M.DATE, -- дюрю днйслемрю
    STORENAMEFROMSHORT = (SELECT TOP 1 S.NAME FROM STORE S WHERE S.ID_STORE = M.ID_STORE_FROM),
	STORENAMEFROM = (SELECT TOP 1 C.NAME + ' - ' + S.NAME FROM STORE AS S  
		LEFT JOIN CONTRACTOR AS C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
		WHERE S.ID_STORE = M.ID_STORE_FROM), -- нрдек нропюбхрекэ
    STORENAMETOSHORT = (SELECT TOP 1 S.NAME FROM STORE S WHERE S.ID_STORE = M.ID_STORE_TO),
	STORENAMETO = (SELECT TOP 1 C.NAME + ' - ' + S.NAME FROM STORE AS S 
		LEFT JOIN CONTRACTOR AS C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR 
		WHERE S.ID_STORE = M.ID_STORE_TO), -- нрдек онксвюрекэ
	DOC = (SELECT TOP 1 'опхундмюъ мюйкюдмюъ ' + INV.MNEMOCODE + ' нр '+ CONVERT(VARCHAR(10),INV.DOCUMENT_DATE,104) FROM INVOICE AS INV WHERE M.ID_DOCUMENT_BASE = INV.ID_INVOICE), -- днйслемр нямнбюмхе
	DATE_DOC = (SELECT TOP 1 DATE FROM INVOICE WHERE M.ID_DOCUMENT_BASE = ID_INVOICE) -- дюрю днйслемрю
FROM MOVEMENT AS M WHERE ID_MOVEMENT = @ID_MOVEMENT

-- йнмрпюцемр "лш"
SELECT ISNULL(NAME, '') AS COMPANY
FROM CONTRACTOR WHERE ID_CONTRACTOR = DBO.FN_CONST_CONTRACTOR_SELF()

RETURN 0
GO