SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('REPEX_INVOICE_OUT') IS NULL EXEC('CREATE PROCEDURE REPEX_INVOICE_OUT AS RETURN')
GO
ALTER PROCEDURE REPEX_INVOICE_OUT(
    @XMLPARAM NTEXT
) AS

DECLARE @HDOC INT, @ID_INVOICE_OUT BIGINT, @ID_INVOICE_OUT_GLOBAL UNIQUEIDENTIFIER

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1 @ID_INVOICE_OUT = ID_INVOICE_OUT, @ID_INVOICE_OUT_GLOBAL = ID_INVOICE_OUT_GLOBAL
    FROM OPENXML(@HDOC, '/XML') WITH(
        ID_INVOICE_OUT BIGINT 'ID_INVOICE_OUT',
        ID_INVOICE_OUT_GLOBAL UNIQUEIDENTIFIER 'ID_INVOICE_OUT_GLOBAL'
    )
EXEC SP_XML_REMOVEDOCUMENT @HDOC

-- яохянй рнбюпнб б пюяундмни мюйкюдмни
SELECT
    GOODS_NAME = G.NAME + ' [' + P.NAME + ', ' + COALESCE(C.NAME, '') + ']',
    QUANTITY = II.QUANTITY,
    CONTRACTOR_PRICE_PER_UNIT = ROUND(L.PRICE_SUP - L.PVAT_SUP, 2),
    CONTRACTOR_PRICE_PER_UNIT_VAT = ROUND(L.PRICE_SUP, 2) ,
    CONTRACTOR_SUM_VAT = II.QUANTITY * L.PRICE_SUP,
    SCALING_RATIO_NAME = CAST(SR.NUMERATOR AS VARCHAR) + '/' + CAST(SR.DENOMINATOR AS VARCHAR) + ' ' +U.NAME,
    VAT_RATE = L.VAT_SAL,
    VAT_DISCOUNT = II.VAT_DISCOUNT,
    SUM_DISCOUNT = II.SUM_DISCOUNT,
    RETAIL_VAT_SUM = II.PSUM_SAL,
    RETAIL_PRICE = L.PRICE_SAL,
    RETAIL_SUM = II.SUM_SAL,
    SERIES_NUMBER = SERIES.SERIES_NUMBER,
    BEST_BEFORE = SERIES.BEST_BEFORE
FROM DBO.INVOICE_OUT I(NOLOCK)
    INNER JOIN DBO.INVOICE_OUT_ITEM II(NOLOCK) ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
    INNER JOIN DBO.LOT L(NOLOCK) ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
    INNER JOIN SCALING_RATIO SR(NOLOCK) ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
    INNER JOIN UNIT U(NOLOCK) ON U.ID_UNIT = SR.ID_UNIT
    INNER JOIN DBO.GOODS G(NOLOCK) ON G.ID_GOODS = L.ID_GOODS
    INNER JOIN DBO.PRODUCER P(NOLOCK) ON P.ID_PRODUCER = G.ID_PRODUCER
    LEFT JOIN DBO.COUNTRY C(NOLOCK) ON C.ID_COUNTRY = P.ID_COUNTRY
    LEFT JOIN SERIES ON SERIES.ID_SERIES = L.ID_SERIES
WHERE I.ID_INVOICE_OUT = @ID_INVOICE_OUT
ORDER BY GOODS_NAME  

SELECT TOP 1
    INVOICE_NUMBER = I.MNEMOCODE,
    INVOICE_DATE = I.DATE,
    INCOMING_NUMBER =
        COALESCE(INPUT.MNEMOCODE, M.MNEMOCODE, '') +
        COALESCE(' НР ' + CONVERT(VARCHAR, INPUT.DOCUMENT_DATE, 104), ' НР ' + CONVERT(VARCHAR, M.DATE, 104), ''),
    CUSTOMER_NAME = CASE WHEN ISNULL(PAY.FULL_NAME, '') != '' THEN PAY.FULL_NAME ELSE PAY.NAME END,
    CUSTOMER_ADDRESS = CASE WHEN ISNULL(PAY.ADDRESS, '') != '' THEN ' юДПЕЯ:'+ PAY.ADDRESS ELSE '' END,
    SUPPLIER_NAME =
        CASE WHEN ISNULL(SUP.FULL_NAME, '') != '' THEN SUP.FULL_NAME ELSE SUP.NAME END +
        CASE WHEN ISNULL(SUP.INN, '') != '' THEN ' хмм:' + SUP.INN ELSE '' END,
    STORE_NAME = S.NAME,
    COMPANY =
        CASE WHEN ISNULL(PAY.FULL_NAME, '') != '' THEN PAY.FULL_NAME ELSE PAY.NAME END +
        CASE WHEN ISNULL(PAY.INN, '') != '' THEN ' хмм:' + PAY.INN ELSE '' END
FROM DBO.INVOICE_OUT I(NOLOCK)
    INNER JOIN DBO.STORE S(NOLOCK) ON S.ID_STORE = I.ID_STORE 
    INNER JOIN DBO.CONTRACTOR SUP(NOLOCK) ON SUP.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN DBO.CONTRACTOR PAY(NOLOCK) ON PAY.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
    LEFT JOIN INVOICE INPUT(NOLOCK) ON INPUT.ID_INVOICE_GLOBAL = I.ID_DOC_BASE_GLOBAL
    LEFT JOIN MOVEMENT M(NOLOCK) ON M.ID_MOVEMENT_GLOBAL = I.ID_DOC_BASE_GLOBAL
WHERE I.ID_INVOICE_OUT= @ID_INVOICE_OUT

-- хрнцнбше ясллш
SELECT 
    /*ясллю нор. аег мдя*/ CONTRACTOR_SUM = ROUND(I.SUM_SUP - SVAT_SUP, 2),
    /*ясллю нор. я мдя*/ CONTRACTOR_SUM_VAT = ROUND(I.SUM_SUP, 2),
    /*ясллю мдя нор.*/ SUM_CONTRACTOR_VAT = ROUND(I.SVAT_SUP, 2),
    /*ясллю нор. мдя он яр. 10%*/ SUM_CONTRACTOR_VAT_10 = SUM(ROUND(CASE WHEN L.VAT_SUP = 10.0 THEN II.QUANTITY * L.PRICE_SUP ELSE 0.0 END, 2)),
    /*ясллю нор. мдя он яр. 18%*/ SUM_CONTRACTOR_VAT_18 = SUM(ROUND(CASE WHEN L.VAT_SUP = 18.0 THEN II.QUANTITY * L.PRICE_SUP ELSE 0.0 END, 2)),
    /*хрнцнбюъ пнгмхвмюъ ясллю*/ SUM_RETAIL_SUM = ROUND(I.SUM_SAL, 2),
    /*хрнцнбюъ опндюфмюъ ясллю*/ SUM_PROD_SUM = ROUND(I.SUM_SAL, 2),
    /*ясллю пнгм. мдя он яр. 10%*/ SUM_RETAIL_VAT_10 = SUM(ROUND(CASE WHEN L.VAT_SAL = 10.0 THEN II.SUM_SAL ELSE 0.0 END, 2)),
    /*ясллю пнгм. мдя он яр. 18%*/ SUM_RETAIL_VAT_18 = SUM(ROUND(CASE WHEN L.VAT_SAL = 18.0 THEN II.SUM_SAL ELSE 0.0 END, 2)),
    /*ясллю мюкнцю я опндюф*/ SUM_PROD_TAX = 0.00
FROM DBO.INVOICE_OUT I(NOLOCK)
    INNER JOIN DBO.INVOICE_OUT_ITEM II(NOLOCK) ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
    INNER JOIN DBO.LOT L(NOLOCK) ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
    INNER JOIN DBO.SCALING_RATIO SR(NOLOCK) ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
WHERE I.ID_INVOICE_OUT = @ID_INVOICE_OUT
GROUP BY ROUND(I.SUM_SUP - SVAT_SUP, 2), ROUND(I.SUM_SUP, 2), ROUND(I.SVAT_SUP, 2), ROUND(I.SUM_SAL, 2)

SELECT
    VAT_SAL = L.VAT_SAL,
    PSUM_SAL = SUM(II.PSUM_SAL)
FROM DBO.INVOICE_OUT I(NOLOCK)
    INNER JOIN DBO.INVOICE_OUT_ITEM II(NOLOCK) ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
    INNER JOIN DBO.LOT L(NOLOCK) ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
WHERE I.ID_INVOICE_OUT = @ID_INVOICE_OUT
GROUP BY L.VAT_SAL
ORDER BY L.VAT_SAL

RETURN 0
GO

