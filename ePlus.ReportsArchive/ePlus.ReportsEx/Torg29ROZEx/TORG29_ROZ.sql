SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
-------------------------------------------------------------------------------
IF (OBJECT_ID('DBO.REP_TORG29_ROZ_EX') IS NULL) EXEC('CREATE PROCEDURE DBO.REP_TORG29_ROZ_EX AS RETURN')
GO

ALTER PROCEDURE DBO.REP_TORG29_ROZ_EX
    @XMLPARAM NTEXT
AS

DECLARE @STORE VARCHAR(4000)
DECLARE @LEN INT
DECLARE @PRICE_BEGIN MONEY
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @NO_DETAIL BIT, @SORT_DOC BIT, @SHOW_ADD BIT, @SHOW_SUB BIT, @REFRESH_DOC_MOV BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FR = DATE_FR,
        @DATE_TO = DATE_TO,
        @NO_DETAIL = NO_DETAIL,
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD,
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO',
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC',
        SHOW_ADD BIT 'SHOW_ADD',
        SHOW_SUB BIT 'SHOW_SUB',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV'
    )
    --  ŒÕ“–¿√≈Õ“€
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM CONTRACTOR C(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')) TAB ON TAB.ID_CONTRACTOR = C.ID_CONTRACTOR
    -- — À¿ƒ€
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE
EXEC SP_XML_REMOVEDOCUMENT @HDOC


IF @REFRESH_DOC_MOV = 1 BEGIN
    -- ÔÂÂÒ˜ËÚ‡Ú¸ DOC_MOVEMENT ÔÓ ‚ÒÂÏ ‰ÓÍÛÏÂÌÚ‡Ï
    -- print 'ÔÂÂÒ˜ÂÚ'
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- ÓÚÌÓÏËÓ‚‡Ú¸ ‰‡Ú˚
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

-- ≈—À» Õ≈ ” ¿«¿Õ — À¿ƒ, “Œ »“Œ√» ¬€¡»–¿ﬁ“—ﬂ œŒ ¬—≈Ã — À¿ƒ¿Ã
IF NOT EXISTS(SELECT TOP 1 1 FROM #STORE) BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)
    SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
    FROM STORE S(NOLOCK) INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)

-- Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ, —”ÃÃ€ (œ–»’Œƒ/–¿—’Œƒ)
SELECT
    PRICE_BEGIN = SUM(SUM_SUP * SIGN_OP),
    -- PRICE_BEGIN_RETAIL = SUM(CASE WHEN DM.CODE_OP='DIS' THEN SUM_ACC * -1 ELSE SUM_ACC * SIGN_OP END)
    PRICE_BEGIN_RETAIL = SUM(SUM_ACC * SIGN_OP)
FROM DOC_MOVEMENT DM
INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
WHERE DM.DATE_OP < @DATE_FR AND DM.CODE_OP <> 'DIS'

DECLARE @ORDER VARCHAR(128)
IF @SHOW_ADD = 1 BEGIN
    -- Œ¡Ÿ»… œ–»’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
    SET @SQL = '
        SELECT
            DM.ID_DOCUMENT,
            ID_STORE_MOVEMENT = DM.ID_DOCUMENT,
            DM.ID_TABLE,
            TABLE_NAME = TD.DESCRIPTION,
            CONTRACTOR_NAME = DMD.CONTRACTOR_NAME,
            DOC_NAME = DMD.DESCRIPTION_EXT,
            DM.DATE_OP,
            ALD.DOC_NUM,
            AMOUNT_ADD = SUM(DM.QUANTITY),
            PRICE_ADD = SUM(DM.SUM_SUP),
            RETAIL_PRICE = SUM(DM.SUM_ACC),
            DIFF = SUM(DM.SUM_ACC - DM.SUM_SUP)
        FROM DOC_MOVEMENT DM
            INNER JOIN FN_DOC_MOVEMENT_DESCRIPTION() DMD ON DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE AND DM.ID_DOC_MOVEMENT=DMD.ID_DOC_MOVEMENT
            INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
            LEFT JOIN TABLE_DATA TD ON DM.ID_TABLE = TD.ID_TABLE_DATA
            LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
        WHERE 
                DM.CODE_OP = ''ADD''
            AND DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
        GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, DM.ID_STORE, DM.DATE_OP, ALD.DOC_NUM, TD.DESCRIPTION, DMD.CONTRACTOR_NAME, DMD.DESCRIPTION_EXT
        ORDER BY #ORDER
    '
    SET @ORDER = 'DOC_NAME ASC, DOC_NUM ASC, DATE_OP ASC'
    IF(@SORT_DOC = 0) SET @ORDER = 'DATE_OP ASC, DOC_NAME ASC, DOC_NUM ASC'

    SET @SQL = REPLACE(@SQL, '#ORDER', @ORDER)
    EXEC SP_EXECUTESQL @SQL, N'@DATE_FR DATETIME, @DATE_TO DATETIME',
        @DATE_FR = @DATE_FR, @DATE_TO = @DATE_TO
END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_STORE_MOVEMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
        DATE_OP = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
        PRICE_ADD = CAST(NULL AS MONEY),
        RETAIL_PRICE = CAST(NULL AS MONEY),
        DIFF = CAST(NULL AS MONEY)
END

IF @SHOW_SUB = 1 BEGIN
    -- Œ¡Ÿ»… –¿—’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
    SET @SQL = '
        SELECT
            DM.ID_DOCUMENT,
            ID_STORE_MOVEMENT = DM.ID_DOCUMENT,
            DM.ID_TABLE,
            TABLE_NAME = TD.DESCRIPTION,
            CONTRACTOR_NAME = DMD.CONTRACTOR_NAME,
            DOC_NAME = [DESCRIPTION_EXT],
            DM.DATE_OP,
            ALD.DOC_NUM,
            AMOUNT_SUB = SUM(DM.QUANTITY),
            PRICE_SUB = SUM(DM.SUM_SUP),
            RETAIL_PRICE = SUM(DM.SUM_ACC),
            DIFF = SUM(DM.SUM_ACC - DM.SUM_SUP)
        FROM DOC_MOVEMENT DM
            INNER JOIN FN_DOC_MOVEMENT_DESCRIPTION() DMD ON DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE  AND DM.ID_DOC_MOVEMENT=DMD.ID_DOC_MOVEMENT
            INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
            LEFT JOIN TABLE_DATA TD ON DM.ID_TABLE = TD.ID_TABLE_DATA
            LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
        WHERE 
                DM.CODE_OP = ''SUB''
            AND DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
        GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, DM.ID_STORE, DM.DATE_OP, ALD.DOC_NUM, TD.DESCRIPTION, DMD.CONTRACTOR_NAME, DMD.DESCRIPTION_EXT
        ORDER BY #ORDER
    '
    SET @ORDER = 'DOC_NAME ASC, DOC_NUM ASC, DATE_OP ASC'
    IF(@SORT_DOC = 0) SET @ORDER = 'DATE_OP ASC, DOC_NAME ASC, DOC_NUM ASC'

    SET @SQL = REPLACE(@SQL, '#ORDER', @ORDER)
    EXEC SP_EXECUTESQL @SQL, N'@DATE_FR DATETIME, @DATE_TO DATETIME',
        @DATE_FR = @DATE_FR, @DATE_TO = @DATE_TO
END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_STORE_MOVEMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
        DATE_OP = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_SUB = CAST(NULL AS MONEY),
        PRICE_SUB = CAST(NULL AS MONEY),
        RETAIL_PRICE = CAST(NULL AS MONEY),
        DIFF = CAST(NULL AS MONEY)
END

-- Œ—“¿“Œ  Õ¿  ŒÕ≈÷, —”ÃÃ€ (œ–»’Œƒ/–¿—’Œƒ)
SELECT
    PRICE_END = SUM(SUM_SUP * SIGN_OP),
    -- PRICE_END_RETAIL = SUM(CASE WHEN DM.CODE_OP='DIS' THEN SUM_ACC * -1 ELSE SUM_ACC * SIGN_OP END)
    PRICE_END_RETAIL = SUM(SUM_ACC * SIGN_OP)
FROM DOC_MOVEMENT DM
INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
WHERE DM.DATE_OP <= @DATE_TO AND DM.CODE_OP <> 'DIS'

DECLARE @STORES VARCHAR(1024), @CONTRACTORS VARCHAR(1024)
EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT COMPANY = @CONTRACTORS, STORE = @STORES

RETURN 0
GO