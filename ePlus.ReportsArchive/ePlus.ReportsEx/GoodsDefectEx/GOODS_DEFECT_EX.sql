--USE EPLUS_DEV10
SET NOCOUNT ON
SET ANSI_NULLS ON 
SET QUOTED_IDENTIFIER OFF
-------------------------------------------------------------------------------
IF OBJECT_ID('GOODS_DEFECT_EX') IS NULL EXEC('CREATE PROCEDURE GOODS_DEFECT_EX AS RETURN')
GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

ALTER PROCEDURE GOODS_DEFECT_EX
	(@XMLPARAM NTEXT) AS

/* PARAMETERS */
DECLARE @HDOC INT
DECLARE @TEXT NVARCHAR(4000), @DATE_FR DATETIME, @DATE_TO DATETIME,	@DOC BIT,
    @ALL_CONTRACTOR BIT, @ALL_STORE BIT

DECLARE @QUERY NVARCHAR(4000)
DECLARE	        @ID_STORE BIGINT,
		@LENGTH_DRUGTXT BIGINT,
                @LENGTH_SERIES BIGINT,
                @DATA_SERVICEABLE  VARCHAR(2),
                @CHECKREMAINS  VARCHAR(2)

DECLARE @Rule_LENGTH_GD NVARCHAR(500),
        @Rule_LENGTH_LT NVARCHAR(500),
        @Rule_ID_STORE NVARCHAR(500),
        @Rule_CHECKREMAINS NVARCHAR(500),
        @Rule_DATA_SERVICEABLE NVARCHAR(500)


EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO, @DOC = DOC
	FROM OPENXML(@HDOC, '/XML') 
	WITH(DATE_FR DATETIME 'DATE_FR',
		DATE_TO DATETIME 'DATE_TO',
		DOC BIT 'DOC')

	SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
	WITH(ID_CONTRACTOR BIGINT '.') WHERE ID_CONTRACTOR <> 0
	IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1 ELSE SET @ALL_CONTRACTOR = 0

	SELECT * INTO #STORE FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.') WHERE ID_STORE <> 0
	IF @@ROWCOUNT = 0 SET @ALL_STORE = 1 ELSE SET @ALL_STORE = 0


	SELECT * INTO #TAB FROM OPENXML(@HDOC, '//XML/DEFECT_SETTINGS/SETTINGS') WITH(
		ID_STORE BIGINT 'ID_STORE',
		LENGTH_DRUGTXT BIGINT 'LENGTH_DRUGTXT',
                LENGTH_SERIES BIGINT 'LENGTH_SERIES',
                DATA_SERVICEABLE  VARCHAR(2) 'DATA_SERVICEABLE',
                CHECKREMAINS  VARCHAR(2) 'CHECKREMAINS')


EXEC SP_XML_REMOVEDOCUMENT @HDOC
EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

IF @DOC = 0 BEGIN
    SELECT 
        R.ID_LOT_GLOBAL
    INTO #TEMP
    FROM MV_STOCK_DETAIL R
    INNER JOIN STORE ST ON ST.ID_STORE = R.ID_STORE
    WHERE (@ALL_CONTRACTOR=1 OR ST.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)) 
    AND (@ALL_STORE=1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORE))

/* ========================================================*/

SELECT @ID_STORE = ID_STORE,
       @LENGTH_DRUGTXT = LENGTH_DRUGTXT,
       @LENGTH_SERIES = LENGTH_SERIES,
       @DATA_SERVICEABLE  = DATA_SERVICEABLE,
       @CHECKREMAINS  = CHECKREMAINS          
FROM #TAB

  if @LENGTH_DRUGTXT > 0
  BEGIN
   SET @Rule_LENGTH_GD = 'LEFT(GD.DRUG_TXT,' + cast(@LENGTH_DRUGTXT as varchar(20))+')'                                  
   SET @Rule_LENGTH_LT = 'LEFT(G.NAME,' + cast(@LENGTH_DRUGTXT as varchar(20))+')'                                  
  END
  ELSE
  BEGIN
   SET @Rule_LENGTH_GD = 'GD.DRUG_TXT'                                      
   SET @Rule_LENGTH_LT = 'G.NAME'                                      
  END   

  if @LENGTH_SERIES > 0
  BEGIN
    SET @Rule_LENGTH_GD = @Rule_LENGTH_GD + '+ LEFT(GD.SERIES_NUMBER,'+ cast(@LENGTH_SERIES as varchar(20))+')'                                  
    SET @Rule_LENGTH_LT = @Rule_LENGTH_LT + '+ LEFT(S.SERIES_NUMBER,'+ cast(@LENGTH_SERIES as varchar(20))+')'                                  
  END
  ELSE
  BEGIN
    SET @Rule_LENGTH_GD = @Rule_LENGTH_GD +' + GD.SERIES_NUMBER'                                      
    SET @Rule_LENGTH_LT = @Rule_LENGTH_LT +' + S.SERIES_NUMBER'                                      
  END

 SET @Rule_LENGTH_GD = @Rule_LENGTH_GD + ' = ' + @Rule_LENGTH_LT  

  if (@ID_STORE <> '') or (@ID_STORE <> null)
  BEGIN
    SET @Rule_ID_STORE = 'L.ID_STORE = ' + cast(@ID_STORE as varchar(20))
  END
  ELSE
  BEGIN
    SET @Rule_ID_STORE = '1 = 1'
  END   

  if @CHECKREMAINS = 'Да'
  BEGIN
    SET @Rule_CHECKREMAINS = 'L.QUANTITY_REM > 0'
  END
  ELSE
  BEGIN
    SET @Rule_CHECKREMAINS = '1 = 1'
  END   

  if @DATA_SERVICEABLE = 'Да'
  BEGIN
    SET @Rule_DATA_SERVICEABLE = 'S.BEST_BEFORE > GetDate()'
  END
  ELSE
  BEGIN
    SET @Rule_DATA_SERVICEABLE = '1 = 1'
  END   

SET @QUERY =

/* ======================================================*/
    'SELECT 
        GOODS_LOT = G.[NAME] + '' ('' + P.[NAME] + '')'',
        STORE = ST.[NAME],
        MNEMOCODE = L.LOT_NAME,
        SERIES_NUMBER = GD.SERIES_NUMBER, 
        GOODS_DEFECT = GD.DRUG_TXT + '' ('' + GD.MNF_NM + '')'',
        CAUSE = GD.SPEC_NM,
        GD.LETTER_DATE,
        GD.LETTER_NR
    FROM #TEMP 
        INNER JOIN LOT L ON L.ID_LOT_GLOBAL = #TEMP.ID_LOT_GLOBAL
        INNER JOIN MV_STOCK_DETAIL MSD ON MSD.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
        INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
        INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
    	INNER JOIN PRODUCER AS P ON  G.ID_PRODUCER = P.ID_PRODUCER '+ 
--        INNER JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
        'INNER JOIN  SERIES S ON L.ID_SERIES = S.ID_SERIES
        INNER JOIN GOODS_DEFECT GD ON ('+
        @Rule_LENGTH_GD +')' +
        ' WHERE '+

 --MSD.REMAINS >0
--      @Rule_ID_STORE + ' AND '
      @Rule_CHECKREMAINS + ' AND '
    + @Rule_DATA_SERVICEABLE

EXEC SP_EXECUTESQL @QUERY

END

-- IF @DOC = 1 BEGIN
--     SELECT 
--         GOODS_LOT = G.[NAME] + ' (' + P.[NAME] + ')',
--         STORE = ST.[NAME],
--         MNEMOCODE = I.MNEMOCODE,
--         I.DOCUMENT_DATE,
--         SERIES_NUMBER = GD.SERIES_NUMBER, 
--         GOODS_DEFECT = GD.DRUG_TXT + ' (' + GD.MNF_NM + ')',
--         CAUSE = GD.SPEC_NM,
--         GD.LETTER_DATE,
--         GD.LETTER_NR
--     FROM INVOICE I
--         INNER JOIN INVOICE_ITEM II ON II.ID_INVOICE_GLOBAL = I.ID_INVOICE_GLOBAL
--         INNER JOIN GOODS G ON G.ID_GOODS = II.ID_GOODS
--         INNER JOIN STORE ST ON ST.ID_STORE = I.ID_STORE
--     	INNER JOIN PRODUCER AS P ON  G.ID_PRODUCER = P.ID_PRODUCER 
--         LEFT JOIN  SERIES S ON II.ID_SERIES = S.ID_SERIES
--         INNER JOIN GOODS_DEFECT GD ON DBO.FN_GOODS_DEFECT(S.SERIES_NUMBER, G.[NAME]) = DBO.FN_GOODS_DEFECT(GD.SERIES_NUMBER, GD.DRUG_TXT)
--     WHERE (I.DOCUMENT_DATE BETWEEN @DATE_FR AND @DATE_TO) AND
--     	(@ALL_CONTRACTOR=1 OR ST.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)) AND
-- 		(@ALL_STORE=1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORE))
-- END
--PRINT @QUERY

RETURN 0

GO

SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

GRANT EXECUTE ON GOODS_DEFECT_EX TO PUBLIC
GO

--exec REP_GOODS_DEFECT @xmlParam = N'<XML><DATE_TO>2007-05-29T10:10:43.921</DATE_TO><DOC>0</DOC></XML>'
--exec GOODS_DEFECT_EX @xmlParam = N'<XML><DOC>0</DOC><ORDER_BY>1</ORDER_BY></XML>'


