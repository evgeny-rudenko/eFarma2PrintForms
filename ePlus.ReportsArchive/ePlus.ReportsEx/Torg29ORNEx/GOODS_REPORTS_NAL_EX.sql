SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REP_GOODS_REPORTS_NAL_EX') IS NULL EXEC('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NAL_EX AS RETURN')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NAL_EX
    @XMLPARAM NTEXT
AS
DECLARE @STORE VARCHAR(256)
DECLARE @LEN INT
DECLARE @PRICE_BEGIN MONEY
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @NO_DETAIL BIT, @SORT_DOC BIT, @SHOW_ADD BIT, @SHOW_SUB BIT, @REFRESH_DOC_MOV BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FR = DATE_FR,
        @DATE_TO = DATE_TO,
        @NO_DETAIL = NO_DETAIL,
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD,
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO',
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC',
        SHOW_ADD BIT 'SHOW_ADD',
        SHOW_SUB BIT 'SHOW_SUB',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV'
    )
    -- КОНТРАГЕНТЫ
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM CONTRACTOR C(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')) TAB ON TAB.ID_CONTRACTOR = C.ID_CONTRACTOR
    -- СКЛАДЫ
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE
EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- пересчитать DOC_MOVEMENT по всем документам
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- отнормировать даты
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

-- Если не указан склад, то итоги выбираются по всем складам
IF NOT EXISTS(SELECT TOP 1 1 FROM #STORE) BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)
    SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
    FROM STORE S(NOLOCK) INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)

-- ОСТАТОК НА НАЧАЛО, СУММЫ (ПРИХОД/РАСХОД)
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)

DECLARE @ORDER VARCHAR(128)
IF @SHOW_ADD = 1 BEGIN
    -- ОБЩИЙ ПРИХОД ПО ДОКУМЕНТАМ
    SELECT
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END,
		DATE_OP = DM.DATE_OP,
        ID_CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
        CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
		SUM_SUP = SUM(DM.SUM_SUP),--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),
		DIFF = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - DM.SUM_SUP)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_FROM
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_FROM
    WHERE (CODE_OP='ADD' OR (CODE_OP='DIS' AND DM.ID_TABLE=19 AND SIGN_OP=-1))
--DM.SIGN_OP = 1 AND DM.QUANTITY>0 AND (DM.CODE_OP = 'ADD' OR DM.CODE_OP='DIS')
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
    GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, TD.DESCRIPTION, DM.DATE_OP, AD.DOC_NUM, DM.ID_CONTRACTOR_FROM, C.NAME, S.NAME, CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		INCOMING_NUMBER = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),	
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
	DIFF = CAST(NULL AS MONEY)
END
IF @SHOW_SUB = 1 BEGIN
    -- ОБЩИЙ РАСХОД ПО ДОКУМЕНТАМ
	SELECT 
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
        ID_CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
        CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE<>19 THEN DM.SUM_ACC
 						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE=19 THEN DM.SUM_ACC * SIGN_OP
 						   ELSE 0 END),
		SUM_SUP = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_SUP * DM.SIGN_OP * -1
						   END),--		SUM_SUP = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_ACC * DM.SIGN_OP * -1
						   END),--        SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),
		DIFF = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_ACC * DM.SIGN_OP * -1 END - 
				   CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_SUP * DM.SIGN_OP * -1 END)
	INTO #T
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_TO
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_TO
    WHERE (CODE_OP IN ('SUB', 'DIS') OR (DM.ID_TABLE=19 AND CODE_OP<>'ADD'))
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
    GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, TD.DESCRIPTION, DM.DATE_OP, AD.DOC_NUM, DM.ID_CONTRACTOR_TO, C.NAME, S.NAME
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP

	SELECT * FROM #T

	SELECT SUM_DIS = SUM(SUM_DIS) FROM #T

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
		SUM_DIS = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
		DIFF = CAST(NULL AS MONEY)
		
	SELECT SUM_DIS = NULL
END

-- остаток на конец
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)


DECLARE @STORES VARCHAR(1024), @CONTRACTORS VARCHAR(1024)
EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT CONTRACTORS = @CONTRACTORS, STORES = @STORES

RETURN 0
GO

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REP_GOODS_REPORTS_NAL_EX_SERVICE') IS NULL EXEC('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NAL_EX_SERVICE AS RETURN')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NAL_EX_SERVICE
    @XMLPARAM NTEXT
AS
DECLARE @STORE VARCHAR(256)
DECLARE @LEN INT
DECLARE @PRICE_BEGIN MONEY
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @NO_DETAIL BIT, @SORT_DOC BIT, @SHOW_ADD BIT, @SHOW_SUB BIT, @REFRESH_DOC_MOV BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FR = DATE_FR,
        @DATE_TO = DATE_TO,
        @NO_DETAIL = NO_DETAIL,
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD,
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO',
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC',
        SHOW_ADD BIT 'SHOW_ADD',
        SHOW_SUB BIT 'SHOW_SUB',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV'
    )
    -- КОНТРАГЕНТЫ
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM CONTRACTOR C(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')) TAB ON TAB.ID_CONTRACTOR = C.ID_CONTRACTOR
    -- СКЛАДЫ
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE
EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- пересчитать DOC_MOVEMENT по всем документам
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- отнормировать даты
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

-- Если не указан склад, то итоги выбираются по всем складам
IF NOT EXISTS(SELECT TOP 1 1 FROM #STORE) BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)
    SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
    FROM STORE S(NOLOCK) INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)

-- ОСТАТОК НА НАЧАЛО, СУММЫ (ПРИХОД/РАСХОД)
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND (DM.ID_STORE IS NULL OR DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))

DECLARE @ORDER VARCHAR(128)
IF @SHOW_ADD = 1 BEGIN
    -- ОБЩИЙ ПРИХОД ПО ДОКУМЕНТАМ
    SELECT
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END,
		DATE_OP = DM.DATE_OP,
        ID_CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
        CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
		SUM_SUP = SUM(DM.SUM_SUP),--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),
		DIFF = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - DM.SUM_SUP)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_FROM
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_FROM
    WHERE (CODE_OP='ADD' OR (CODE_OP='DIS' AND DM.ID_TABLE=19 AND SIGN_OP=-1))
--DM.SIGN_OP = 1 AND DM.QUANTITY>0 AND (DM.CODE_OP = 'ADD' OR DM.CODE_OP='DIS')
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
    GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, TD.DESCRIPTION, DM.DATE_OP, AD.DOC_NUM, DM.ID_CONTRACTOR_FROM, C.NAME, S.NAME, CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		INCOMING_NUMBER = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),	
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
	DIFF = CAST(NULL AS MONEY)
END
IF @SHOW_SUB = 1 BEGIN
    -- ОБЩИЙ РАСХОД ПО ДОКУМЕНТАМ
	SELECT 
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
        ID_CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
        CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE<>19 THEN DM.SUM_ACC
 						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE=19 THEN DM.SUM_ACC * SIGN_OP
 						   ELSE 0 END),
		SUM_SUP = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_SUP * DM.SIGN_OP * -1
						   END),--		SUM_SUP = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_ACC * DM.SIGN_OP * -1
						   END),--        SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),
		DIFF = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_ACC * DM.SIGN_OP * -1 END - 
				   CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_SUP * DM.SIGN_OP * -1 END)
	INTO #T
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_TO
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_TO
    WHERE (CODE_OP IN ('SUB', 'DIS') OR (DM.ID_TABLE=19 AND CODE_OP<>'ADD'))
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND (DM.ID_STORE IS NULL OR DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))	 
    GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, TD.DESCRIPTION, DM.DATE_OP, AD.DOC_NUM, DM.ID_CONTRACTOR_TO, C.NAME, S.NAME
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP

	SELECT * FROM #T

	SELECT SUM_DIS = SUM(SUM_DIS) FROM #T

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
		SUM_DIS = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
		DIFF = CAST(NULL AS MONEY)
		
	SELECT SUM_DIS = NULL
END

-- остаток на конец
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND (DM.ID_STORE IS NULL OR DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))


DECLARE @STORES VARCHAR(1024), @CONTRACTORS VARCHAR(1024)
EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT CONTRACTORS = @CONTRACTORS, STORES = @STORES

RETURN 0
GO

/*
exec REP_GOODS_REPORTS_NAL_EX_SERVICE N'
<XML>
	<DATE_FR>2009-05-19T16:58:45.968</DATE_FR>
	<DATE_TO>2009-05-19T16:58:45.968</DATE_TO>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<SORT_DOC>0</SORT_DOC>
	<SHOW_ADD>1</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
</XML>'*/
