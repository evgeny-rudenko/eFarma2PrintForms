SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('REPEX_ACT_RETURN_FROM_BUYER') IS NULL EXEC('CREATE PROCEDURE REPEX_ACT_RETURN_FROM_BUYER AS RETURN')
GO		
ALTER PROCEDURE REPEX_ACT_RETURN_FROM_BUYER
	@XMLPARAM NTEXT AS
		
DECLARE @HDOC INT
DECLARE @ID_ACT_RETURN_TO_BUYER BIGINT
DECLARE @ID_ACT_RETURN_TO_BUYER_GLOBAL UNIQUEIDENTIFIER

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT , @XMLPARAM OUTPUT
	SELECT TOP 1 @ID_ACT_RETURN_TO_BUYER = ID_ACT_RETURN_TO_BUYER ,
		@ID_ACT_RETURN_TO_BUYER_GLOBAL = ID_ACT_RETURN_TO_BUYER_GLOBAL
	FROM OPENXML(@HDOC , '/XML') WITH(
		ID_ACT_RETURN_TO_BUYER BIGINT 'ID_ACT_RETURN_TO_BUYER',
		ID_ACT_RETURN_TO_BUYER_GLOBAL UNIQUEIDENTIFIER 'ID_ACT_RETURN_TO_BUYER_GLOBAL'
	)
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT TOP 1 
	AB_NUMBER = AB.MNEMOCODE,
	AB_NUMBERBASE = DOCUMENT_DESCRIPTION,
	AB_DATE = CONVERT(VARCHAR , AB.DATE , 104),
	AB_STORE = (SELECT TOP 1 S.NAME FROM STORE S WHERE S.ID_STORE = AB.ID_STORE_TO),
	AB_CONTRACTORTO = (SELECT TOP 1 case
	                                  when C.FULL_NAME is null then C.NAME
	                                  when C.FULL_NAME = '' then C.NAME
	                                  else C.FULL_NAME
	                                end
	                                   FROM CONTRACTOR C WHERE C.ID_CONTRACTOR = AB.ID_CONTRACTOR_TO),
	AB_CONTRACTORFROM = (SELECT TOP 1 case
	                                    when C.FULL_NAME is Null then C.NAME
	                                    when C.FULL_NAME = '' then C.NAME
	                                    else C.FULL_NAME
	                                  end
	                                    FROM CONTRACTOR C WHERE C.ID_CONTRACTOR = AB.ID_CONTRACTOR_FROM),
	AB_CHEMISTRY = (SELECT TOP 1 C.NAME FROM CONTRACTOR C WHERE C.ID_CONTRACTOR = (SELECT ISNULL(MAX(S.ID_CONTRACTOR) , -1) FROM STORE S WHERE S.ID_STORE = AB.ID_STORE_TO))
FROM MV_ACT_RETURN_TO_BUYER AB
WHERE	AB.ID_ACT_RETURN_TO_BUYER = @ID_ACT_RETURN_TO_BUYER
	OR AB.ID_ACT_RETURN_TO_BUYER_GLOBAL = @ID_ACT_RETURN_TO_BUYER_GLOBAL
		
SELECT	G_RUSNAME =  CASE WHEN ABI.HAS_LOT = 0 THEN (SELECT TOP 1 G.NAME FROM GOODS G WHERE G.ID_GOODS = ABI.ID_GOODS) ELSE (SELECT TOP 1 G.NAME FROM GOODS G , LOT L WHERE L.ID_GOODS = G.ID_GOODS AND L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL) END ,
	G_PRODUCER = CASE WHEN ABI.HAS_LOT = 0 THEN (SELECT TOP 1 P.NAME FROM PRODUCER P , GOODS G WHERE P.ID_PRODUCER = G.ID_PRODUCER AND G.ID_GOODS = ABI.ID_GOODS) ELSE (SELECT TOP 1 P.NAME FROM PRODUCER P , LOT L , GOODS G WHERE L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL AND P.ID_PRODUCER = G.ID_PRODUCER AND G.ID_GOODS = L.ID_GOODS) END ,
	G_SERIALNUMBER =
	CASE
	WHEN ABI.HAS_LOT = 0 AND ABI.HAS_SERIES = 0 THEN ABI.SERIES_NUMBER
	WHEN ABI.HAS_LOT = 0 AND ABI.HAS_SERIES = 1 THEN (SELECT TOP 1 S.SERIES_NUMBER FROM SERIES S WHERE S.ID_SERIES = ABI.ID_SERIES)
	ELSE (SELECT TOP 1 S.SERIES_NUMBER FROM LOT L , SERIES S WHERE L.ID_SERIES = S.ID_SERIES AND L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL)
	END ,
	G_BESTBEFORE =
	CASE
	WHEN ABI.HAS_LOT = 0 AND ABI.HAS_SERIES = 0 THEN CONVERT(VARCHAR , ABI.BEST_BEFORE , 104)
	WHEN ABI.HAS_LOT = 0 AND ABI.HAS_SERIES = 1 THEN (SELECT TOP 1 CONVERT(VARCHAR , S.BEST_BEFORE , 104) FROM SERIES S WHERE S.ID_SERIES = ABI.ID_SERIES)
	ELSE (SELECT TOP 1 CONVERT(VARCHAR , S.BEST_BEFORE , 104) FROM LOT L , SERIES S WHERE L.ID_SERIES = S.ID_SERIES AND L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL)
	END ,
	ABI_SUPPLIERPRICEPERUNIT = CASE WHEN ABI.HAS_LOT = 0 THEN ISNULL(CAST(ABI.SUPPLIER_PRICE_PER_UNIT AS DECIMAL(18 , 2)) , 0) ELSE (SELECT ISNULL(CAST(L.PRICE_SUP AS DECIMAL(18 , 2)) , 0) FROM LOT L WHERE L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL) END ,
	ABI_SUPPLIERTAXRATE = CASE WHEN ABI.HAS_LOT = 0 THEN (SELECT ISNULL(MAX(CAST(TT.TAX_RATE AS DECIMAL(18 , 2))) , 0) FROM TAX_TYPE TT WHERE TT.ID_TAX_TYPE = ABI.ID_SUPPLIER_TAX_TYPE) ELSE (SELECT ISNULL(MAX(CAST(L.VAT_SUP AS DECIMAL(18 , 2))), 0) FROM LOT L WHERE L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL) END ,
	ABI_RETAILPRICEPERUNIT = CASE WHEN ABI.HAS_LOT = 0 THEN ISNULL(CAST(ABI.PRICE_PER_UNIT AS DECIMAL(18 , 2)) , 0) ELSE (SELECT ISNULL(CAST(L.PRICE_SAL AS DECIMAL(18 , 2)) , 0) FROM LOT L WHERE L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL) END ,
	ABI_QUANTITY = CAST(ABI.QUANTITY AS DECIMAL(18 , 2)) ,
	ABI_SCALINGMULTIPLY = ISNULL((SELECT TOP 1 CAST(CAST(SR.NUMERATOR AS DECIMAL(18 , 2)) / SR.DENOMINATOR AS DECIMAL(18 , 2)) FROM SCALING_RATIO SR WHERE SR.ID_SCALING_RATIO = ABI.ID_SCALING_RATIO) , 1.00) ,
	ABI_NAMEUNIT = DBO.FN_SCALE_NAME(ABI.ID_SCALING_RATIO)
FROM	ACT_RETURN_TO_BUYER_ITEM ABI
WHERE	ABI.ID_ACT_RETURN_TO_BUYER = @ID_ACT_RETURN_TO_BUYER OR ABI.ID_ACT_RETURN_TO_BUYER_GLOBAL = @ID_ACT_RETURN_TO_BUYER_GLOBAL
ORDER BY G_RUSNAME

SELECT
	DIR = DIRECTOR_FIO,
	BUH = BUH_FIO
FROM CONTRACTOR
WHERE ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)


RETURN 0
GO