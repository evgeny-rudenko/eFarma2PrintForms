SET NOCOUNT ON 
SET QUOTED_IDENTIFIER OFF
GO
---------------------------------------------------------------------------
IF (OBJECT_ID('DBO.REP_GOODS_REPORTS_NG_EX') IS NULL ) EXEC ('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX AS SELECT NULL')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX
         @XMLPARAM NTEXT
AS

DECLARE @NO_DETAIL BIT --, @ALL_STORE BIT
DECLARE @DATE_FR DATETIME, 
        @DATE_TO DATETIME
DECLARE @SORT_DOC BIT, 
        @SHOW_ADD BIT, 
        @SHOW_SUB BIT, 
        @REFRESH_DOC_MOV BIT

DECLARE @HDOC INT, @SQL NVARCHAR(4000)
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1 
        @DATE_FR = DATE_FR, 
        @DATE_TO = DATE_TO,
        @NO_DETAIL = NO_DETAIL, 
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD, 
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV
    FROM OPENXML(@HDOC, '/XML') 
    WITH(
        DATE_FR DATETIME 'DATE_FR', 
        DATE_TO DATETIME 'DATE_TO', 
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC', 
        SHOW_ADD BIT 'SHOW_ADD', 
        SHOW_SUB BIT 'SHOW_SUB', 
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV')

    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬  ŒÕ“–¿√≈Õ“Œ¬ */
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM 
        (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
        WITH(ID_CONTRACTOR BIGINT '.')) TAB
    INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = TAB.ID_CONTRACTOR
    
    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ — À¿ƒŒ¬ */
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM
    	(SELECT * FROM OPENXML(@HDOC, '//ID_STORE') 
        WITH(ID_STORE BIGINT '.')) TAB
    INNER JOIN STORE S ON S.ID_STORE = TAB.ID_STORE
EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- ÔÂÂÒ˜ËÚ‡Ú¸ DOC_MOVEMENT ÔÓ ‚ÒÂÏ ‰ÓÍÛÏÂÌÚ‡Ï
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- ÓÚÌÓÏËÓ‚‡Ú¸ ‰‡Ú˚
EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

-- ≈—À» Õ≈ ” ¿«¿Õ — À¿ƒ, “Œ »“Œ√» ¬€¡»–¿ﬁ“—ﬂ œŒ ¬—≈Ã — À¿ƒ¿Ã
IF (SELECT COUNT(*) FROM #STORE) = 0 BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)

	SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
	FROM STORE S
	INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)

-- Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ
    SELECT
	    VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	    SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
	    SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),

	    SUM_ACC0 = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),--SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
	    SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		DELTA = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP)- SUM(DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
	GROUP BY DM.VAT_RATE

-- SELECT 
--     VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
-- 
--     SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
--     SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
--     SUM_SUP = SUM(DM.SUM_SUP * SIGN_OP),
-- 
--     SUM_ACC0 = SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
--     SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
--     SUM_ACC = SUM(DM.SUM_ACC * DM.SIGN_OP),
--     DELTA = SUM(SUM_ACC * SIGN_OP) - SUM(DM.SUM_SUP * SIGN_OP)
-- 
-- FROM DOC_MOVEMENT DM
--     INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
-- WHERE DM.DATE_OP < @DATE_FR
-- GROUP BY DM.VAT_RATE

DECLARE @ORDER VARCHAR(128)
IF(@SHOW_ADD = 1) BEGIN
	-- Œ¡Ÿ»… œ–»’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã

	SET @SQL = '
        SELECT
            DM.ID_DOCUMENT, 
            DOC_NAME = (SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
                        WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE),  
            DM.DATE_OP, 
			INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL(''π Õœ:''+ I.INCOMING_NUMBER,'''') ELSE '''' END,
            ALD.DOC_NUM,
            VAT_RATE = ''Õƒ— '' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + ''%'',      
            SUM_SUP0 = SUM(DM.SUM_SUP - DM.SVAT_SUP),
            SVAT_SUP = SUM(DM.SVAT_SUP),
            SUM_SUP = SUM(DM.SUM_SUP),        
            SUM_ACC0 = SUM(DM.SUM_ACC - DM.SVAT_ACC),
            SVAT_ACC = SUM(DM.SVAT_ACC),
            SUM_ACC = SUM(DM.SUM_ACC),
            DELTA = SUM(DM.SUM_ACC) - SUM(DM.SUM_SUP)
        FROM DOC_MOVEMENT DM
            INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
            LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
			LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
        WHERE DM.CODE_OP = ''ADD''
            AND DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
        GROUP BY DM.ID_DOCUMENT, DM.ID_STORE, DM.DATE_OP, CASE WHEN DM.ID_TABLE = 2 THEN ISNULL(''π Õœ:''+ I.INCOMING_NUMBER,'''') ELSE '''' END, ALD.DOC_NUM, DM.VAT_RATE
        ORDER BY #ORDER'

    SET @ORDER = 'DOC_NAME ASC, DOC_NUM ASC, DATE_OP ASC'
    IF(@SORT_DOC = 0) SET @ORDER = 'DATE_OP ASC, DOC_NAME ASC, DOC_NUM ASC'

    SET @SQL = REPLACE(@SQL, '#ORDER', @ORDER)

	EXEC SP_EXECUTESQL @SQL, N'@DATE_FR DATETIME, @DATE_TO DATETIME',
        @DATE_FR = @DATE_FR, @DATE_TO = @DATE_TO   
END

ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END

IF(@SHOW_SUB = 1) BEGIN
	-- Œ¡Ÿ»… –¿—’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
	SET @SQL = '
        SELECT 
            DM.ID_DOCUMENT, 
            DOC_NAME = (SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
                        WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE), 
            DM.DATE_OP, 
            ALD.DOC_NUM,
            VAT_RATE = ''Õƒ— '' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + ''%'',
        
            SUM_SUP0 = SUM(DM.SUM_SUP - DM.SVAT_SUP),
            SVAT_SUP = SUM(DM.SVAT_SUP),
            SUM_SUP = SUM(DM.SUM_SUP),
        
            SUM_ACC0 = SUM(DM.SUM_ACC - DM.SVAT_ACC),
            SVAT_ACC = SUM(DM.SVAT_ACC),
            SUM_ACC = SUM(DM.SUM_ACC),

            DELTA = SUM(DM.SUM_ACC) - SUM(DM.SUM_SUP)
        FROM DOC_MOVEMENT DM
            INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
            LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
        WHERE DM.CODE_OP = ''SUB''
            AND DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
        GROUP BY DM.ID_DOCUMENT, DM.ID_STORE, DM.DATE_OP, ALD.DOC_NUM, DM.VAT_RATE
        ORDER BY #ORDER'

    SET @ORDER = 'DOC_NAME ASC, DOC_NUM ASC, DATE_OP ASC'
    IF(@SORT_DOC = 0) SET @ORDER = 'DATE_OP ASC, DOC_NAME ASC, DOC_NUM ASC'

    SET @SQL = REPLACE(@SQL, '#ORDER', @ORDER)

    -- print @SQL     -- ÓÚÎ‡‰Í‡

	EXEC SP_EXECUTESQL @SQL, N'@DATE_FR DATETIME, @DATE_TO DATETIME',
        @DATE_FR = @DATE_FR, @DATE_TO = @DATE_TO
END

ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END

DECLARE @STORES VARCHAR(1024)
DECLARE @CONTRACTORS VARCHAR(1024)

EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT @CONTRACTORS, @STORES

-- Œ—“¿“Œ  Õ¿  ŒÕ≈÷
    SELECT
	    VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	    SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
	    SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),

	    SUM_ACC0 = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(SVAT_ACC * SIGN_OP), --SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
	    SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		DELTA = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
	GROUP BY DM.VAT_RATE

-- SELECT 
--     VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
-- 
--     SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
--     SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
--     SUM_SUP = SUM(DM.SUM_SUP * SIGN_OP),
--     SUM_ACC0 = SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
--     SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
--     SUM_ACC = SUM(SUM_ACC * SIGN_OP),
--     DELTA = SUM(SUM_ACC * SIGN_OP) - SUM(DM.SUM_SUP * SIGN_OP)
-- FROM DOC_MOVEMENT DM
--     INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
-- WHERE DM.DATE_OP <= @DATE_TO
-- GROUP BY DM.VAT_RATE

RETURN 0
GO

SET NOCOUNT ON 
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.REP_GOODS_REPORTS_NG_EX_SERVICE') IS NULL ) EXEC ('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX_SERVICE AS SELECT NULL')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX_SERVICE
         @XMLPARAM NTEXT
AS

DECLARE @NO_DETAIL BIT --, @ALL_STORE BIT
DECLARE @DATE_FR DATETIME, 
        @DATE_TO DATETIME
DECLARE @SORT_DOC BIT, 
        @SHOW_ADD BIT, 
        @SHOW_SUB BIT, 
        @REFRESH_DOC_MOV BIT

DECLARE @HDOC INT, @SQL NVARCHAR(4000)
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1 
        @DATE_FR = DATE_FR, 
        @DATE_TO = DATE_TO,
        @NO_DETAIL = NO_DETAIL, 
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD, 
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV
    FROM OPENXML(@HDOC, '/XML') 
    WITH(
        DATE_FR DATETIME 'DATE_FR', 
        DATE_TO DATETIME 'DATE_TO', 
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC', 
        SHOW_ADD BIT 'SHOW_ADD', 
        SHOW_SUB BIT 'SHOW_SUB', 
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV')

    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬  ŒÕ“–¿√≈Õ“Œ¬ */
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM 
        (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
        WITH(ID_CONTRACTOR BIGINT '.')) TAB
    INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = TAB.ID_CONTRACTOR
    
    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ — À¿ƒŒ¬ */
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM
    	(SELECT * FROM OPENXML(@HDOC, '//ID_STORE') 
        WITH(ID_STORE BIGINT '.')) TAB
    INNER JOIN STORE S ON S.ID_STORE = TAB.ID_STORE
EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- ÔÂÂÒ˜ËÚ‡Ú¸ DOC_MOVEMENT ÔÓ ‚ÒÂÏ ‰ÓÍÛÏÂÌÚ‡Ï
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- ÓÚÌÓÏËÓ‚‡Ú¸ ‰‡Ú˚
EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

--select @date_fr, @date_to

-- ≈—À» Õ≈ ” ¿«¿Õ — À¿ƒ, “Œ »“Œ√» ¬€¡»–¿ﬁ“—ﬂ œŒ ¬—≈Ã — À¿ƒ¿Ã
IF (SELECT COUNT(*) FROM #STORE) = 0 BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)

	SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
	FROM STORE S
	INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)
--select * from #store
-- Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ
SELECT 
	VAT_RATE = S1.VAT_RATE,
	SUM_SUP = SUM(S1.SUM_SUP),
	SUM_ACC = SUM(S1.SUM_ACC),
	SUM_SUP0 = SUM(S1.SUM_SUP0),
	SUM_ACC0 = SUM(S1.SUM_ACC0),
	SVAT_SUP = SUM(S1.SVAT_SUP),
	SVAT_ACC = SUM(S1.SVAT_ACC),
	DELTA = SUM(S1.DELTA)
FROM
(
SELECT
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	SUM_SUP = DM.SUM_SUP * DM.SIGN_OP,
	SUM_ACC = CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP,
	SUM_SUP0 = (DM.SUM_SUP - DM.SVAT_SUP) * SIGN_OP,
	SUM_ACC0 = (CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC - SVAT_ACC) * SIGN_OP,
	SVAT_SUP = DM.SVAT_SUP * DM.SIGN_OP,
	SVAT_ACC = SVAT_ACC * DM.SIGN_OP,	
	DELTA = (CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC - DM.SUM_SUP) * DM.SIGN_OP
FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND (DM.ID_STORE IS NOT NULL AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))

UNION ALL

SELECT
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, TT.TAX_RATE)) + '%',
	SUM_SUP = 0,
	SUM_ACC = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	SUM_SUP0 = 0,
	SUM_ACC0 = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * (S4S.PRICE_SAL - S4S.PRICE_SAL * TT.TAX_RATE / 100) * S4S.QUANTITY * CH_I.QUANTITY,
	SVAT_SUP = 0,
	SVAT_ACC = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * (S4S.PRICE_SAL * TT.TAX_RATE / 100) * S4S.QUANTITY * CH_I.QUANTITY,
	DELTA = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY
FROM CHEQUE_ITEM CH_I
     INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
     INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
     INNER JOIN SERVICE_4_SALE_ITEM S4S ON S4S.ID_SERVICE_4_SALE = CH_I.ID_LOT_GLOBAL
     INNER JOIN SERVICE S ON S.ID_SERVICE = S4S.ID_SERVICE
     INNER JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = S.ID_TAX_TYPE
WHERE CS.DATE_CLOSE < @DATE_FR 
) AS S1
GROUP BY VAT_RATE

DECLARE @ORDER VARCHAR(128)

IF(@SHOW_ADD = 1) 
BEGIN -- Œ¡Ÿ»… œ–»’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
SELECT
	ID_DOCUMENT = R1.ID_DOCUMENT,
	DOC_NAME = MAX(DOC_NAME), 
	DATE_OP = R1.DATE_OP,
	INCOMING_NUMBER = MAX(R1.INCOMING_NUMBER),
	DOC_NUM = R1.DOC_NUM,
	VAT_RATE = R1.VAT_RATE,
	SUM_SUP = SUM(R1.SUM_SUP),
	SUM_ACC = SUM(R1.SUM_ACC),
    SUM_SUP0 = SUM(R1.SUM_SUP0),
	SUM_ACC0 = SUM(R1.SUM_ACC0),
    SVAT_SUP = SUM(R1.SVAT_SUP),    
    SVAT_ACC = SUM(R1.SVAT_ACC),
    DELTA = SUM(R1.DELTA)
FROM
(
SELECT 
	DM.ID_DOCUMENT, 
	DOC_NAME = ISNULL((SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
		WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE), ' ‡ÒÒÓ‚‡ˇ ÒÏÂÌ‡'), 
	DM.DATE_OP,
	INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('π Õœ:'+ I.INCOMING_NUMBER,'') ELSE '' END,
	ALD.DOC_NUM,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	SUM_SUP = DM.SUM_SUP,
	SUM_ACC = DM.SUM_ACC,
    SUM_SUP0 = DM.SUM_SUP - DM.SVAT_SUP,
	SUM_ACC0 = DM.SUM_ACC - DM.SVAT_ACC,
    SVAT_SUP = DM.SVAT_SUP,    
    SVAT_ACC = DM.SVAT_ACC,
    DELTA = DM.SUM_ACC - DM.SUM_SUP
FROM DOC_MOVEMENT DM
    LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
WHERE DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
    AND DM.CODE_OP = 'ADD' and DM.ID_STORE IS NOT NULL and DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)

UNION ALL

SELECT
	ID_DOCUMENT = CS.ID_CASH_SESSION_GLOBAL,
	DOC_NAME = ' ‡ÒÒÓ‚‡ˇ ÒÏÂÌ‡',
	DATE_OP = CS.DATE_CLOSE,
	INCOMING_NUMBER = '',
	DOC_NUM = CS.MNEMOCODE,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, TT.TAX_RATE)) + '%',
	SUM_SUP = 0,
	SUM_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	SUM_SUP0 = 0,
	SUM_ACC0 = (S4S.PRICE_SAL - S4S.PRICE_SAL * TT.TAX_RATE / 100)* S4S.QUANTITY * CH_I.QUANTITY,
	SVAT_SUP = 0,
	SVAT_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY * TT.TAX_RATE / 100,
	DELTA = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY
FROM CHEQUE_ITEM CH_I
	INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
	INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	INNER JOIN SERVICE_4_SALE_ITEM S4S ON S4S.ID_SERVICE_4_SALE = CH_I.ID_LOT_GLOBAL
	INNER JOIN SERVICE S ON S.ID_SERVICE = S4S.ID_SERVICE
	INNER JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = S.ID_TAX_TYPE
WHERE CH.CHEQUE_TYPE = 'RETURN' AND CS.DATE_CLOSE BETWEEN @DATE_FR AND @DATE_TO
) AS R1
GROUP BY R1.ID_DOCUMENT, R1.DATE_OP, R1.DOC_NUM, R1.VAT_RATE
ORDER BY CASE WHEN @SORT_DOC = 1 THEN MAX(R1.DOC_NAME) else CAST(R1.DATE_OP AS VARCHAR(20)) end,
		CASE WHEN @SORT_DOC = 1 then R1.DOC_NUM else MAX(R1.DOC_NAME) end,
		CASE WHEN @SORT_DOC = 1 then CAST(R1.DATE_OP AS VARCHAR(20)) else R1.DOC_NUM end


END ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END

IF(@SHOW_SUB = 1) 
BEGIN-- Œ¡Ÿ»… –¿—’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
SELECT
	ID_DOCUMENT = R1.ID_DOCUMENT,
	DOC_NAME = MAX(DOC_NAME), 
	DATE_OP = R1.DATE_OP,
	DOC_NUM = R1.DOC_NUM,
	VAT_RATE = R1.VAT_RATE,
	SUM_SUP = SUM(R1.SUM_SUP),
	SUM_ACC = SUM(R1.SUM_ACC),
    SUM_SUP0 = SUM(R1.SUM_SUP0),
	SUM_ACC0 = SUM(R1.SUM_ACC0),
    SVAT_SUP = SUM(R1.SVAT_SUP),    
    SVAT_ACC = SUM(R1.SVAT_ACC),
    DELTA = SUM(R1.DELTA)
FROM
(
SELECT 
	DM.ID_DOCUMENT, 
	DOC_NAME = ISNULL((SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
		WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE), ' ‡ÒÒÓ‚‡ˇ ÒÏÂÌ‡'), 
	DM.DATE_OP,
	ALD.DOC_NUM,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	SUM_SUP = DM.SUM_SUP,
	SUM_ACC = DM.SUM_ACC,
    SUM_SUP0 = DM.SUM_SUP - DM.SVAT_SUP,
	SUM_ACC0 = DM.SUM_ACC - DM.SVAT_ACC,
    SVAT_SUP = DM.SVAT_SUP,    
    SVAT_ACC = DM.SVAT_ACC,
    DELTA = DM.SUM_ACC - DM.SUM_SUP
FROM DOC_MOVEMENT DM
    LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
WHERE DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
    AND DM.CODE_OP = 'SUB' and DM.ID_STORE IS NOT NULL and DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)

UNION ALL

SELECT
	ID_DOCUMENT = CS.ID_CASH_SESSION_GLOBAL,
	DOC_NAME = ' ‡ÒÒÓ‚‡ˇ ÒÏÂÌ‡',
	DATE_OP = CS.DATE_CLOSE,
	DOC_NUM = CS.MNEMOCODE,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, TT.TAX_RATE)) + '%',
	SUM_SUP = 0,
	SUM_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	SUM_SUP0 = 0,
	SUM_ACC0 = (S4S.PRICE_SAL - S4S.PRICE_SAL * TT.TAX_RATE / 100)* S4S.QUANTITY * CH_I.QUANTITY,
	SVAT_SUP = 0,
	SVAT_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY * TT.TAX_RATE / 100,
	DELTA = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY
FROM CHEQUE_ITEM CH_I
	INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
	INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	INNER JOIN SERVICE_4_SALE_ITEM S4S ON S4S.ID_SERVICE_4_SALE = CH_I.ID_LOT_GLOBAL
	INNER JOIN SERVICE S ON S.ID_SERVICE = S4S.ID_SERVICE
	INNER JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = S.ID_TAX_TYPE
WHERE CH.CHEQUE_TYPE = 'SALE' AND CS.DATE_CLOSE BETWEEN @DATE_FR AND @DATE_TO
) AS R1
GROUP BY R1.ID_DOCUMENT, R1.DATE_OP, R1.DOC_NUM, R1.VAT_RATE
ORDER BY CASE WHEN @SORT_DOC = 1 THEN MAX(R1.DOC_NAME) else CAST(R1.DATE_OP AS VARCHAR(20)) end,
		CASE WHEN @SORT_DOC = 1 then R1.DOC_NUM else MAX(R1.DOC_NAME) end,
		CASE WHEN @SORT_DOC = 1 then CAST(R1.DATE_OP AS VARCHAR(20)) else R1.DOC_NUM end

END ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END

DECLARE @STORES VARCHAR(1024)
DECLARE @CONTRACTORS VARCHAR(1024)

EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT @CONTRACTORS, @STORES

-- Œ—“¿“Œ  Õ¿  ŒÕ≈÷
SELECT 
	VAT_RATE = S1.VAT_RATE,
	SUM_SUP = SUM(S1.SUM_SUP),
	SUM_ACC = SUM(S1.SUM_ACC),
	SUM_SUP0 = SUM(S1.SUM_SUP0),
	SUM_ACC0 = SUM(S1.SUM_ACC0),
	SVAT_SUP = SUM(S1.SVAT_SUP),
	SVAT_ACC = SUM(S1.SVAT_ACC),
	DELTA = SUM(S1.DELTA)
FROM
(
SELECT
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	SUM_SUP = DM.SUM_SUP * DM.SIGN_OP,
	SUM_ACC = CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP,
	SUM_SUP0 = (DM.SUM_SUP - DM.SVAT_SUP) * SIGN_OP,
	SUM_ACC0 = (CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC - SVAT_ACC) * SIGN_OP,
	SVAT_SUP = DM.SVAT_SUP * DM.SIGN_OP,
	SVAT_ACC = SVAT_ACC * DM.SIGN_OP,	
	DELTA = (CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC - DM.SUM_SUP) * DM.SIGN_OP
FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_TO
    AND (DM.ID_STORE IS NOT NULL AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))

UNION ALL

SELECT
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, TT.TAX_RATE)) + '%',
	SUM_SUP = 0,
	SUM_ACC = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	SUM_SUP0 = 0,
	SUM_ACC0 = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * (S4S.PRICE_SAL - S4S.PRICE_SAL * TT.TAX_RATE / 100) * S4S.QUANTITY * CH_I.QUANTITY,
	SVAT_SUP = 0,
	SVAT_ACC = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * (S4S.PRICE_SAL * TT.TAX_RATE / 100) * S4S.QUANTITY * CH_I.QUANTITY,
	DELTA = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN -1 ELSE 1 END * S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY
FROM CHEQUE_ITEM CH_I
     INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
     INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
     INNER JOIN SERVICE_4_SALE_ITEM S4S ON S4S.ID_SERVICE_4_SALE = CH_I.ID_LOT_GLOBAL
     INNER JOIN SERVICE S ON S.ID_SERVICE = S4S.ID_SERVICE
     INNER JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = S.ID_TAX_TYPE
WHERE CS.DATE_CLOSE < @DATE_TO 
) AS S1
GROUP BY VAT_RATE

RETURN 0
GO

/*
exec REP_GOODS_REPORTS_NG_EX_SERVICE N'
<XML>
	<DATE_FR>2009-05-10T15:26:59.167</DATE_FR>
	<DATE_TO>2009-06-15T15:26:59.167</DATE_TO>
	<NO_DETAIL>0</NO_DETAIL>
	<SHOW_ADD>1</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<SORT_DOC>1</SORT_DOC>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>	
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
</XML>'*/