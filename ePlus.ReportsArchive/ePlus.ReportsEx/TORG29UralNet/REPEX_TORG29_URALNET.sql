IF (OBJECT_ID('REPEX_TORG29_URALNET') IS NULL) EXEC ('CREATE PROCEDURE REPEX_TORG29_URALNET AS RETURN')
GO
ALTER PROCEDURE REPEX_TORG29_URALNET(
    @XMLPARAM NTEXT
)
AS
    DECLARE @HDOC INT
    DECLARE @DATE_FROM DATETIME, @DATE_TO DATETIME, @SORT_BY_DOCTYPE BIT, @REFRESH_DOC_MOV BIT
    DECLARE @STORE TABLE(ID_CONTRACTOR BIGINT NOT NULL, ID_STORE BIGINT NOT NULL)

    EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
    SELECT
        @DATE_FROM = DATE_FROM,
        @DATE_TO = DATE_TO,
        @SORT_BY_DOCTYPE = SORT_BY_DOCTYPE,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FROM DATETIME 'DATE_FROM',
        DATE_TO DATETIME 'DATE_TO',
        SORT_BY_DOCTYPE BIT 'SORT_BY_DOCTYPE',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV'
    )        

    INSERT INTO @STORE
    SELECT 
        S.ID_CONTRACTOR,
        A.ID_STORE
    FROM OPENXML(@HDOC, '/XML/ID_STORE') WITH(
        ID_STORE BIGINT '.'
    ) A
    INNER JOIN STORE S ON S.ID_STORE = A.ID_STORE

    INSERT INTO @STORE
    SELECT
        A.ID_CONTRACTOR,
        S.ID_STORE
    FROM OPENXML(@HDOC, '/XML/ID_CONTRACTOR') WITH(
        ID_CONTRACTOR BIGINT '.'
    ) A
    INNER JOIN STORE S ON S.ID_CONTRACTOR = A.ID_CONTRACTOR
    AND NOT EXISTS (SELECT NULL FROM @STORE S1 WHERE S1.ID_CONTRACTOR=A.ID_CONTRACTOR)

    EXEC SP_XML_REMOVEDOCUMENT @HDOC

    EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
    EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT

    IF (@REFRESH_DOC_MOV=1) BEGIN
        EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
    END

    -- на начало
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        -- в сумму розничную пишется сумма без учета скидки
        -- и отдельно пишется сумма скидки
        -- чтобы в сумме это два раза не учитывалось 
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
--        SUM_ACC = SUM(CASE WHEN CODE_OP='DIS' THEN DM.SUM_ACC * -1 ELSE DM.SUM_ACC* DM.SIGN_OP END),
        SUM_NAL = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(DM.SUM_SUP * DM.SIGN_OP)
--        SUM_NAL = SUM(CASE WHEN CODE_OP='DIS' THEN DM.SUM_ACC * -1 ELSE DM.SUM_ACC* DM.SIGN_OP END) - SUM(DM.SUM_SUP *DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FROM
    AND DM.ID_STORE IN (SELECT ID_STORE FROM @STORE)

    -- приход
    select
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        DOC_TYPE = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')',''),
        ID_CONTRACTOR_FROM = ISNULL(DM.ID_CONTRACTOR_FROM, 0),
        CONTRACTOR_FROM = ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')',''),
        SUM_SUP = SUM(DM.SUM_SUP),
        SUM_ACC = SUM(DM.SUM_ACC),
        SUM_NAL = SUM(DM.SUM_ACC) - SUM(DM.SUM_SUP),
        SUM_DIS = ISNULL(CONVERT(MONEY, NULL),0)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_FROM
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_FROM
    WHERE CODE_OP='ADD'-- OR (CODE_OP='DIS' AND DM.ID_TABLE=19 AND SIGN_OP=-1))
    AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM @STORE)
    GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, TD.DESCRIPTION, DM.DATE_OP, AD.DOC_NUM, DM.ID_CONTRACTOR_FROM, C.NAME, S.NAME
    ORDER BY CASE WHEN NULLIF(@SORT_BY_DOCTYPE,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP
    
    -- расход
    select
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        DOC_TYPE = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')',''),
        ID_CONTRACTOR_TO = ISNULL(DM.ID_CONTRACTOR_TO, 0),
        CONTRACTOR_TO = ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')',''),
        SUM_SUP = SUM(CASE WHEN DM.CODE_OP='SUB' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN DM.CODE_OP='SUB' THEN DM.SUM_ACC ELSE 0 END),
        SUM_NAL = SUM(CASE WHEN DM.CODE_OP='SUB' THEN DM.SUM_ACC-DM.SUM_SUP ELSE 0 END),
--        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' THEN DM.SUM_ACC ELSE 0 END)
        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE=19 THEN DM.SUM_ACC * DM.SIGN_OP
						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE<>19 THEN DM.SUM_ACC
						   ELSE 0 END)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_TO
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_TO
    WHERE CODE_OP IN ('SUB', 'DIS')
    AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM @STORE)
    GROUP BY DM.ID_DOCUMENT, DM.ID_TABLE, TD.DESCRIPTION, DM.DATE_OP, AD.DOC_NUM, DM.ID_CONTRACTOR_TO, C.NAME, S.NAME
    ORDER BY CASE WHEN NULLIF(@SORT_BY_DOCTYPE,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP

    -- на конец
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        -- в сумму розничную пишется сумма без учета скидки
        -- и отдельно пишется сумма скидки
        -- чтобы в сумме это два раза не учитывалось 
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
--        SUM_ACC = SUM(CASE WHEN CODE_OP='DIS' THEN DM.SUM_ACC * -1 ELSE DM.SUM_ACC* DM.SIGN_OP END),
        SUM_NAL = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(DM.SUM_SUP * DM.SIGN_OP)
--        SUM_NAL = SUM(CASE WHEN CODE_OP='DIS' THEN DM.SUM_ACC * -1 ELSE DM.SUM_ACC* DM.SIGN_OP END) - SUM(DM.SUM_SUP *DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM @STORE)

-- контрагенты и склады через ,
    DECLARE @CONTRACTOR_STRING VARCHAR(4000)
    DECLARE @STORE_STRING VARCHAR(4000)

    SELECT 
        @STORE_STRING = ISNULL(@STORE_STRING+' ,'+S.NAME, S.NAME)
    FROM (SELECT DISTINCT ID_STORE FROM @STORE) T
    INNER JOIN STORE S ON S.ID_STORE = T.ID_STORE

    SELECT 
        @CONTRACTOR_STRING = ISNULL(@CONTRACTOR_STRING+' ,'+C.NAME, C.NAME)
    FROM (SELECT DISTINCT ID_CONTRACTOR FROM @STORE) T
    INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR

    SELECT CONTRACTOR = @CONTRACTOR_STRING, STORE = @STORE_STRING
RETURN
GO
--exec REPEX_TORG29_URALNET @xmlParam = N'<XML><DATE_FROM>2009-07-07T11:22:22.750</DATE_FROM><DATE_TO>2009-07-07T11:22:22.750</DATE_TO><ID_CONTRACTOR>5277</ID_CONTRACTOR><ID_STORE>153</ID_STORE><SORT_BY_DOCTYPE>1</SORT_BY_DOCTYPE><REFRESH_DOC_MOV>0</REFRESH_DOC_MOV></XML>'