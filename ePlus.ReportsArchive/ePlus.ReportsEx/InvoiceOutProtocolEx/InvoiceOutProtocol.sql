IF (OBJECT_ID('REPEX_INVOICE_OUT_PROTOCOL') IS NULL) EXEC ('CREATE PROCEDURE REPEX_INVOICE_OUT_PROTOCOL AS RETURN')
GO
ALTER PROCEDURE REPEX_INVOICE_OUT_PROTOCOL(
    @XMLPARAM NTEXT
)
AS
    DECLARE @HDOC INT
    DECLARE @ID_GLOBAL UNIQUEIDENTIFIER
    EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
    SElECT
        @ID_GLOBAL = ID_GLOBAL
    FROM OPENXML(@HDOC, '//XML') WITH(
        ID_GLOBAL UNIQUEIDENTIFIER 'ID_GLOBAL'
    )
    EXEC SP_XML_REMOVEDOCUMENT @HDOC


    SELECT 
        IO.MNEMOCODE,
        IO.DATE,
        [FROM] = case 
                   when C_FROM.FULL_NAME is null then C_FROM.NAME
                   when C_FROM.FULL_NAME = '' then C_FROM.NAME
                   else C_FROM.FULL_NAME
                 end,                   
        [TO] = case 
                   when C_TO.FULL_NAME is null then C_TO.NAME
                   when C_TO.FULL_NAME = '' then C_TO.NAME
                   else C_TO.FULL_NAME
                 end,
        IO.SUM_SAL
    FROM INVOICE_OUT IO
    INNER JOIN STORE S ON S.ID_STORE = IO.ID_STORE
    INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = IO.ID_CONTRACTOR_TO

    WHERE ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL

    SELECT 
        GOODS_NAME = g.NAME +' - '+c.NAME+CHAR(10)+CHAR(13)+P.NAME,
        S.ID_SERIES,
        SERIES = S.SERIES_NUMBER,
        BEST_BEFORE = S.BEST_BEFORE,
        CERT_NUMBER = CONVERT(VARCHAR(4000), NULL),
        CERT_END_DATE = CONVERT(VARCHAR(4000), NULL),
        QUANTITY = IOI.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR,
        PRICE_SUP = (L.PRICE_SUP - L.PVAT_SUP) * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
        VAT_SUP = L.VAT_SUP,
        ADPRICE = L.ADPRICE_SAL,--((L.PRICE_SAL - L.PVAT_SUP)/ (L.PRICE_SUP-L.PVAT_SUP))*100-100,
        PRICE_SAL = L.PRICE_SAL * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR,
        SUM_SAL = L.PRICE_SAL * QUANTITY
    INTO #ITEMS
    FROM INVOICE_OUT_ITEM IOI
    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = IOI.ID_LOT_GLOBAL
    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
    INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
    INNER JOIN COUNTRY C ON C.ID_COUNTRY = P.ID_COUNTRY
    LEFT JOIN SERIES S ON S.ID_SERIES = L.ID_SERIES
    WHERE ID_INVOICE_OUT_GLOBAL = @ID_GLOBAL

    DECLARE C CURSOR FOR
    SELECT 
        ID_SERIES,    
        CERT_NUMBER,
        CERT_END_DATE
    FROM CERTIFICATE C
    WHERE EXISTS (SELECT NULL FROM #ITEMS I WHERE I.ID_SERIES = C.ID_SERIES)    

    DECLARE @ID_SERIES BIGINT
    DECLARE @CERT_NUMBER VARCHAR(40)
    DECLARE @CERT_END_DATE DATETIME
    OPEN C 
    WHILE 1=1 BEGIN
        FETCH NEXT FROM C INTO @ID_SERIES, @CERT_NUMBER, @CERT_END_DATE
        IF (@@FETCH_STATUS<>0) BREAK
        UPDATE #ITEMS SET
            CERT_NUMBER = ISNULL(CERT_NUMBER+ISNULL(', '+@CERT_NUMBER,''), @CERT_NUMBER),
            CERT_END_DATE = ISNULL(CERT_END_DATE+ISNULL(', '+dbo.FN_DATE_2_VARCHAR(@CERT_END_DATE),''), dbo.FN_DATE_2_VARCHAR(@CERT_END_DATE))
        WHERE #ITEMS.ID_SERIES = @ID_SERIES
    END
    CLOSE C
    DEALLOCATE C

    SELECT 
        GOODS_NAME,
        SERIES,
        BEST_BEFORE,
        CERT_NUMBER,
        CERT_END_DATE,
        QUANTITY,
        PRICE_SUP,
        VAT_SUP,
        ADPRICE,
        PRICE_SAL,
        SUM_SAL    
    FROM #ITEMS
    ORDER BY GOODS_NAME ASC
    
SELECT
	DIR = DIRECTOR_FIO,
	BUH = BUH_FIO
FROM CONTRACTOR
WHERE ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)
    
    
RETURN
GO

