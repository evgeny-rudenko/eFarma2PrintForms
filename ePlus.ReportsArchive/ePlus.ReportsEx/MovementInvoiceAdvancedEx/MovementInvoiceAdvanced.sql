SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('REPEX_MOVEMENT_INVOICE_ADVANCED') IS NULL) EXEC ('CREATE PROCEDURE REPEX_MOVEMENT_INVOICE_ADVANCED AS RETURN')
GO
ALTER PROCEDURE REPEX_MOVEMENT_INVOICE_ADVANCED 
    @XMLPARAM NTEXT
AS
    DECLARE @HDOC INT, @ID_GLOBAL UNIQUEIDENTIFIER
    EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
    SELECT
        @ID_GLOBAL = ID_GLOBAL
    FROM OPENXML(@HDOC, '//XML', 2)
    WITH (
        ID_GLOBAL UNIQUEIDENTIFIER
    )
    EXEC SP_XML_REMOVEDOCUMENT @HDOC
    

    SELECT 
        [NUMBER] = M.MNEMOCODE + ' ' + M.COMMENT,
        [DATE] = M.DATE,
        [FROM] = CFROM.NAME + ' - '+SFROM.NAME, 
--        [TO] = CTO.NAME + ' - '+STO.NAME,
	[TO] = STO.NAME,
        [BASE] = M.BASE_DOCUMENT_NAME
    FROM MOVEMENT M
    INNER JOIN STORE SFROM ON SFROM.ID_STORE = M.ID_STORE_FROM
    INNER JOIN STORE STO ON STO.ID_STORE = M.ID_STORE_TO
    INNER JOIN CONTRACTOR CFROM ON CFROM.ID_CONTRACTOR = SFROM.ID_CONTRACTOR
    INNER JOIN CONTRACTOR CTO ON CTO.ID_CONTRACTOR = STO.ID_CONTRACTOR
    WHERE M.ID_MOVEMENT_GLOBAL = @ID_GLOBAL

    SELECT 
        [GOODS] = G.NAME + ' ('+P.NAME+')',
        [QTY] = QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY, SR.DENOMINATOR),
	[PRICE_SUP]  = PRICE_SUPPLIER_VAT,
--        [PRICE_SUP]  = PRICE_SUPPLIER * CONVERT(MONEY, SR.DENOMINATOR) / CONVERT(MONEY, SR.NUMERATOR),
	[ADPRICE] = (PRICE_SALE / (PRICE_SUPPLIER_VAT / 100))-100,
--        [ADPRICE] = (PRICE_SALE / (PRICE_SUPPLIER / 100))-100,
        [PRICE_SAL] = PRICE_SALE * CONVERT(MONEY, SR.DENOMINATOR) / CONVERT(MONEY, SR.NUMERATOR),
        [SUM_SAL] = PRICE_SALE * QUANTITY,
        [SERIES] = S.SERIES_NUMBER,
        [BEST_BEFORE] = S.BEST_BEFORE,
        [IMPORTANT] = CASE WHEN CONVERT(BIT, G.IMPORTANT)=1 THEN 'ÄÀ' ELSE '-' END
    FROM MOVEMENT_ITEM MI
    INNER JOIN GOODS G ON G.ID_GOODS = MI.ID_GOODS
    INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
    INNER JOIN LOT LFROM ON LFROM.ID_LOT = MI.ID_LOT_FROM
    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = MI.ID_SCALING_RATIO
    LEFT JOIN SERIES S ON S.ID_SERIES = LFROM.ID_SERIES
    WHERE MI.ID_MOVEMENT_GLOBAL = @ID_GLOBAL
    ORDER BY 1 ASC
RETURN 
GO

--exec REPEX_MOVEMENT_INVOICE_ADVANCED N'<XML><ID_GLOBAL>B51B9486-8586-4D09-BC06-28176D582B7F</ID_GLOBAL></XML>'