SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_PRICE_LIST') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_PRICE_LIST AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_PRICE_LIST
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT, @SORT INT
DECLARE @TEXT NVARCHAR(4000)
DECLARE @DATE_OST DATETIME
DECLARE @ALL_GOODS BIT, @ALL_STORE BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE_OST = DATE_OST, @SORT = SORT
		FROM OPENXML(@HDOC, '/XML') 
	WITH(DATE_OST DATETIME 'DATE_OST', SORT INT 'SORT')

	SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//ID_GOODS') 
	WITH(ID_GOODS BIGINT '.') WHERE ID_GOODS <> 0
	IF @@ROWCOUNT = 0 SET @ALL_GOODS = 1

	SELECT * INTO #STORE
	FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.') WHERE ID_STORE <> 0
	IF @@ROWCOUNT = 0 SET @ALL_STORE = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_DAYS NULL, @DATE_OST OUT
EXEC DBO.USP_RANGE_NORM NULL, @DATE_OST OUT
SET @SORT = ISNULL(@SORT, 0)

SELECT L.ID_GOODS, L.ID_STORE,
	L.ID_LOT_GLOBAL,
	AMOUNT_OST = SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES),
	L.PRICE_SUP,
	L.PRICE_SAL	
INTO #OST
FROM LOT L
INNER JOIN LOT_MOVEMENT LM ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
WHERE (@ALL_GOODS = 1 OR L.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)) 
AND  (@ALL_STORE = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM #STORE))
AND LM.DATE_OP <= @DATE_OST
GROUP BY L.ID_GOODS, L.ID_STORE, L.PRICE_SUP, L.PRICE_SAL, L.ID_LOT_GLOBAL

SELECT OST.ID_GOODS,
      G_CODE = G.CODE,
	  GOODS_NAME = G.[NAME],
      MV.DOC_DATE,
      GOODS_NAME_FULL = G.[NAME] + ' (' + P.[NAME] + ')',
	  AMOUNT = OST.AMOUNT_OST,
   	  SCALE_NAME = DBO.FN_SCALE_NAME_SHORT(L.ID_SCALING_RATIO),
	  DOC_NAME = DBO.REP_DATE(MV.DOC_DATE) + ' ' + MV.DOC_NUM,
	  CONTRACTOR_NAME = C.[NAME],--ÏÎÑÒÀÂÙÈÊ
	  PRICE_OPT = OST.PRICE_SUP, --ÎÏÒ. ÖÅÍÀ
	  PRICE_SAL = OST.PRICE_SAL, --ÐÎÇÍ. ÖÅÍÀ
	  RETAIL_PRICE_SUM = OST.AMOUNT_OST*OST.PRICE_SAL, 
	  BEST_BEFORE = DBO.REP_DATE(S.BEST_BEFORE), --ÃÎÄÅÍ ÄÎ
	  S.SERIES_NUMBER, --ÑÅÐÈß
	  L.INTERNAL_BARCODE, --ØÒÐÈÕÊÎÄ
	  -- CERT_NUMBER = (SELECT CR.CERT_NUMBER FROM #result_cert cr where CR.ID_SERIES = LOT.ID_SERIES),
      CERT_NUMBER = DBO.FN_SERIES_CERTIFICATE(L.ID_SERIES),
	  COUNTRY = COALESCE(CNR.NAME, ''), --ÑÒÐÀÍÀ
	  IMPORTANT = 
	  CASE G.IMPORTANT
	      WHEN 0 THEN '-'
	      WHEN 1 THEN 'ÄÀ'
	  END, --ÆÍÂËÑ
	  IN_DRUG = 
	  CASE G.IN_DRUG
	      WHEN 0 THEN '-'
	      WHEN 1 THEN 'ÄÀ'
	  END, --ÏÊÓ
	  ITOG = OST.AMOUNT_OST*CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR
INTO #TEMP
FROM #OST OST
INNER JOIN LOT L ON L.ID_LOT_GLOBAL = OST.ID_LOT_GLOBAL
INNER JOIN DBO.GOODS G ON G.ID_GOODS = OST.ID_GOODS
INNER JOIN DBO.PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
INNER JOIN DBO.COUNTRY CNR ON P.ID_COUNTRY = CNR.ID_COUNTRY
INNER JOIN DBO.CONTRACTOR C ON C.ID_CONTRACTOR= L.ID_SUPPLIER
INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
LEFT JOIN SERIES S ON S.ID_SERIES = L.ID_SERIES
LEFT JOIN MV_DOCUMENTS MV ON MV.ID_DOCUMENT_GLOBAL = L.ID_DOCUMENT
WHERE AMOUNT_OST > 0

SELECT *,
	SUM_OPT = PRICE_OPT * AMOUNT,
	SUM_SAL = PRICE_SAL * AMOUNT 
INTO #SORT FROM #TEMP

DECLARE @QUERY NVARCHAR(4000)
SET @QUERY = 'SELECT * FROM #SORT'
IF @SORT = 0 SET @QUERY = @QUERY + ' ORDER BY GOODS_NAME'
IF @SORT = 1 SET @QUERY = @QUERY + ' ORDER BY CONTRACTOR_NAME, GOODS_NAME'
IF @SORT = 2 SET @QUERY = @QUERY + ' ORDER BY DOC_DATE, GOODS_NAME'

SELECT 
    ISNULL(CNT.NAME, '') AS COMPANY,
    CNT.PHONE
FROM DBO.CONTRACTOR CNT
WHERE CNT.ID_CONTRACTOR = DBO.FN_CONST_CONTRACTOR_SELF()

EXEC SP_EXECUTESQL @query

RETURN 0
GO


