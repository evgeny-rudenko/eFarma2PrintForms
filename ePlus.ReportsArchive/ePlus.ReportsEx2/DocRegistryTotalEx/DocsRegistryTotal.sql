SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID(N'DBO.REPEX_DOCS_REGISTRY') IS NULL) EXEC (N'CREATE PROCEDURE DBO.REPEX_DOCS_REGISTRY AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_DOCS_REGISTRY
    @XMLPARAM NTEXT AS

DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @SORT_DOC BIT

DECLARE @ALL_TYPES BIT
DECLARE @ALL_STATES BIT
DECLARE @ALL_CONTRACTORS_FROM BIT
DECLARE @ALL_CONTRACTORS_TO BIT
DECLARE @ALL_STORES_FROM BIT
DECLARE @ALL_STORES_TO BIT
DECLARE @ALL_GOODS BIT

DECLARE @HDOC INT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@DATE_FROM = DATE_FROM,
	@DATE_TO = DATE_TO,
	@SORT_DOC = SORT_DOC
FROM OPENXML(@HDOC, '/XML', 2) WITH(
	DATE_FROM DATETIME,
	DATE_TO DATETIME,
	SORT_DOC BIT 'SORT_DOC' --1 - по типу документа, 0 - по дате
)

EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT

--select @date_from
--select @date_to
--select @sort_doc

SELECT * INTO #DOC_TYPES
FROM OPENXML(@HDOC, '//XML/DOC_TYPES/DOC_TYPE', 2) WITH(DOC_TYPE VARCHAR(30) '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_TYPES = 1

--select * from #doc_types
--select @all_types

SELECT * INTO #DOC_STATES
FROM OPENXML(@HDOC, '//XML/DOC_STATES/DOC_STATE', 2) WITH(DOC_STATE VARCHAR(4) '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STATES = 1

--select * from #doc_states
--select @all_states

SELECT * INTO #CONTRACTORS_FROM
FROM OPENXML(@HDOC, '//XML/CONTRACTORS_FROM/ID_CONTRACTOR', 2) WITH (ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTORS_FROM = 1

--select * from #contractors_from
--select @all_contractors_from
--SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM

SELECT * INTO #CONTRACTORS_TO
FROM OPENXML(@HDOC, '//XML/CONTRACTORS_TO/ID_CONTRACTOR', 2) WITH (ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTORS_TO = 1

--select * from #contractors_to
--select @all_contractors_to

SELECT * INTO #STORES_FROM
FROM OPENXML(@HDOC, '//XML/STORES_FROM/ID_STORE', 2) WITH (ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES_FROM = 1

--select * from #STORES_FROM
--select @ALL_STORES_FROM

DECLARE @STORES_FROM TABLE
(
	ID_STORE BIGINT,
	ID_CONTRACTOR BIGINT
)

INSERT INTO @STORES_FROM
SELECT S.ID_STORE, S.ID_CONTRACTOR FROM STORE AS S INNER JOIN #STORES_FROM AS ST ON S.ID_STORE = ST.ID_STORE

--select * from @stores_from

SELECT * INTO #STORES_TO
FROM OPENXML(@HDOC, '//XML/STORES_TO/ID_STORE', 2) WITH (ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES_TO = 1

--select * from #STORES_TO
--select @ALL_STORES_TO

DECLARE @STORES_TO TABLE
(
	ID_STORE BIGINT,
	ID_CONTRACTOR BIGINT
)

INSERT INTO @STORES_TO
SELECT S.ID_STORE, S.ID_CONTRACTOR FROM STORE AS S INNER JOIN #STORES_TO AS ST ON S.ID_STORE = ST.ID_STORE

--select * from @stores_to

SELECT * INTO #GOODS
FROM OPENXML(@HDOC, '//XML/GOODS/ID_GOOD', 2) WITH (ID_GOOD BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_GOODS = 1

--select * from #GOODS
--select @ALL_GOODS

EXEC SP_XML_REMOVEDOCUMENT @HDOC

DECLARE @DOCUMENTS TABLE
(
	DOC_DATE DATETIME,
	DOC_TYPE_NAME VARCHAR(50),
	DOC_NUM VARCHAR(50),
	[FROM] VARCHAR(210),
	[TO] VARCHAR(210),
	DOC_STATE VARCHAR(20),
	SUM_SAL MONEY,
	SUP_SUM MONEY,
	SUP_VAT MONEY,
	BASE_DOC VARCHAR(100)
)

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'INVOICE')) 
BEGIN	
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DOCUMENT_DATE,
		DOC_TYPE_NAME = 'Приходная накладная',
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.[NAME],
		[TO] = C_TO.[NAME] + ' (' + S_TO.[NAME] + ')',
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_RETAIL,
		SUP_SUM = D.SUM_SUPPLIER,
		SUP_VAT = D.SVAT_SUPPLIER,
		BASE_DOC = D.INCOMING_NUMBER + CASE WHEN D.INCOMING_DATE IS NULL THEN '' ELSE ' от ' + CONVERT(VARCHAR, D.INCOMING_DATE, 104) END
	FROM INVOICE D
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = D.ID_CONTRACTOR_SUPPLIER
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
	WHERE D.DOCUMENT_DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_STORES_TO = 1 OR S_TO.ID_STORE IN (SELECT ID_STORE FROM @STORES_TO AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_TO.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM INVOICE_ITEM II WHERE II.ID_INVOICE_GLOBAL = D.ID_INVOICE_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'ACT_RETURN_TO_CONTRACTOR')) 
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт возврата поставщику',
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.TOTAL,
		SUP_SUM = (SELECT SUM(I.PRICE_VAT * I.QUANTITY) FROM ACT_RETURN_TO_CONTRACTOR_ITEM I WHERE I.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL),
		SUP_VAT = (SELECT SUM((I.PRICE_VAT - I.PRICE) * I.QUANTITY) FROM ACT_RETURN_TO_CONTRACTOR_ITEM I WHERE I.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL),
		BASE_DOC = D.BASE_DOCUMENT_NAME
	FROM ACT_RETURN_TO_CONTRACTOR D
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR_TO
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM ACT_RETURN_TO_CONTRACTOR_ITEM II WHERE II.ID_ACT_RETURN_TO_CONTRACTOR = D.ID_ACT_RETURN_TO_CONTRACTOR AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'ACT_DISASSEMBLING'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт разукомплектации',            
		DOC_NUM = D.MNEMOCODE,		
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = (SELECT SUM(PRICE_VAT_FROM * QUANTITY_FROM) FROM ACT_DISASSEMBLING_ITEM WHERE ID_ACT_DISASSEMBLING_GLOBAL = D.ID_ACT_DISASSEMBLING_GLOBAL),
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY_FROM) FROM LOT L INNER JOIN ACT_DISASSEMBLING_ITEM DI ON DI.ID_LOT_FROM = L.ID_LOT WHERE DI.ID_ACT_DISASSEMBLING_GLOBAL = D.ID_ACT_DISASSEMBLING_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY_FROM) FROM LOT L INNER JOIN ACT_DISASSEMBLING_ITEM DI ON DI.ID_LOT_FROM = L.ID_LOT WHERE DI.ID_ACT_DISASSEMBLING_GLOBAL = D.ID_ACT_DISASSEMBLING_GLOBAL),
		BASE_DOC = D.BASE_DOCUMENT_NAME
	FROM ACT_DISASSEMBLING D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		((@ALL_CONTRACTORS_FROM = 1 AND @ALL_CONTRACTORS_TO = 1) OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM) OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		((@ALL_STORES_FROM = 1 AND @ALL_STORES_TO = 1) OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR) OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_TO AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM ACT_DISASSEMBLING_ITEM II WHERE II.ID_ACT_DISASSEMBLING = D.ID_ACT_DISASSEMBLING AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'CHEQUE'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT
	)
	SELECT
		DOC_DATE = D.DATE_CHEQUE,
		DOC_TYPE_NAME = 'Чек продажи',            
		DOC_NUM = CONVERT(VARCHAR(30), D.ID_CHEQUE),
		[FROM] = C_FROM.NAME,
		[TO] = NULL,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUMM,
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL)
	FROM CHEQUE D
		INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = D.ID_CASH_SESSION_GLOBAL
		INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = CR.ID_CONTRACTOR
	WHERE D.CHEQUE_TYPE = 'SALE' AND
		D.DATE_CHEQUE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM CHEQUE_ITEM II WHERE II.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'CHEQUE_RETURN'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT
	)
	SELECT
		DOC_DATE = D.DATE_CHEQUE,
		DOC_TYPE_NAME = 'Чек возврата',            
		DOC_NUM = CONVERT(VARCHAR(30), D.ID_CHEQUE),
		[FROM] = NULL,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUMM,
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL)
	FROM CHEQUE D
		INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = D.ID_CASH_SESSION_GLOBAL
		INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = CR.ID_CONTRACTOR
	WHERE D.CHEQUE_TYPE = 'RETURN' AND
		D.DATE_CHEQUE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM CHEQUE_ITEM II WHERE II.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'CHEQUE_CASH_IN'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL
	)
	SELECT
		DOC_DATE = D.DATE_CHEQUE,
		DOC_TYPE_NAME = 'Чек внесения',            
		DOC_NUM = CONVERT(VARCHAR(30), D.ID_CHEQUE),
		[FROM] = C_FROM.NAME,
		[TO] = NULL,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUMM
	FROM CHEQUE D
		INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = D.ID_CASH_SESSION_GLOBAL
		INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = CR.ID_CONTRACTOR
	WHERE D.CHEQUE_TYPE = 'CASH_IN' AND
		D.DATE_CHEQUE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM CHEQUE_ITEM II WHERE II.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'CHEQUE_CASH_OUT'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL
	)
	SELECT
		DOC_DATE = D.DATE_CHEQUE,
		DOC_TYPE_NAME = 'Чек изъятия',            
		DOC_NUM = CONVERT(VARCHAR(30), D.ID_CHEQUE),
		[FROM] = NULL,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUMM
	FROM CHEQUE D
		INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = D.ID_CASH_SESSION_GLOBAL
		INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = CR.ID_CONTRACTOR
	WHERE D.CHEQUE_TYPE = 'CASH_OUT' AND
		D.DATE_CHEQUE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM CHEQUE_ITEM II WHERE II.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'MOVEMENT'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Перемещение товара',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = C_TO.NAME + ' (' + S_TO.NAME + ')',
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.TOTAL_SALE,
		SUP_SUM = D.TOTAL_SUPPLIER_VAT,
		SUP_VAT = D.TOTAL_SUPPLIER_VAT - D.TOTAL_SUPPLIER,
		BASE_DOC = D.BASE_DOCUMENT_NAME
	FROM MOVEMENT D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE_FROM
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE_TO
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_STORES_TO = 1 OR S_TO.ID_STORE IN (SELECT ID_STORE FROM @STORES_TO AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_TO.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM MOVEMENT_ITEM II WHERE II.ID_MOVEMENT_GLOBAL = D.ID_MOVEMENT_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'ACT_RETURN_TO_BUYER'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт возврата от покупателя',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME,
		[TO] = C_TO.NAME + ' (' + S_TO.NAME + ')',
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.TOTAL_WITH_VAT,
		SUP_SUM = D.TOTAL_WITH_VAT_SUPPLIER,
		SUP_VAT = D.TOTAL_WITH_VAT_SUPPLIER - D.TOTAL_SUPPLIER,
		BASE_DOC = CASE WHEN D.ID_TABLE_DATA_DOCUMENT_BASE = 21 THEN 'Расходная накладная ' + (SELECT MNEMOCODE + ' от ' + CONVERT(VARCHAR, [DATE], 104) FROM INVOICE_OUT WHERE ID_INVOICE_OUT = D.ID_DOCUMENT_BASE) WHEN D.ID_TABLE_DATA_DOCUMENT_BASE = 7 THEN 'Чек ' + (SELECT MNEMOCODE + ' от ' + CONVERT(VARCHAR, DATE_CHEQUE, 104) FROM CHEQUE WHERE ID_CHEQUE = D.ID_DOCUMENT_BASE) END
	FROM ACT_RETURN_TO_BUYER D
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = D.ID_CONTRACTOR_FROM
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE_TO
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_STORES_TO = 1 OR S_TO.ID_STORE IN (SELECT ID_STORE FROM @STORES_TO AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_TO.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM ACT_RETURN_TO_BUYER_ITEM II WHERE II.ID_ACT_RETURN_TO_BUYER = D.ID_ACT_RETURN_TO_BUYER AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'ACT_REVALUATION'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC 
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт переоценки',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = D.SUM_SUP,
		SUP_VAT = D.SVAT_SUP,
		BASE_DOC = D.BASE_DOC_TEXT
	FROM ACT_REVALUATION2 D
        INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
        INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		((@ALL_CONTRACTORS_FROM = 1 AND @ALL_CONTRACTORS_TO = 1) OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM) OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND			
		((@ALL_STORES_FROM = 1 AND @ALL_STORES_TO = 1) OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR) OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_TO AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM ACT_REVALUATION2_ITEM II INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS WHERE II.ID_ACT_REVALUATION2_GLOBAL = D.ID_ACT_REVALUATION2_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS GT WHERE GT.ID_GOOD = G.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'CASH_SESSION'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL
	)
	SELECT
		DOC_DATE = D.DATE_CLOSE,
		DOC_TYPE_NAME = 'Кассовая смена',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME,
		[TO] = NULL,
		DOC_STATE = NULL,
		SUM_SAL = D.SUM_SALES - D.SUM_SALES_RETURNS
	FROM CASH_SESSION D
		INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = D.ID_CASH_REGISTER
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = CR.ID_CONTRACTOR
	WHERE D.DATE_CLOSE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM CHEQUE_ITEM II INNER JOIN CHEQUE CH ON II.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL WHERE CH.ID_CASH_SESSION_GLOBAL = D.ID_CASH_SESSION_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))

END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'ACT_DEDUCTION')) BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт списания',            
		DOC_NUM = D.MNEMOCODE,            
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = NULL,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.RETAIL_SUM_VAT,
		SUP_SUM = (SELECT SUM(PRICE_SUP * QUANTITY) FROM ACT_DEDUCTION_ITEM WHERE ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN ACT_DEDUCTION_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL),
		BASE_DOC = D.BASE_DOCUMENT_NAME
	FROM ACT_DEDUCTION D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM ACT_DEDUCTION_ITEM II WHERE II.ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'INVOICE_OUT'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Расходная накладная',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = C_TO.NAME,
		DOC_STATE = D.STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = D.SUM_SUP,
		SUP_VAT = D.SUM_SUP - D.SVAT_SUP,
		BASE_DOC = D.BASE_DOCUMENT_NAME
	FROM INVOICE_OUT D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR_TO
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM INVOICE_OUT_ITEM II INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS WHERE II.ID_INVOICE_OUT_GLOBAL = D.ID_INVOICE_OUT_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS GT WHERE GT.ID_GOOD = G.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'BILL'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT
	)
	SELECT
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Счет',            
		DOC_NUM = D.DOC_NUM,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOC_STATE,
		SUM_SAL = (SELECT SUM(QUANTITY * PRICE_SAL) FROM BILL_ITEM WHERE ID_BILL_GLOBAL = D.ID_BILL_GLOBAL),
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY) FROM BILL_ITEM DI INNER JOIN LOT L ON L.ID_LOT = DI.ID_LOT WHERE DI.ID_BILL_GLOBAL = D.ID_BILL_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM BILL_ITEM DI INNER JOIN LOT L ON L.ID_LOT = DI.ID_LOT WHERE DI.ID_BILL_GLOBAL = D.ID_BILL_GLOBAL)
	FROM BILL D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR
	WHERE D.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM BILL_ITEM II WHERE II.ID_BILL_GLOBAL = D.ID_BILL_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'INVENTORY_VED'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT
	)
	SELECT
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Инвентаризация',
		DOC_NUM = D.DOC_NUM,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = NULL,
		DOC_STATE = D.DOC_STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = D.SUM_SUP,
		SUP_VAT = D.SVAT_SUP
	FROM INVENTORY_VED D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM INVENTORY_VED_ITEM II WHERE II.ID_INVENTORY_VED_GLOBAL = D.ID_INVENTORY_VED_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS G WHERE G.ID_GOOD = II.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'INVENTORY_SVED'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT
	)
	SELECT
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Инвентаризация сводная',
		DOC_NUM = D.DOC_NUM,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		DOC_STATE = D.DOC_STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = D.SUM_SUP,
		SUP_VAT = D.SVAT_SUP
	FROM INVENTORY_SVED D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		((@ALL_CONTRACTORS_FROM = 1 AND @ALL_CONTRACTORS_TO = 1) OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM) OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO)) AND
		((@ALL_STORES_FROM = 1 AND @ALL_STORES_TO = 1) OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR) OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_TO AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'REQUEST'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE
	)
	SELECT
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Заявка',
		DOC_NUM = D.DOC_NUM,            
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = NULL,
		DOC_STATE = D.DOC_STATE
	FROM REQUEST D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE IS_SUMMARY <> 1 AND
		D.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM REQUEST_ITEM II INNER JOIN GOODS G ON II.ID_GOODS = G.ID_GOODS_GLOBAL WHERE II.ID_REQUEST = D.ID_REQUEST AND EXISTS (SELECT NULL FROM #GOODS GT WHERE GT.ID_GOOD = G.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'REQUEST_SUMMARY'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE
	)
	SELECT
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Сводная заявка',
		DOC_NUM = D.DOC_NUM,            
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = NULL,
		DOC_STATE = D.DOC_STATE
	FROM REQUEST D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE IS_SUMMARY = 1 AND
		D.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM REQUEST_ITEM II INNER JOIN GOODS G ON II.ID_GOODS = G.ID_GOODS_GLOBAL WHERE II.ID_REQUEST = D.ID_REQUEST AND EXISTS (SELECT NULL FROM #GOODS GT WHERE GT.ID_GOOD = G.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'VAT_CORRECT'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT
	)
	SELECT
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Корректировка товарного отчета',
		DOC_NUM = D.DOC_NUM,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = NULL,
		DOC_STATE = D.DOC_STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = (SELECT SUM(SUM_SUP) FROM VAT_CORRECT_ITEM WHERE ID_VAT_CORRECT_GLOBAL = D.ID_VAT_CORRECT_GLOBAL),
		SUP_VAT = (SELECT SUM(SVAT_SUP) FROM VAT_CORRECT_ITEM WHERE ID_VAT_CORRECT_GLOBAL = D.ID_VAT_CORRECT_GLOBAL)
	FROM VAT_CORRECT D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DOC_DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'PRODUCTION'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Документ ''Производство''',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME + ' (' + S_FROM.NAME + ')',
		[TO] = NULL,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_SAL
	FROM PRODUCTION D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_STORES_FROM = 1 OR S_FROM.ID_STORE IN (SELECT ID_STORE FROM @STORES_FROM AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C_FROM.ID_CONTRACTOR)) AND
		(@ALL_GOODS = 1 OR EXISTS (SELECT NULL FROM PRODUCTION_ITEM II INNER JOIN GOODS G ON II.ID_GOODS_GLOBAL = G.ID_GOODS_GLOBAL WHERE II.ID_PRODUCTION_GLOBAL = D.ID_PRODUCTION_GLOBAL AND EXISTS (SELECT NULL FROM #GOODS GT WHERE GT.ID_GOOD = G.ID_GOODS)))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'INVOICE_CASH_ORDER'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Приходный кассовый ордер',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.[SUM],
		BASE_DOC = D.BASE
	FROM CASH_ORDER D
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = D.ID_CONTRACTOR
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR_OWNER
	WHERE D.DOC_TYPE = 'INVOICE_CASH_ORDER' AND
		D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'EXPENCE_CASH_ORDER'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		BASE_DOC
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Расходный кассовый ордер',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.[SUM],
		BASE_DOC = D.BASE
	FROM CASH_ORDER D
		LEFT JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = D.ID_CONTRACTOR_OWNER
		LEFT JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR
	WHERE D.DOC_TYPE = 'EXPENSE_CASH_ORDER' AND
		D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'PAYMENT_ORDER'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Платежное поручение',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = NULL
	FROM PAYMENT_ORDER D
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = D.ID_PAYER
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_RECIPIENT
	WHERE D.DATE BETWEEN @DATE_FROM AND @DATE_TO AND
		(@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)) AND
		(@ALL_CONTRACTORS_FROM = 1 OR C_FROM.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_FROM)) AND
		(@ALL_CONTRACTORS_TO = 1 OR C_TO.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO))
END

IF (@ALL_TYPES = 1 OR EXISTS (SELECT NULL FROM #DOC_TYPES WHERE DOC_TYPE = 'IMPORT_REMAINS'))
BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT
	)
	SELECT
		DOC_DATE = D.DOCUMENT_DATE,
		DOC_TYPE_NAME = 'Ввод остатков',
		DOC_NUM = D.MNEMOCODE,
		[FROM] = NULL,
		[TO] = C.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_RETAIL,
		SUP_SUM = D.SUM_SUPPLIER,
		SUP_VAT = D.SVAT_SUPPLIER
	FROM IMPORT_REMAINS D
		INNER JOIN STORE S ON S.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
	WHERE D.DOCUMENT_DATE BETWEEN @DATE_FROM AND @DATE_TO
		AND (@ALL_STATES = 1 OR D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES))
		AND (@ALL_CONTRACTORS_TO = 1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS_TO))
		AND	(@ALL_STORES_TO = 1 OR D.ID_STORE IN (SELECT ID_STORE FROM @STORES_TO AS ST INNER JOIN CONTRACTOR AS C ON ST.ID_CONTRACTOR = C.ID_CONTRACTOR WHERE ST.ID_CONTRACTOR = C.ID_CONTRACTOR))
		AND (@ALL_GOODS = 1 OR EXISTS (SELECT * FROM IMPORT_REMAINS_ITEM II INNER JOIN GOODS G ON II.ID_GOODS = G.ID_GOODS WHERE II.ID_IMPORT_REMAINS_GLOBAL = D.ID_IMPORT_REMAINS_GLOBAL AND EXISTS (SELECT * FROM #GOODS GT WHERE GT.ID_GOOD = G.ID_GOODS)))
END

SELECT
	DOC_DATE,
	DOC_TYPE_NAME,
	DOC_NUM,
	[FROM],
	[TO],
	DOC_STATE = CASE WHEN DOC_STATE = 'SAVE' THEN 'Сохранён'
					WHEN DOC_STATE = 'PROC' THEN 'Отработан'
					WHEN DOC_STATE = 'DEL' THEN 'Удалён'
					ELSE NULL END,
	SUM_SAL,
	SUP_SUM,
	SUP_VAT,
	BASE_DOC
FROM @DOCUMENTS
ORDER BY CASE WHEN @SORT_DOC = 0 THEN NULL ELSE DOC_TYPE_NAME END, DOC_DATE

RETURN 0
GO

/*
exec REPEX_DOCS_REGISTRY N'
<XML>
	<DATE_FROM>2009-08-01T16:36:25.046</DATE_FROM>
	<DATE_TO>2009-08-17T16:36:25.046</DATE_TO>
	<SORT_DOC>0</SORT_DOC>
</XML>'*/