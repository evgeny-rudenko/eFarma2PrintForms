//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace InvoiceFullEx {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("InvoiceFullAll_DS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InvoiceFullAll_DS : System.Data.DataSet {
        
        private Table0DataTable tableTable0;
        
        private Table1DataTable tableTable1;
        
        private Table2DataTable tableTable2;
        
        private Table3DataTable tableTable3;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public InvoiceFullAll_DS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected InvoiceFullAll_DS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table0"] != null)) {
                    base.Tables.Add(new Table0DataTable(ds.Tables["Table0"]));
                }
                if ((ds.Tables["Table1"] != null)) {
                    base.Tables.Add(new Table1DataTable(ds.Tables["Table1"]));
                }
                if ((ds.Tables["Table2"] != null)) {
                    base.Tables.Add(new Table2DataTable(ds.Tables["Table2"]));
                }
                if ((ds.Tables["Table3"] != null)) {
                    base.Tables.Add(new Table3DataTable(ds.Tables["Table3"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table0DataTable Table0 {
            get {
                return this.tableTable0;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table1DataTable Table1 {
            get {
                return this.tableTable1;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table2DataTable Table2 {
            get {
                return this.tableTable2;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table3DataTable Table3 {
            get {
                return this.tableTable3;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            InvoiceFullAll_DS cln = ((InvoiceFullAll_DS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table0"] != null)) {
                    base.Tables.Add(new Table0DataTable(ds.Tables["Table0"]));
                }
                if ((ds.Tables["Table1"] != null)) {
                    base.Tables.Add(new Table1DataTable(ds.Tables["Table1"]));
                }
                if ((ds.Tables["Table2"] != null)) {
                    base.Tables.Add(new Table2DataTable(ds.Tables["Table2"]));
                }
                if ((ds.Tables["Table3"] != null)) {
                    base.Tables.Add(new Table3DataTable(ds.Tables["Table3"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTable0 = ((Table0DataTable)(base.Tables["Table0"]));
            if ((initTable == true)) {
                if ((this.tableTable0 != null)) {
                    this.tableTable0.InitVars();
                }
            }
            this.tableTable1 = ((Table1DataTable)(base.Tables["Table1"]));
            if ((initTable == true)) {
                if ((this.tableTable1 != null)) {
                    this.tableTable1.InitVars();
                }
            }
            this.tableTable2 = ((Table2DataTable)(base.Tables["Table2"]));
            if ((initTable == true)) {
                if ((this.tableTable2 != null)) {
                    this.tableTable2.InitVars();
                }
            }
            this.tableTable3 = ((Table3DataTable)(base.Tables["Table3"]));
            if ((initTable == true)) {
                if ((this.tableTable3 != null)) {
                    this.tableTable3.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "InvoiceFullAll_DS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InvoiceFullAll_DS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTable0 = new Table0DataTable();
            base.Tables.Add(this.tableTable0);
            this.tableTable1 = new Table1DataTable();
            base.Tables.Add(this.tableTable1);
            this.tableTable2 = new Table2DataTable();
            base.Tables.Add(this.tableTable2);
            this.tableTable3 = new Table3DataTable();
            base.Tables.Add(this.tableTable3);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTable0() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTable1() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTable2() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTable3() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            InvoiceFullAll_DS ds = new InvoiceFullAll_DS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void Table0RowChangeEventHandler(object sender, Table0RowChangeEvent e);
        
        public delegate void Table1RowChangeEventHandler(object sender, Table1RowChangeEvent e);
        
        public delegate void Table2RowChangeEventHandler(object sender, Table2RowChangeEvent e);
        
        public delegate void Table3RowChangeEventHandler(object sender, Table3RowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table0DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDOC_NUM;
            
            private System.Data.DataColumn columnDOC_DATE;
            
            private System.Data.DataColumn columnSUPPLIER_NAME;
            
            private System.Data.DataColumn columnDOC_STATUS;
            
            private System.Data.DataColumn columnPRICING_MODEL;
            
            private System.Data.DataColumn columnSUPPLIER_DOC_NUMBER;
            
            private System.Data.DataColumn columnSUPPLIER_DOC_DATE;
            
            private System.Data.DataColumn columnBILL_NUMBER;
            
            private System.Data.DataColumn columnBILL_DATE;
            
            private System.Data.DataColumn columnPAYER_NAME;
            
            private System.Data.DataColumn columnPAYMENT_DATE;
            
            private System.Data.DataColumn columnCREATION_DATE;
            
            private System.Data.DataColumn columnUSER_CREATED;
            
            private System.Data.DataColumn columnLAST_MODIFICATION_DATE;
            
            private System.Data.DataColumn columnUSER_LAST_MODIFIED;
            
            private System.Data.DataColumn columnTRAN_DATE;
            
            private System.Data.DataColumn columnUSER_TRAN;
            
            private System.Data.DataColumn columnREPL_PREPARE_DATE;
            
            private System.Data.DataColumn columnUSER_REPL_PREPARE;
            
            private System.Data.DataColumn columnREPL_DATE;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table0DataTable() {
                this.TableName = "Table0";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table0DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Table0DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DOC_NUMColumn {
                get {
                    return this.columnDOC_NUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DOC_DATEColumn {
                get {
                    return this.columnDOC_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_NAMEColumn {
                get {
                    return this.columnSUPPLIER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DOC_STATUSColumn {
                get {
                    return this.columnDOC_STATUS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRICING_MODELColumn {
                get {
                    return this.columnPRICING_MODEL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_DOC_NUMBERColumn {
                get {
                    return this.columnSUPPLIER_DOC_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_DOC_DATEColumn {
                get {
                    return this.columnSUPPLIER_DOC_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BILL_NUMBERColumn {
                get {
                    return this.columnBILL_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BILL_DATEColumn {
                get {
                    return this.columnBILL_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PAYER_NAMEColumn {
                get {
                    return this.columnPAYER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PAYMENT_DATEColumn {
                get {
                    return this.columnPAYMENT_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CREATION_DATEColumn {
                get {
                    return this.columnCREATION_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_CREATEDColumn {
                get {
                    return this.columnUSER_CREATED;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LAST_MODIFICATION_DATEColumn {
                get {
                    return this.columnLAST_MODIFICATION_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_LAST_MODIFIEDColumn {
                get {
                    return this.columnUSER_LAST_MODIFIED;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TRAN_DATEColumn {
                get {
                    return this.columnTRAN_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_TRANColumn {
                get {
                    return this.columnUSER_TRAN;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REPL_PREPARE_DATEColumn {
                get {
                    return this.columnREPL_PREPARE_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn USER_REPL_PREPAREColumn {
                get {
                    return this.columnUSER_REPL_PREPARE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REPL_DATEColumn {
                get {
                    return this.columnREPL_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table0Row this[int index] {
                get {
                    return ((Table0Row)(this.Rows[index]));
                }
            }
            
            public event Table0RowChangeEventHandler Table0RowChanging;
            
            public event Table0RowChangeEventHandler Table0RowChanged;
            
            public event Table0RowChangeEventHandler Table0RowDeleting;
            
            public event Table0RowChangeEventHandler Table0RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTable0Row(Table0Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table0Row AddTable0Row(
                        string DOC_NUM, 
                        System.DateTime DOC_DATE, 
                        string SUPPLIER_NAME, 
                        string DOC_STATUS, 
                        string PRICING_MODEL, 
                        string SUPPLIER_DOC_NUMBER, 
                        System.DateTime SUPPLIER_DOC_DATE, 
                        string BILL_NUMBER, 
                        System.DateTime BILL_DATE, 
                        string PAYER_NAME, 
                        System.DateTime PAYMENT_DATE, 
                        System.DateTime CREATION_DATE, 
                        string USER_CREATED, 
                        System.DateTime LAST_MODIFICATION_DATE, 
                        string USER_LAST_MODIFIED, 
                        System.DateTime TRAN_DATE, 
                        string USER_TRAN, 
                        System.DateTime REPL_PREPARE_DATE, 
                        string USER_REPL_PREPARE, 
                        System.DateTime REPL_DATE) {
                Table0Row rowTable0Row = ((Table0Row)(this.NewRow()));
                rowTable0Row.ItemArray = new object[] {
                        DOC_NUM,
                        DOC_DATE,
                        SUPPLIER_NAME,
                        DOC_STATUS,
                        PRICING_MODEL,
                        SUPPLIER_DOC_NUMBER,
                        SUPPLIER_DOC_DATE,
                        BILL_NUMBER,
                        BILL_DATE,
                        PAYER_NAME,
                        PAYMENT_DATE,
                        CREATION_DATE,
                        USER_CREATED,
                        LAST_MODIFICATION_DATE,
                        USER_LAST_MODIFIED,
                        TRAN_DATE,
                        USER_TRAN,
                        REPL_PREPARE_DATE,
                        USER_REPL_PREPARE,
                        REPL_DATE};
                this.Rows.Add(rowTable0Row);
                return rowTable0Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                Table0DataTable cln = ((Table0DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new Table0DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDOC_NUM = base.Columns["DOC_NUM"];
                this.columnDOC_DATE = base.Columns["DOC_DATE"];
                this.columnSUPPLIER_NAME = base.Columns["SUPPLIER_NAME"];
                this.columnDOC_STATUS = base.Columns["DOC_STATUS"];
                this.columnPRICING_MODEL = base.Columns["PRICING_MODEL"];
                this.columnSUPPLIER_DOC_NUMBER = base.Columns["SUPPLIER_DOC_NUMBER"];
                this.columnSUPPLIER_DOC_DATE = base.Columns["SUPPLIER_DOC_DATE"];
                this.columnBILL_NUMBER = base.Columns["BILL_NUMBER"];
                this.columnBILL_DATE = base.Columns["BILL_DATE"];
                this.columnPAYER_NAME = base.Columns["PAYER_NAME"];
                this.columnPAYMENT_DATE = base.Columns["PAYMENT_DATE"];
                this.columnCREATION_DATE = base.Columns["CREATION_DATE"];
                this.columnUSER_CREATED = base.Columns["USER_CREATED"];
                this.columnLAST_MODIFICATION_DATE = base.Columns["LAST_MODIFICATION_DATE"];
                this.columnUSER_LAST_MODIFIED = base.Columns["USER_LAST_MODIFIED"];
                this.columnTRAN_DATE = base.Columns["TRAN_DATE"];
                this.columnUSER_TRAN = base.Columns["USER_TRAN"];
                this.columnREPL_PREPARE_DATE = base.Columns["REPL_PREPARE_DATE"];
                this.columnUSER_REPL_PREPARE = base.Columns["USER_REPL_PREPARE"];
                this.columnREPL_DATE = base.Columns["REPL_DATE"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDOC_NUM = new System.Data.DataColumn("DOC_NUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NUM);
                this.columnDOC_DATE = new System.Data.DataColumn("DOC_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_DATE);
                this.columnSUPPLIER_NAME = new System.Data.DataColumn("SUPPLIER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_NAME);
                this.columnDOC_STATUS = new System.Data.DataColumn("DOC_STATUS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_STATUS);
                this.columnPRICING_MODEL = new System.Data.DataColumn("PRICING_MODEL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICING_MODEL);
                this.columnSUPPLIER_DOC_NUMBER = new System.Data.DataColumn("SUPPLIER_DOC_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_DOC_NUMBER);
                this.columnSUPPLIER_DOC_DATE = new System.Data.DataColumn("SUPPLIER_DOC_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_DOC_DATE);
                this.columnBILL_NUMBER = new System.Data.DataColumn("BILL_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILL_NUMBER);
                this.columnBILL_DATE = new System.Data.DataColumn("BILL_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBILL_DATE);
                this.columnPAYER_NAME = new System.Data.DataColumn("PAYER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYER_NAME);
                this.columnPAYMENT_DATE = new System.Data.DataColumn("PAYMENT_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENT_DATE);
                this.columnCREATION_DATE = new System.Data.DataColumn("CREATION_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATION_DATE);
                this.columnUSER_CREATED = new System.Data.DataColumn("USER_CREATED", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_CREATED);
                this.columnLAST_MODIFICATION_DATE = new System.Data.DataColumn("LAST_MODIFICATION_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_MODIFICATION_DATE);
                this.columnUSER_LAST_MODIFIED = new System.Data.DataColumn("USER_LAST_MODIFIED", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_LAST_MODIFIED);
                this.columnTRAN_DATE = new System.Data.DataColumn("TRAN_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAN_DATE);
                this.columnUSER_TRAN = new System.Data.DataColumn("USER_TRAN", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_TRAN);
                this.columnREPL_PREPARE_DATE = new System.Data.DataColumn("REPL_PREPARE_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPL_PREPARE_DATE);
                this.columnUSER_REPL_PREPARE = new System.Data.DataColumn("USER_REPL_PREPARE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_REPL_PREPARE);
                this.columnREPL_DATE = new System.Data.DataColumn("REPL_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPL_DATE);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table0Row NewTable0Row() {
                return ((Table0Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new Table0Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(Table0Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table0RowChanged != null)) {
                    this.Table0RowChanged(this, new Table0RowChangeEvent(((Table0Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table0RowChanging != null)) {
                    this.Table0RowChanging(this, new Table0RowChangeEvent(((Table0Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table0RowDeleted != null)) {
                    this.Table0RowDeleted(this, new Table0RowChangeEvent(((Table0Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table0RowDeleting != null)) {
                    this.Table0RowDeleting(this, new Table0RowChangeEvent(((Table0Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTable0Row(Table0Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                InvoiceFullAll_DS ds = new InvoiceFullAll_DS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table0DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table1DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDOCUMENT;
            
            private System.Data.DataColumn columnDOC_NUMBER;
            
            private System.Data.DataColumn columnDOC_DATE;
            
            private System.Data.DataColumn columnUNIT_NAME;
            
            private System.Data.DataColumn columnINITIAL_BALANCE;
            
            private System.Data.DataColumn columnQUANTITY_ADD;
            
            private System.Data.DataColumn columnQUANTITY_SUB;
            
            private System.Data.DataColumn columnFINAL_BALANCE;
            
            private System.Data.DataColumn columnQUANTITY_RES;
            
            private System.Data.DataColumn columnSUPPLIER_PRICE;
            
            private System.Data.DataColumn columnRETAIL_PRICE;
            
            private System.Data.DataColumn columnADPRICE;
            
            private System.Data.DataColumn columnID_LOT_GLOBAL;
            
            private System.Data.DataColumn columnGOODS_NAME;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1DataTable() {
                this.TableName = "Table1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table1DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Table1DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DOCUMENTColumn {
                get {
                    return this.columnDOCUMENT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DOC_NUMBERColumn {
                get {
                    return this.columnDOC_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DOC_DATEColumn {
                get {
                    return this.columnDOC_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UNIT_NAMEColumn {
                get {
                    return this.columnUNIT_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INITIAL_BALANCEColumn {
                get {
                    return this.columnINITIAL_BALANCE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QUANTITY_ADDColumn {
                get {
                    return this.columnQUANTITY_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QUANTITY_SUBColumn {
                get {
                    return this.columnQUANTITY_SUB;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FINAL_BALANCEColumn {
                get {
                    return this.columnFINAL_BALANCE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QUANTITY_RESColumn {
                get {
                    return this.columnQUANTITY_RES;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_PRICEColumn {
                get {
                    return this.columnSUPPLIER_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_PRICEColumn {
                get {
                    return this.columnRETAIL_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADPRICEColumn {
                get {
                    return this.columnADPRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ID_LOT_GLOBALColumn {
                get {
                    return this.columnID_LOT_GLOBAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GOODS_NAMEColumn {
                get {
                    return this.columnGOODS_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row this[int index] {
                get {
                    return ((Table1Row)(this.Rows[index]));
                }
            }
            
            public event Table1RowChangeEventHandler Table1RowChanging;
            
            public event Table1RowChangeEventHandler Table1RowChanged;
            
            public event Table1RowChangeEventHandler Table1RowDeleting;
            
            public event Table1RowChangeEventHandler Table1RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTable1Row(Table1Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row AddTable1Row(string DOCUMENT, string DOC_NUMBER, System.DateTime DOC_DATE, string UNIT_NAME, string INITIAL_BALANCE, string QUANTITY_ADD, string QUANTITY_SUB, string FINAL_BALANCE, string QUANTITY_RES, string SUPPLIER_PRICE, string RETAIL_PRICE, string ADPRICE, string ID_LOT_GLOBAL, string GOODS_NAME) {
                Table1Row rowTable1Row = ((Table1Row)(this.NewRow()));
                rowTable1Row.ItemArray = new object[] {
                        DOCUMENT,
                        DOC_NUMBER,
                        DOC_DATE,
                        UNIT_NAME,
                        INITIAL_BALANCE,
                        QUANTITY_ADD,
                        QUANTITY_SUB,
                        FINAL_BALANCE,
                        QUANTITY_RES,
                        SUPPLIER_PRICE,
                        RETAIL_PRICE,
                        ADPRICE,
                        ID_LOT_GLOBAL,
                        GOODS_NAME};
                this.Rows.Add(rowTable1Row);
                return rowTable1Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                Table1DataTable cln = ((Table1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new Table1DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDOCUMENT = base.Columns["DOCUMENT"];
                this.columnDOC_NUMBER = base.Columns["DOC_NUMBER"];
                this.columnDOC_DATE = base.Columns["DOC_DATE"];
                this.columnUNIT_NAME = base.Columns["UNIT_NAME"];
                this.columnINITIAL_BALANCE = base.Columns["INITIAL_BALANCE"];
                this.columnQUANTITY_ADD = base.Columns["QUANTITY_ADD"];
                this.columnQUANTITY_SUB = base.Columns["QUANTITY_SUB"];
                this.columnFINAL_BALANCE = base.Columns["FINAL_BALANCE"];
                this.columnQUANTITY_RES = base.Columns["QUANTITY_RES"];
                this.columnSUPPLIER_PRICE = base.Columns["SUPPLIER_PRICE"];
                this.columnRETAIL_PRICE = base.Columns["RETAIL_PRICE"];
                this.columnADPRICE = base.Columns["ADPRICE"];
                this.columnID_LOT_GLOBAL = base.Columns["ID_LOT_GLOBAL"];
                this.columnGOODS_NAME = base.Columns["GOODS_NAME"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDOCUMENT = new System.Data.DataColumn("DOCUMENT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCUMENT);
                this.columnDOC_NUMBER = new System.Data.DataColumn("DOC_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NUMBER);
                this.columnDOC_DATE = new System.Data.DataColumn("DOC_DATE", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_DATE);
                this.columnUNIT_NAME = new System.Data.DataColumn("UNIT_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_NAME);
                this.columnINITIAL_BALANCE = new System.Data.DataColumn("INITIAL_BALANCE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITIAL_BALANCE);
                this.columnQUANTITY_ADD = new System.Data.DataColumn("QUANTITY_ADD", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_ADD);
                this.columnQUANTITY_SUB = new System.Data.DataColumn("QUANTITY_SUB", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_SUB);
                this.columnFINAL_BALANCE = new System.Data.DataColumn("FINAL_BALANCE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINAL_BALANCE);
                this.columnQUANTITY_RES = new System.Data.DataColumn("QUANTITY_RES", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY_RES);
                this.columnSUPPLIER_PRICE = new System.Data.DataColumn("SUPPLIER_PRICE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_PRICE);
                this.columnRETAIL_PRICE = new System.Data.DataColumn("RETAIL_PRICE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_PRICE);
                this.columnADPRICE = new System.Data.DataColumn("ADPRICE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADPRICE);
                this.columnID_LOT_GLOBAL = new System.Data.DataColumn("ID_LOT_GLOBAL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_LOT_GLOBAL);
                this.columnGOODS_NAME = new System.Data.DataColumn("GOODS_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOODS_NAME);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row NewTable1Row() {
                return ((Table1Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new Table1Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(Table1Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table1RowChanged != null)) {
                    this.Table1RowChanged(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table1RowChanging != null)) {
                    this.Table1RowChanging(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table1RowDeleted != null)) {
                    this.Table1RowDeleted(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table1RowDeleting != null)) {
                    this.Table1RowDeleting(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTable1Row(Table1Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                InvoiceFullAll_DS ds = new InvoiceFullAll_DS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table2DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnLOTS_COUNT;
            
            private System.Data.DataColumn columnGOODS_COUNT;
            
            private System.Data.DataColumn columnVAT_0;
            
            private System.Data.DataColumn columnVAT_10;
            
            private System.Data.DataColumn columnVAT_18;
            
            private System.Data.DataColumn columnADPRICE_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_NOVAT_SUM;
            
            private System.Data.DataColumn columnRETAIL_NOVAT_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_VAT_SUM;
            
            private System.Data.DataColumn columnRETAIL_VAT_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_SUM;
            
            private System.Data.DataColumn columnRETAIL_SUM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2DataTable() {
                this.TableName = "Table2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table2DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Table2DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LOTS_COUNTColumn {
                get {
                    return this.columnLOTS_COUNT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GOODS_COUNTColumn {
                get {
                    return this.columnGOODS_COUNT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VAT_0Column {
                get {
                    return this.columnVAT_0;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VAT_10Column {
                get {
                    return this.columnVAT_10;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn VAT_18Column {
                get {
                    return this.columnVAT_18;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ADPRICE_SUMColumn {
                get {
                    return this.columnADPRICE_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_NOVAT_SUMColumn {
                get {
                    return this.columnSUPPLIER_NOVAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_NOVAT_SUMColumn {
                get {
                    return this.columnRETAIL_NOVAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_VAT_SUMColumn {
                get {
                    return this.columnSUPPLIER_VAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_VAT_SUMColumn {
                get {
                    return this.columnRETAIL_VAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_SUMColumn {
                get {
                    return this.columnSUPPLIER_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_SUMColumn {
                get {
                    return this.columnRETAIL_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row this[int index] {
                get {
                    return ((Table2Row)(this.Rows[index]));
                }
            }
            
            public event Table2RowChangeEventHandler Table2RowChanging;
            
            public event Table2RowChangeEventHandler Table2RowChanged;
            
            public event Table2RowChangeEventHandler Table2RowDeleting;
            
            public event Table2RowChangeEventHandler Table2RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTable2Row(Table2Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row AddTable2Row(string LOTS_COUNT, string GOODS_COUNT, string VAT_0, string VAT_10, string VAT_18, string ADPRICE_SUM, string SUPPLIER_NOVAT_SUM, string RETAIL_NOVAT_SUM, string SUPPLIER_VAT_SUM, string RETAIL_VAT_SUM, string SUPPLIER_SUM, string RETAIL_SUM) {
                Table2Row rowTable2Row = ((Table2Row)(this.NewRow()));
                rowTable2Row.ItemArray = new object[] {
                        LOTS_COUNT,
                        GOODS_COUNT,
                        VAT_0,
                        VAT_10,
                        VAT_18,
                        ADPRICE_SUM,
                        SUPPLIER_NOVAT_SUM,
                        RETAIL_NOVAT_SUM,
                        SUPPLIER_VAT_SUM,
                        RETAIL_VAT_SUM,
                        SUPPLIER_SUM,
                        RETAIL_SUM};
                this.Rows.Add(rowTable2Row);
                return rowTable2Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                Table2DataTable cln = ((Table2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new Table2DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLOTS_COUNT = base.Columns["LOTS_COUNT"];
                this.columnGOODS_COUNT = base.Columns["GOODS_COUNT"];
                this.columnVAT_0 = base.Columns["VAT_0"];
                this.columnVAT_10 = base.Columns["VAT_10"];
                this.columnVAT_18 = base.Columns["VAT_18"];
                this.columnADPRICE_SUM = base.Columns["ADPRICE_SUM"];
                this.columnSUPPLIER_NOVAT_SUM = base.Columns["SUPPLIER_NOVAT_SUM"];
                this.columnRETAIL_NOVAT_SUM = base.Columns["RETAIL_NOVAT_SUM"];
                this.columnSUPPLIER_VAT_SUM = base.Columns["SUPPLIER_VAT_SUM"];
                this.columnRETAIL_VAT_SUM = base.Columns["RETAIL_VAT_SUM"];
                this.columnSUPPLIER_SUM = base.Columns["SUPPLIER_SUM"];
                this.columnRETAIL_SUM = base.Columns["RETAIL_SUM"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLOTS_COUNT = new System.Data.DataColumn("LOTS_COUNT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOTS_COUNT);
                this.columnGOODS_COUNT = new System.Data.DataColumn("GOODS_COUNT", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOODS_COUNT);
                this.columnVAT_0 = new System.Data.DataColumn("VAT_0", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_0);
                this.columnVAT_10 = new System.Data.DataColumn("VAT_10", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_10);
                this.columnVAT_18 = new System.Data.DataColumn("VAT_18", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_18);
                this.columnADPRICE_SUM = new System.Data.DataColumn("ADPRICE_SUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnADPRICE_SUM);
                this.columnSUPPLIER_NOVAT_SUM = new System.Data.DataColumn("SUPPLIER_NOVAT_SUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_NOVAT_SUM);
                this.columnRETAIL_NOVAT_SUM = new System.Data.DataColumn("RETAIL_NOVAT_SUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_NOVAT_SUM);
                this.columnSUPPLIER_VAT_SUM = new System.Data.DataColumn("SUPPLIER_VAT_SUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_VAT_SUM);
                this.columnRETAIL_VAT_SUM = new System.Data.DataColumn("RETAIL_VAT_SUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_VAT_SUM);
                this.columnSUPPLIER_SUM = new System.Data.DataColumn("SUPPLIER_SUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_SUM);
                this.columnRETAIL_SUM = new System.Data.DataColumn("RETAIL_SUM", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_SUM);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row NewTable2Row() {
                return ((Table2Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new Table2Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(Table2Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table2RowChanged != null)) {
                    this.Table2RowChanged(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table2RowChanging != null)) {
                    this.Table2RowChanging(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table2RowDeleted != null)) {
                    this.Table2RowDeleted(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table2RowDeleting != null)) {
                    this.Table2RowDeleting(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTable2Row(Table2Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                InvoiceFullAll_DS ds = new InvoiceFullAll_DS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table3DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDIR;
            
            private System.Data.DataColumn columnBUH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table3DataTable() {
                this.TableName = "Table3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table3DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Table3DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIRColumn {
                get {
                    return this.columnDIR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BUHColumn {
                get {
                    return this.columnBUH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table3Row this[int index] {
                get {
                    return ((Table3Row)(this.Rows[index]));
                }
            }
            
            public event Table3RowChangeEventHandler Table3RowChanging;
            
            public event Table3RowChangeEventHandler Table3RowChanged;
            
            public event Table3RowChangeEventHandler Table3RowDeleting;
            
            public event Table3RowChangeEventHandler Table3RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTable3Row(Table3Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table3Row AddTable3Row(string DIR, string BUH) {
                Table3Row rowTable3Row = ((Table3Row)(this.NewRow()));
                rowTable3Row.ItemArray = new object[] {
                        DIR,
                        BUH};
                this.Rows.Add(rowTable3Row);
                return rowTable3Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                Table3DataTable cln = ((Table3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new Table3DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDIR = base.Columns["DIR"];
                this.columnBUH = base.Columns["BUH"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDIR = new System.Data.DataColumn("DIR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIR);
                this.columnBUH = new System.Data.DataColumn("BUH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUH);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table3Row NewTable3Row() {
                return ((Table3Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new Table3Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(Table3Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table3RowChanged != null)) {
                    this.Table3RowChanged(this, new Table3RowChangeEvent(((Table3Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table3RowChanging != null)) {
                    this.Table3RowChanging(this, new Table3RowChangeEvent(((Table3Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table3RowDeleted != null)) {
                    this.Table3RowDeleted(this, new Table3RowChangeEvent(((Table3Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table3RowDeleting != null)) {
                    this.Table3RowDeleting(this, new Table3RowChangeEvent(((Table3Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTable3Row(Table3Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                InvoiceFullAll_DS ds = new InvoiceFullAll_DS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Table0Row : System.Data.DataRow {
            
            private Table0DataTable tableTable0;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table0Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable0 = ((Table0DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOC_NUM {
                get {
                    try {
                        return ((string)(this[this.tableTable0.DOC_NUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DOC_NUM\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.DOC_NUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DOC_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.DOC_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DOC_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.DOC_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTable0.SUPPLIER_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_NAME\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.SUPPLIER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOC_STATUS {
                get {
                    try {
                        return ((string)(this[this.tableTable0.DOC_STATUSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DOC_STATUS\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.DOC_STATUSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRICING_MODEL {
                get {
                    try {
                        return ((string)(this[this.tableTable0.PRICING_MODELColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRICING_MODEL\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.PRICING_MODELColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_DOC_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableTable0.SUPPLIER_DOC_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_DOC_NUMBER\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.SUPPLIER_DOC_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SUPPLIER_DOC_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.SUPPLIER_DOC_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_DOC_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.SUPPLIER_DOC_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BILL_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableTable0.BILL_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BILL_NUMBER\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.BILL_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BILL_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.BILL_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BILL_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.BILL_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTable0.PAYER_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PAYER_NAME\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.PAYER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PAYMENT_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.PAYMENT_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PAYMENT_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.PAYMENT_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATION_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.CREATION_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CREATION_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.CREATION_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_CREATED {
                get {
                    try {
                        return ((string)(this[this.tableTable0.USER_CREATEDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USER_CREATED\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.USER_CREATEDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LAST_MODIFICATION_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.LAST_MODIFICATION_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LAST_MODIFICATION_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.LAST_MODIFICATION_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_LAST_MODIFIED {
                get {
                    try {
                        return ((string)(this[this.tableTable0.USER_LAST_MODIFIEDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USER_LAST_MODIFIED\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.USER_LAST_MODIFIEDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRAN_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.TRAN_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'TRAN_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.TRAN_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_TRAN {
                get {
                    try {
                        return ((string)(this[this.tableTable0.USER_TRANColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USER_TRAN\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.USER_TRANColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REPL_PREPARE_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.REPL_PREPARE_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REPL_PREPARE_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.REPL_PREPARE_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_REPL_PREPARE {
                get {
                    try {
                        return ((string)(this[this.tableTable0.USER_REPL_PREPAREColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'USER_REPL_PREPARE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.USER_REPL_PREPAREColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime REPL_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable0.REPL_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REPL_DATE\' in table \'Table0\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable0.REPL_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOC_NUMNull() {
                return this.IsNull(this.tableTable0.DOC_NUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOC_NUMNull() {
                this[this.tableTable0.DOC_NUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOC_DATENull() {
                return this.IsNull(this.tableTable0.DOC_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOC_DATENull() {
                this[this.tableTable0.DOC_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_NAMENull() {
                return this.IsNull(this.tableTable0.SUPPLIER_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_NAMENull() {
                this[this.tableTable0.SUPPLIER_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOC_STATUSNull() {
                return this.IsNull(this.tableTable0.DOC_STATUSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOC_STATUSNull() {
                this[this.tableTable0.DOC_STATUSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICING_MODELNull() {
                return this.IsNull(this.tableTable0.PRICING_MODELColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICING_MODELNull() {
                this[this.tableTable0.PRICING_MODELColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_DOC_NUMBERNull() {
                return this.IsNull(this.tableTable0.SUPPLIER_DOC_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_DOC_NUMBERNull() {
                this[this.tableTable0.SUPPLIER_DOC_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_DOC_DATENull() {
                return this.IsNull(this.tableTable0.SUPPLIER_DOC_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_DOC_DATENull() {
                this[this.tableTable0.SUPPLIER_DOC_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILL_NUMBERNull() {
                return this.IsNull(this.tableTable0.BILL_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILL_NUMBERNull() {
                this[this.tableTable0.BILL_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBILL_DATENull() {
                return this.IsNull(this.tableTable0.BILL_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBILL_DATENull() {
                this[this.tableTable0.BILL_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYER_NAMENull() {
                return this.IsNull(this.tableTable0.PAYER_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYER_NAMENull() {
                this[this.tableTable0.PAYER_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENT_DATENull() {
                return this.IsNull(this.tableTable0.PAYMENT_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENT_DATENull() {
                this[this.tableTable0.PAYMENT_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATION_DATENull() {
                return this.IsNull(this.tableTable0.CREATION_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATION_DATENull() {
                this[this.tableTable0.CREATION_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_CREATEDNull() {
                return this.IsNull(this.tableTable0.USER_CREATEDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_CREATEDNull() {
                this[this.tableTable0.USER_CREATEDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_MODIFICATION_DATENull() {
                return this.IsNull(this.tableTable0.LAST_MODIFICATION_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_MODIFICATION_DATENull() {
                this[this.tableTable0.LAST_MODIFICATION_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_LAST_MODIFIEDNull() {
                return this.IsNull(this.tableTable0.USER_LAST_MODIFIEDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_LAST_MODIFIEDNull() {
                this[this.tableTable0.USER_LAST_MODIFIEDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRAN_DATENull() {
                return this.IsNull(this.tableTable0.TRAN_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRAN_DATENull() {
                this[this.tableTable0.TRAN_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_TRANNull() {
                return this.IsNull(this.tableTable0.USER_TRANColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_TRANNull() {
                this[this.tableTable0.USER_TRANColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPL_PREPARE_DATENull() {
                return this.IsNull(this.tableTable0.REPL_PREPARE_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPL_PREPARE_DATENull() {
                this[this.tableTable0.REPL_PREPARE_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_REPL_PREPARENull() {
                return this.IsNull(this.tableTable0.USER_REPL_PREPAREColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_REPL_PREPARENull() {
                this[this.tableTable0.USER_REPL_PREPAREColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPL_DATENull() {
                return this.IsNull(this.tableTable0.REPL_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPL_DATENull() {
                this[this.tableTable0.REPL_DATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Table1Row : System.Data.DataRow {
            
            private Table1DataTable tableTable1;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table1Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable1 = ((Table1DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOCUMENT {
                get {
                    try {
                        return ((string)(this[this.tableTable1.DOCUMENTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DOCUMENT\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.DOCUMENTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOC_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableTable1.DOC_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DOC_NUMBER\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.DOC_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DOC_DATE {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTable1.DOC_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DOC_DATE\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.DOC_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UNIT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTable1.UNIT_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UNIT_NAME\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.UNIT_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INITIAL_BALANCE {
                get {
                    try {
                        return ((string)(this[this.tableTable1.INITIAL_BALANCEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'INITIAL_BALANCE\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.INITIAL_BALANCEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUANTITY_ADD {
                get {
                    try {
                        return ((string)(this[this.tableTable1.QUANTITY_ADDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QUANTITY_ADD\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.QUANTITY_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUANTITY_SUB {
                get {
                    try {
                        return ((string)(this[this.tableTable1.QUANTITY_SUBColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QUANTITY_SUB\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.QUANTITY_SUBColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINAL_BALANCE {
                get {
                    try {
                        return ((string)(this[this.tableTable1.FINAL_BALANCEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'FINAL_BALANCE\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.FINAL_BALANCEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUANTITY_RES {
                get {
                    try {
                        return ((string)(this[this.tableTable1.QUANTITY_RESColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QUANTITY_RES\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.QUANTITY_RESColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_PRICE {
                get {
                    try {
                        return ((string)(this[this.tableTable1.SUPPLIER_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_PRICE\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.SUPPLIER_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETAIL_PRICE {
                get {
                    try {
                        return ((string)(this[this.tableTable1.RETAIL_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_PRICE\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.RETAIL_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADPRICE {
                get {
                    try {
                        return ((string)(this[this.tableTable1.ADPRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADPRICE\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.ADPRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_LOT_GLOBAL {
                get {
                    try {
                        return ((string)(this[this.tableTable1.ID_LOT_GLOBALColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID_LOT_GLOBAL\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.ID_LOT_GLOBALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GOODS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTable1.GOODS_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GOODS_NAME\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.GOODS_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCUMENTNull() {
                return this.IsNull(this.tableTable1.DOCUMENTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCUMENTNull() {
                this[this.tableTable1.DOCUMENTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOC_NUMBERNull() {
                return this.IsNull(this.tableTable1.DOC_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOC_NUMBERNull() {
                this[this.tableTable1.DOC_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOC_DATENull() {
                return this.IsNull(this.tableTable1.DOC_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOC_DATENull() {
                this[this.tableTable1.DOC_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUNIT_NAMENull() {
                return this.IsNull(this.tableTable1.UNIT_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUNIT_NAMENull() {
                this[this.tableTable1.UNIT_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINITIAL_BALANCENull() {
                return this.IsNull(this.tableTable1.INITIAL_BALANCEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINITIAL_BALANCENull() {
                this[this.tableTable1.INITIAL_BALANCEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITY_ADDNull() {
                return this.IsNull(this.tableTable1.QUANTITY_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITY_ADDNull() {
                this[this.tableTable1.QUANTITY_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITY_SUBNull() {
                return this.IsNull(this.tableTable1.QUANTITY_SUBColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITY_SUBNull() {
                this[this.tableTable1.QUANTITY_SUBColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINAL_BALANCENull() {
                return this.IsNull(this.tableTable1.FINAL_BALANCEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINAL_BALANCENull() {
                this[this.tableTable1.FINAL_BALANCEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITY_RESNull() {
                return this.IsNull(this.tableTable1.QUANTITY_RESColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITY_RESNull() {
                this[this.tableTable1.QUANTITY_RESColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_PRICENull() {
                return this.IsNull(this.tableTable1.SUPPLIER_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_PRICENull() {
                this[this.tableTable1.SUPPLIER_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_PRICENull() {
                return this.IsNull(this.tableTable1.RETAIL_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_PRICENull() {
                this[this.tableTable1.RETAIL_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADPRICENull() {
                return this.IsNull(this.tableTable1.ADPRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADPRICENull() {
                this[this.tableTable1.ADPRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_LOT_GLOBALNull() {
                return this.IsNull(this.tableTable1.ID_LOT_GLOBALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_LOT_GLOBALNull() {
                this[this.tableTable1.ID_LOT_GLOBALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGOODS_NAMENull() {
                return this.IsNull(this.tableTable1.GOODS_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGOODS_NAMENull() {
                this[this.tableTable1.GOODS_NAMEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Table2Row : System.Data.DataRow {
            
            private Table2DataTable tableTable2;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table2Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable2 = ((Table2DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOTS_COUNT {
                get {
                    try {
                        return ((string)(this[this.tableTable2.LOTS_COUNTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'LOTS_COUNT\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.LOTS_COUNTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GOODS_COUNT {
                get {
                    try {
                        return ((string)(this[this.tableTable2.GOODS_COUNTColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GOODS_COUNT\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.GOODS_COUNTColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT_0 {
                get {
                    try {
                        return ((string)(this[this.tableTable2.VAT_0Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VAT_0\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.VAT_0Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT_10 {
                get {
                    try {
                        return ((string)(this[this.tableTable2.VAT_10Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VAT_10\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.VAT_10Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT_18 {
                get {
                    try {
                        return ((string)(this[this.tableTable2.VAT_18Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'VAT_18\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.VAT_18Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADPRICE_SUM {
                get {
                    try {
                        return ((string)(this[this.tableTable2.ADPRICE_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ADPRICE_SUM\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.ADPRICE_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_NOVAT_SUM {
                get {
                    try {
                        return ((string)(this[this.tableTable2.SUPPLIER_NOVAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_NOVAT_SUM\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.SUPPLIER_NOVAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETAIL_NOVAT_SUM {
                get {
                    try {
                        return ((string)(this[this.tableTable2.RETAIL_NOVAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_NOVAT_SUM\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.RETAIL_NOVAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_VAT_SUM {
                get {
                    try {
                        return ((string)(this[this.tableTable2.SUPPLIER_VAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_VAT_SUM\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.SUPPLIER_VAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETAIL_VAT_SUM {
                get {
                    try {
                        return ((string)(this[this.tableTable2.RETAIL_VAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_VAT_SUM\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.RETAIL_VAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_SUM {
                get {
                    try {
                        return ((string)(this[this.tableTable2.SUPPLIER_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_SUM\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.SUPPLIER_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETAIL_SUM {
                get {
                    try {
                        return ((string)(this[this.tableTable2.RETAIL_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_SUM\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.RETAIL_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOTS_COUNTNull() {
                return this.IsNull(this.tableTable2.LOTS_COUNTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOTS_COUNTNull() {
                this[this.tableTable2.LOTS_COUNTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGOODS_COUNTNull() {
                return this.IsNull(this.tableTable2.GOODS_COUNTColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGOODS_COUNTNull() {
                this[this.tableTable2.GOODS_COUNTColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVAT_0Null() {
                return this.IsNull(this.tableTable2.VAT_0Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVAT_0Null() {
                this[this.tableTable2.VAT_0Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVAT_10Null() {
                return this.IsNull(this.tableTable2.VAT_10Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVAT_10Null() {
                this[this.tableTable2.VAT_10Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVAT_18Null() {
                return this.IsNull(this.tableTable2.VAT_18Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVAT_18Null() {
                this[this.tableTable2.VAT_18Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADPRICE_SUMNull() {
                return this.IsNull(this.tableTable2.ADPRICE_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADPRICE_SUMNull() {
                this[this.tableTable2.ADPRICE_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_NOVAT_SUMNull() {
                return this.IsNull(this.tableTable2.SUPPLIER_NOVAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_NOVAT_SUMNull() {
                this[this.tableTable2.SUPPLIER_NOVAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_NOVAT_SUMNull() {
                return this.IsNull(this.tableTable2.RETAIL_NOVAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_NOVAT_SUMNull() {
                this[this.tableTable2.RETAIL_NOVAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_VAT_SUMNull() {
                return this.IsNull(this.tableTable2.SUPPLIER_VAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_VAT_SUMNull() {
                this[this.tableTable2.SUPPLIER_VAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_VAT_SUMNull() {
                return this.IsNull(this.tableTable2.RETAIL_VAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_VAT_SUMNull() {
                this[this.tableTable2.RETAIL_VAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_SUMNull() {
                return this.IsNull(this.tableTable2.SUPPLIER_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_SUMNull() {
                this[this.tableTable2.SUPPLIER_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_SUMNull() {
                return this.IsNull(this.tableTable2.RETAIL_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_SUMNull() {
                this[this.tableTable2.RETAIL_SUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Table3Row : System.Data.DataRow {
            
            private Table3DataTable tableTable3;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table3Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable3 = ((Table3DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIR {
                get {
                    try {
                        return ((string)(this[this.tableTable3.DIRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DIR\' in table \'Table3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable3.DIRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BUH {
                get {
                    try {
                        return ((string)(this[this.tableTable3.BUHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BUH\' in table \'Table3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable3.BUHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIRNull() {
                return this.IsNull(this.tableTable3.DIRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIRNull() {
                this[this.tableTable3.DIRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUHNull() {
                return this.IsNull(this.tableTable3.BUHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUHNull() {
                this[this.tableTable3.BUHColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Table0RowChangeEvent : System.EventArgs {
            
            private Table0Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table0RowChangeEvent(Table0Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table0Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Table1RowChangeEvent : System.EventArgs {
            
            private Table1Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1RowChangeEvent(Table1Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Table2RowChangeEvent : System.EventArgs {
            
            private Table2Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2RowChangeEvent(Table2Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Table3RowChangeEvent : System.EventArgs {
            
            private Table3Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table3RowChangeEvent(Table3Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591