IF (OBJECT_ID('REPEX_INVENTORY_SVED_INOST_COMPARE') IS NULL) EXEC ('CREATE PROCEDURE REPEX_INVENTORY_SVED_INOST_COMPARE AS RETURN')
GO
ALTER PROCEDURE REPEX_INVENTORY_SVED_INOST_COMPARE
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT, @INVENTORY_VED BIT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT * INTO #INOST
FROM OPENXML(@HDOC, '//ROW') WITH(
    STU VARCHAR(40) 'STU',
    QUANT MONEY 'QUANT',
    PRICE_PT MONEY 'PRICE_PT',
    PRICE_RS MONEY 'PRICE_RS',
    [NAME] NVARCHAR(256) 'NAME')

SELECT * INTO #INVENTORY_VED FROM OPENXML(@HDOC, '//ID_INVENTORY_VED_GLOBAL') 
WITH(ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER '.')
IF @@ROWCOUNT = 0 SET @INVENTORY_VED = 1 ELSE SET @INVENTORY_VED = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT CODE = SL.CODE,
    STU = CAST(NULL AS VARCHAR(40)), --партии СТУ
    OST_NAME = CAST(NULL AS VARCHAR(256)), --наименование товара СТУ
    GOODS_NAME = G.[NAME], --наименование товара еФ2
    OST_QUANT = CAST(0 AS MONEY), --кол-во упаковок в СТУ
    OST_PRICE_SUP = CAST(0 AS MONEY), --цена поставщика в СТУ
    OST_SUM_SUP = CAST(0 AS MONEY), --сумма поставщика в СТУ
    OST_PRICE_SAL = CAST(0 AS MONEY), --цена розничная СТУ
    OST_SUM_SAL = CAST(0 AS MONEY), --суммма розничная СТУ
    II_QUANTITY = ROUND(II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR, 2), --кол-во упаковок в еФ2
    II_PRICE_SUP = ROUND(II.PRICE_SUP * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR, 2), --цена поставщика в еФ2
    II_SUM_SUP = II.SUM_SUP, --сумма поставщика в еФ2
    II_PRICE_SAL = ROUND(II.PRICE_SAL * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR, 2), --цена розничная еФ2
    II_SUM_SAL = II.SUM_SAL --суммма розничная еФ2
INTO #TAB
FROM INVENTORY_SVED I(NOLOCK)
INNER JOIN INVENTORY_VED IV(NOLOCK) ON IV.ID_INVENTORY_SVED_GLOBAL = I.ID_INVENTORY_GLOBAL
INNER JOIN INVENTORY_VED_ITEM II(NOLOCK) ON II.ID_INVENTORY_VED_GLOBAL = IV.ID_INVENTORY_VED_GLOBAL
INNER JOIN GOODS G(NOLOCK) ON G.ID_GOODS = II.ID_GOODS
INNER JOIN GOODS_CODE GC(NOLOCK) ON GC.ID_GOODS = G.ID_GOODS
INNER JOIN CONTRACTOR C(NOLOCK) ON C.ID_CONTRACTOR = GC.ID_CONTRACTOR
INNER JOIN SCALING_RATIO SR(NOLOCK) ON SR.ID_SCALING_RATIO = II.ID_SCALING_RATIO
LEFT JOIN STU_LOT SL(NOLOCK) ON SL.ID_INVENTORY_VED_ITEM_GLOBAL = II.ID_INVENTORY_VED_ITEM_GLOBAL
WHERE IV.DOC_STATE <> 'DEL' AND I.DOC_STATE <> 'DEL' AND C.[NAME] = 'СТУ'
    AND (@INVENTORY_VED = 1 OR IV.ID_INVENTORY_VED_GLOBAL IN (SELECT ID_INVENTORY_VED_GLOBAL FROM #INVENTORY_VED))

SELECT CODE,
    STU, OST_NAME, GOODS_NAME,
    OST_QUANT, OST_PRICE_SUP, OST_SUM_SUP, OST_PRICE_SAL, OST_SUM_SAL,
    II_QUANTITY = SUM(II_QUANTITY),
    II_PRICE_SUP = II_PRICE_SUP,
    II_SUM_SUP = SUM(II_SUM_SUP),
    II_PRICE_SAL = II_PRICE_SAL,
    II_SUM_SAL = SUM(II_SUM_SAL)
INTO #RESULT
FROM #TAB
GROUP BY CODE, STU, OST_NAME, GOODS_NAME, II_PRICE_SUP, II_PRICE_SAL,
    OST_QUANT, OST_PRICE_SUP, OST_SUM_SUP, OST_PRICE_SAL, OST_SUM_SAL

UPDATE R SET
    STU = OST.STU,
    OST_NAME = OST.[NAME],
    OST_QUANT = OST.QUANT,
    OST_PRICE_SUP = OST.PRICE_PT,
    OST_SUM_SUP = OST.QUANT * OST.PRICE_PT,
    OST_PRICE_SAL = OST.PRICE_RS,
    OST_SUM_SAL = OST.QUANT * OST.PRICE_RS
FROM #RESULT R
INNER JOIN #INOST OST(NOLOCK) ON OST.STU = R.CODE

INSERT INTO #RESULT(STU, OST_NAME, OST_QUANT, OST_PRICE_SUP, OST_SUM_SUP, OST_PRICE_SAL, OST_SUM_SAL)
SELECT OST.STU, OST.[NAME], OST.QUANT, OST.PRICE_PT, OST.QUANT * OST.PRICE_PT, OST.PRICE_RS, OST.QUANT * OST.PRICE_RS
FROM #INOST OST
WHERE NOT EXISTS (SELECT TOP 1 1 FROM #RESULT R WHERE R.CODE = OST.STU)

SELECT CODE,
    STU, OST_NAME, GOODS_NAME,
    OST_QUANT = ISNULL(OST_QUANT, 0),
    OST_PRICE_SUP = ISNULL(OST_PRICE_SUP, 0),
    OST_SUM_SUP = ISNULL(OST_SUM_SUP, 0),
    OST_PRICE_SAL = ISNULL(OST_PRICE_SAL, 0),
    OST_SUM_SAL = ISNULL(OST_SUM_SAL, 0),
    II_QUANTITY = ISNULL(II_QUANTITY, 0),
    II_PRICE_SUP = ISNULL(II_PRICE_SUP, 0),
    II_SUM_SUP = ISNULL(II_SUM_SUP, 0),
    II_PRICE_SAL = ISNULL(II_PRICE_SAL, 0),
    II_SUM_SAL = ISNULL(II_SUM_SAL, 0),
    ROZ_QUANT = ISNULL(OST_QUANT, 0) - ISNULL(II_QUANTITY, 0), --расхождение кол-во
    ROZ_SUM_SUP = ISNULL(OST_SUM_SUP, 0) - ISNULL(II_SUM_SUP, 0), --расхождение суммы поставщика
    ROZ_SUM_SAL = ISNULL(OST_SUM_SAL, 0) - ISNULL(II_SUM_SAL, 0) --разхождение розничной суммы
FROM #RESULT

RETURN 0
GO
exec REPEX_INVENTORY_SVED_INOST_COMPARE @xmlParam = N'<XML><ROW><STU>6</STU><QUANT>4.00</QUANT><PRICE_PT>11.11</PRICE_PT><PRICE_RS>44.44</PRICE_RS><NAME>AAA                                                                                                                                                                                                                                                            </NAME></ROW><ROW><STU>167</STU><QUANT>53.00</QUANT><PRICE_PT>106.58</PRICE_PT><PRICE_RS>156.00</PRICE_RS><NAME>BBB                                                                                                                                                                                                                                                            </NAME></ROW><ROW><STU>3</STU><QUANT>6.00</QUANT><PRICE_PT>33.33</PRICE_PT><PRICE_RS>66.66</PRICE_RS><NAME>CCC                                                                                                                                                                                                                                                            </NAME></ROW><ID_INVENTORY_VED_GLOBAL>6c7d366d-d9fd-498e-b743-02f210889853</ID_INVENTORY_VED_GLOBAL></XML>'