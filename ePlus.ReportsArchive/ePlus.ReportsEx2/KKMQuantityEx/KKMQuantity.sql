SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_KKM_QUANTITY') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_KKM_QUANTITY AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_KKM_QUANTITY
	(@XMLPARAM NTEXT) AS

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @TIME_FR DATETIME, @TIME_TO DATETIME
DECLARE @TIME_FR2 INT, @TIME_TO2 INT
DECLARE @ID_DETAIL BIT
DECLARE @IS_CLOSED BIT
DECLARE @QTY_DAYS INT
DECLARE @GOODS BIT

DECLARE @COUNT_CASH_REGISTER INT
DECLARE @COUNT_STORE INT
DECLARE @COUNT_CHEQUE BIGINT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO,
        @TIME_FR = TIME_FR, @TIME_TO = TIME_TO,
	@ID_DETAIL = ID_DETAIL, @IS_CLOSED = IS_CLOSED
	FROM OPENXML(@HDOC, '/XML')
	WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO',
	TIME_FR DATETIME 'TIME_FR', TIME_TO DATETIME 'TIME_TO',
        ID_DETAIL BIT 'ID_DETAIL', IS_CLOSED BIT 'IS_CLOSED')

        -- “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬   Ã
	SELECT * INTO #CASH_REGISTER
	FROM OPENXML(@HDOC, '//ID_CASH_REGISTER') 
	WITH(ID_CASH_REGISTER BIGINT '.')

	-- “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ — À¿ƒŒ¬
	SELECT * INTO #STORE
	FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.')

        -- “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬  ŒÕ“–¿√≈Õ“Œ¬
	SELECT ID_CONTRACTOR INTO #CONTRACTOR
	FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
	WITH(ID_CONTRACTOR BIGINT '.')

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

--¬–≈Ã≈ÕÕ¿ﬂ “¿¡À»÷¿ #STORE2 —Œ —œ»— ŒÃ — À¿ƒŒ¬

CREATE TABLE #STORE2(ID_STORE BIGINT)

IF((SELECT COUNT(*) FROM #STORE)<>0)
BEGIN
INSERT INTO #STORE2
SELECT D.ID_STORE
FROM 
	(SELECT S.ID_STORE
	FROM #CONTRACTOR C_L
		INNER JOIN STORE S ON C_L.ID_CONTRACTOR = S.ID_CONTRACTOR
	WHERE C_L.ID_CONTRACTOR NOT IN (SELECT DISTINCT ID_CONTRACTOR FROM STORE WHERE ID_STORE IN (SELECT ID_STORE FROM #STORE))
	UNION
	SELECT ID_STORE FROM #STORE) D
END
ELSE
BEGIN
	INSERT INTO #STORE2
	SELECT S.ID_STORE
	FROM #CONTRACTOR C_L
	INNER JOIN STORE S ON C_L.ID_CONTRACTOR = S.ID_CONTRACTOR
END

SELECT @COUNT_CASH_REGISTER = COUNT(*) FROM #CASH_REGISTER

IF(@TIME_FR IS NOT NULL)
 BEGIN
	SELECT @TIME_FR2 = DATEPART(HOUR, @TIME_FR)*60+DATEPART(MINUTE, @TIME_FR)
	SELECT @TIME_TO2 = DATEPART(HOUR, @TIME_TO)*60+DATEPART(MINUTE, @TIME_TO)
 END

DECLARE @TEMP_T TABLE
(
	DATE_FR DATETIME,
	N_CHEQUE BIGINT,
	CASH_REGISTER BIGINT,
	NAME_CASH_REGISTER VARCHAR(100),
	DATE_CHEQUE DATETIME,
	SUMM_RETAIL MONEY,
	SUM_DISCOUNT MONEY,
	SUMM MONEY,
	CHEQUE_TYPE VARCHAR(10),
	COUNT_BOX MONEY,
	COUNT_CHEQUE INT,
	COUNT_CHEQUE2 INT,
	DOC_STATE VARCHAR(20),
	ID_CHEQUE_GLOBAL UNIQUEIDENTIFIER
)

INSERT INTO @TEMP_T
(
	DATE_FR,
	N_CHEQUE,
	CASH_REGISTER,
	NAME_CASH_REGISTER,
	DATE_CHEQUE,
	SUMM_RETAIL,
	SUM_DISCOUNT,
	SUMM,
	CHEQUE_TYPE,
	COUNT_BOX,
	COUNT_CHEQUE,
	COUNT_CHEQUE2,
	DOC_STATE,
	ID_CHEQUE_GLOBAL
)
SELECT
	DATE_FR = @DATE_FR,
	CH.ID_CHEQUE AS N_CHEQUE,
	CR.ID_CASH_REGISTER AS CASH_REGISTER,
	CR.NAME_CASH_REGISTER,
	CH.DATE_CHEQUE,
	SUM(CASE CH.CHEQUE_TYPE
			WHEN 'SALE' THEN (CH_I.SUMM+CH_I.SUMM_DISCOUNT)
			WHEN 'RETURN' THEN -(CH_I.SUMM+CH_I.SUMM_DISCOUNT)
		END) AS SUMM_RETAIL,
	SUM(CASE CH.CHEQUE_TYPE
			WHEN 'SALE' THEN CH_I.SUMM_DISCOUNT
			WHEN 'RETURN' THEN -CH_I.SUMM_DISCOUNT
	END) AS SUM_DISCOUNT,
	SUM(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN CH_I.SUMM
		WHEN 'RETURN' THEN -CH_I.SUMM
	END) AS SUMM,
	(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN 'œ–Œƒ¿∆¿'
		WHEN 'RETURN' THEN '¬Œ«¬–¿“'
	END) AS CHEQUE_TYPE,
	SUM(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN CH_I.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR
		WHEN 'RETURN' THEN -CH_I.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR
	END) AS COUNT_BOX,
	(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN (select COUNT(*) from cheque_item ci inner join cheque cc on ci.id_cheque_global = cc.id_cheque_global where cc.id_cheque = CH.ID_CHEQUE) 
		WHEN 'RETURN' THEN -(select COUNT(*) from cheque_item ci inner join cheque cc on ci.id_cheque_global = cc.id_cheque_global where cc.id_cheque = CH.ID_CHEQUE) 
	END) AS COUNT_CHEQUE,
	(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN 1
		WHEN 'RETURN' THEN -1
	END) AS COUNT_CHEQUE2,
	DOC_STATE = MAX(CH.DOCUMENT_STATE),
	ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL
  FROM  CASH_SESSION CS
     INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
     INNER JOIN CHEQUE_ITEM CH_I ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
     INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
     INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = CH_I.ID_SCALING_RATIO
     INNER JOIN LOT LOT ON CH_I.ID_LOT_GLOBAL = LOT.ID_LOT_GLOBAL
      WHERE 
	CS.DATE_OPEN >= @DATE_FR AND (CS.DATE_CLOSE <= @DATE_TO OR @IS_CLOSED IS NULL) AND
       (@COUNT_CASH_REGISTER = 0 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #CASH_REGISTER)) AND
	--(CS.STATUS = @IS_CLOSED OR @IS_CLOSED IS NULL) AND
	CH.CHEQUE_TYPE IN ('SALE','RETURN') AND
	CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO AND
	(@TIME_FR IS NULL OR (DATEPART(HOUR, CH.DATE_CHEQUE)*60+DATEPART(MINUTE, CH.DATE_CHEQUE)) BETWEEN @TIME_FR2 AND @TIME_TO2) AND
	LOT.ID_STORE IN (SELECT * FROM #STORE2)
  GROUP BY CH.ID_CHEQUE, CH.CHEQUE_TYPE, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER, CH.DATE_CHEQUE, CH.ID_CHEQUE_GLOBAL

IF (@IS_CLOSED = 1)
	SELECT * FROM @TEMP_T WHERE DOC_STATE = 'PROC' order by name_cash_register, n_cheque
ELSE
	SELECT * FROM @TEMP_T  order by name_cash_register, n_cheque

EXEC DBO.USP_RANGE_DAYS	@DATE_FR OUTPUT, @DATE_TO OUTPUT

select count(distinct convert(char(8), date_close, 112)) as PERIOD_DAYS
from cash_session 
where date_close between @date_fr and @date_to

RETURN 0
GO

/*
exec REPEX_KKM_QUANTITY N'
<XML>
	<DATE_FR>2009-09-01T00:15:13.546</DATE_FR>
	<DATE_TO>2009-09-11T22:17:39.546</DATE_TO>
	<IS_CLOSED>1</IS_CLOSED>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<ID_CASH_REGISTER>47</ID_CASH_REGISTER>
</XML>'*/


IF OBJECT_ID('DBO.REPEX_KKM_QUANTITY_SERVICE') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_KKM_QUANTITY_SERVICE AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_KKM_QUANTITY_SERVICE
	(@XMLPARAM NTEXT) AS

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @TIME_FR DATETIME, @TIME_TO DATETIME
DECLARE @TIME_FR2 INT, @TIME_TO2 INT
DECLARE @ID_DETAIL BIT
DECLARE @IS_CLOSED BIT
DECLARE @QTY_DAYS INT
DECLARE @GOODS BIT

DECLARE @COUNT_CASH_REGISTER INT
DECLARE @COUNT_STORE INT
DECLARE @COUNT_CHEQUE BIGINT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO,
        @TIME_FR = TIME_FR, @TIME_TO = TIME_TO,
	@ID_DETAIL = ID_DETAIL, @IS_CLOSED = IS_CLOSED
	FROM OPENXML(@HDOC, '/XML')
	WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO',
	TIME_FR DATETIME 'TIME_FR', TIME_TO DATETIME 'TIME_TO',
        ID_DETAIL BIT 'ID_DETAIL', IS_CLOSED BIT 'IS_CLOSED')

        -- “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬   Ã
	SELECT * INTO #CASH_REGISTER
	FROM OPENXML(@HDOC, '//ID_CASH_REGISTER') 
	WITH(ID_CASH_REGISTER BIGINT '.')

	-- “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ — À¿ƒŒ¬
	SELECT * INTO #STORE
	FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.')

        -- “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬  ŒÕ“–¿√≈Õ“Œ¬
	SELECT ID_CONTRACTOR INTO #CONTRACTOR
	FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
	WITH(ID_CONTRACTOR BIGINT '.')

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

--¬–≈Ã≈ÕÕ¿ﬂ “¿¡À»÷¿ #STORE2 —Œ —œ»— ŒÃ — À¿ƒŒ¬

CREATE TABLE #STORE2(ID_STORE BIGINT)

IF((SELECT COUNT(*) FROM #STORE)<>0)
BEGIN
INSERT INTO #STORE2
SELECT D.ID_STORE
FROM 
	(SELECT S.ID_STORE
	FROM #CONTRACTOR C_L
		INNER JOIN STORE S ON C_L.ID_CONTRACTOR = S.ID_CONTRACTOR
	WHERE C_L.ID_CONTRACTOR NOT IN (SELECT DISTINCT ID_CONTRACTOR FROM STORE WHERE ID_STORE IN (SELECT ID_STORE FROM #STORE))
	UNION
	SELECT ID_STORE FROM #STORE) D
END
ELSE
BEGIN
	INSERT INTO #STORE2
	SELECT S.ID_STORE
	FROM #CONTRACTOR C_L
	INNER JOIN STORE S ON C_L.ID_CONTRACTOR = S.ID_CONTRACTOR
END

SELECT @COUNT_CASH_REGISTER = COUNT(*) FROM #CASH_REGISTER

IF(@TIME_FR IS NOT NULL)
 BEGIN
	SELECT @TIME_FR2 = DATEPART(HOUR, @TIME_FR)*60+DATEPART(MINUTE, @TIME_FR)
	SELECT @TIME_TO2 = DATEPART(HOUR, @TIME_TO)*60+DATEPART(MINUTE, @TIME_TO)
 END

DECLARE @TEMP_T TABLE
(
	DATE_FR DATETIME,
	N_CHEQUE BIGINT,
	CASH_REGISTER BIGINT,
	NAME_CASH_REGISTER VARCHAR(100),
	DATE_CHEQUE DATETIME,
	SUMM_RETAIL MONEY,
	SUM_DISCOUNT MONEY,
	SUMM MONEY,
	CHEQUE_TYPE VARCHAR(10),
	COUNT_BOX MONEY,
	COUNT_CHEQUE INT,
	COUNT_CHEQUE2 INT,
	DOC_STATE VARCHAR(20),
	ID_CHEQUE_GLOBAL UNIQUEIDENTIFIER
)

INSERT INTO @TEMP_T
(
	DATE_FR,
	N_CHEQUE,
	CASH_REGISTER,
	NAME_CASH_REGISTER,
	DATE_CHEQUE,
	SUMM_RETAIL,
	SUM_DISCOUNT,
	SUMM,
	CHEQUE_TYPE,
	COUNT_BOX,
	COUNT_CHEQUE,
	COUNT_CHEQUE2,
	DOC_STATE,
	ID_CHEQUE_GLOBAL
)
SELECT
	DATE_FR = @DATE_FR,
	CH.ID_CHEQUE AS N_CHEQUE,
	CR.ID_CASH_REGISTER AS CASH_REGISTER,
	CR.NAME_CASH_REGISTER,
	CH.DATE_CHEQUE,
	SUM(CASE CH.CHEQUE_TYPE
			WHEN 'SALE' THEN (CH_I.SUMM+CH_I.SUMM_DISCOUNT)
			WHEN 'RETURN' THEN -(CH_I.SUMM+CH_I.SUMM_DISCOUNT)
		END) AS SUMM_RETAIL,
	SUM(CASE CH.CHEQUE_TYPE
			WHEN 'SALE' THEN CH_I.SUMM_DISCOUNT
			WHEN 'RETURN' THEN -CH_I.SUMM_DISCOUNT
	END) AS SUM_DISCOUNT,
	SUM(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN CH_I.SUMM
		WHEN 'RETURN' THEN -CH_I.SUMM
	END) AS SUMM,
	(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN 'œ–Œƒ¿∆¿'
		WHEN 'RETURN' THEN '¬Œ«¬–¿“'
	END) AS CHEQUE_TYPE,
	SUM(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN CASE WHEN CH_I.ID_SCALING_RATIO = 0 THEN CH_I.QUANTITY ELSE CH_I.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR END
		WHEN 'RETURN' THEN CASE WHEN CH_I.ID_SCALING_RATIO = 0 THEN -CH_I.QUANTITY ELSE -CH_I.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR END
	END) AS COUNT_BOX,
	(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN (select COUNT(*) from cheque_item ci inner join cheque cc on ci.id_cheque_global = cc.id_cheque_global where cc.id_cheque = CH.ID_CHEQUE) 
		WHEN 'RETURN' THEN -(select COUNT(*) from cheque_item ci inner join cheque cc on ci.id_cheque_global = cc.id_cheque_global where cc.id_cheque = CH.ID_CHEQUE) 
	END) AS COUNT_CHEQUE,
	(CASE CH.CHEQUE_TYPE
		WHEN 'SALE' THEN 1
		WHEN 'RETURN' THEN -1
	END) AS COUNT_CHEQUE2,
	DOC_STATE = MAX(CH.DOCUMENT_STATE),
	ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL
  FROM  CASH_SESSION CS
     INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
     INNER JOIN CHEQUE_ITEM CH_I ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
     INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
     LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = CH_I.ID_SCALING_RATIO
     LEFT JOIN LOT LOT ON CH_I.ID_LOT_GLOBAL = LOT.ID_LOT_GLOBAL
      WHERE 
	CS.DATE_OPEN >= @DATE_FR AND (CS.DATE_CLOSE <= @DATE_TO OR @IS_CLOSED IS NULL) AND
       (@COUNT_CASH_REGISTER = 0 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #CASH_REGISTER)) AND
	--(CS.STATUS = @IS_CLOSED OR @IS_CLOSED IS NULL) AND
	CH.CHEQUE_TYPE IN ('SALE','RETURN') AND
	CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO AND
	(@TIME_FR IS NULL OR (DATEPART(HOUR, CH.DATE_CHEQUE)*60+DATEPART(MINUTE, CH.DATE_CHEQUE)) BETWEEN @TIME_FR2 AND @TIME_TO2) AND	(LOT.ID_STORE IN (SELECT * FROM #STORE2) OR NOT EXISTS (SELECT * FROM LOT WHERE ID_LOT_GLOBAL = CH_I.ID_LOT_GLOBAL))
  GROUP BY CH.ID_CHEQUE, CH.CHEQUE_TYPE, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER, CH.DATE_CHEQUE, CH.ID_CHEQUE_GLOBAL

IF (@IS_CLOSED = 1)
	SELECT * FROM @TEMP_T WHERE DOC_STATE = 'PROC'
ELSE
	SELECT * FROM @TEMP_T

EXEC DBO.USP_RANGE_DAYS	@DATE_FR OUTPUT, @DATE_TO OUTPUT

select count(distinct convert(char(8), date_close, 112)) as PERIOD_DAYS
from cash_session 
where date_close between @date_fr and @date_to

RETURN 0
GO

/*
exec REPEX_KKM_QUANTITY_SERVICE N'
<XML>
	<DATE_FR>2009-09-01T00:00:00.546</DATE_FR>
	<DATE_TO>2009-09-11T22:17:39.546</DATE_TO>
	<IS_CLOSED>1</IS_CLOSED>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<ID_CASH_REGISTER>47</ID_CASH_REGISTER>
</XML>'*/