//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PPVatEx {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Payment_DS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Payment_DS : global::System.Data.DataSet {
        
        private _TableDataTable table_Table;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Payment_DS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Payment_DS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Payment_DS cln = ((Payment_DS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table_Table = ((_TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.table_Table != null)) {
                    this.table_Table.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Payment_DS";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table_Table = new _TableDataTable();
            base.Tables.Add(this.table_Table);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Payment_DS ds = new Payment_DS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _TableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMNEMOCODE;
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnTYPE_P;
            
            private global::System.Data.DataColumn columnPVAT_SUM;
            
            private global::System.Data.DataColumn columnINN;
            
            private global::System.Data.DataColumn columnKPP;
            
            private global::System.Data.DataColumn columnNAME_ADD;
            
            private global::System.Data.DataColumn columnACCOUNT;
            
            private global::System.Data.DataColumn columnNAME_BANK;
            
            private global::System.Data.DataColumn columnBIK;
            
            private global::System.Data.DataColumn columnCORR_ACCOUNT;
            
            private global::System.Data.DataColumn columnNAME_BANK_P;
            
            private global::System.Data.DataColumn columnBIK_P;
            
            private global::System.Data.DataColumn columnCORR_ACCOUNT_P;
            
            private global::System.Data.DataColumn columnINN_P;
            
            private global::System.Data.DataColumn columnKPP_P;
            
            private global::System.Data.DataColumn columnACCOUNT_P;
            
            private global::System.Data.DataColumn columnNAME_ADD_P;
            
            private global::System.Data.DataColumn columnTYPE_OP;
            
            private global::System.Data.DataColumn columnPAYMENT_PERIOD;
            
            private global::System.Data.DataColumn columnPAYMENT_QUEUE;
            
            private global::System.Data.DataColumn columnPAYMENT_ASSINGMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNEMOCODEColumn {
                get {
                    return this.columnMNEMOCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_PColumn {
                get {
                    return this.columnTYPE_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PVAT_SUMColumn {
                get {
                    return this.columnPVAT_SUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INNColumn {
                get {
                    return this.columnINN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPPColumn {
                get {
                    return this.columnKPP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_ADDColumn {
                get {
                    return this.columnNAME_ADD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCOUNTColumn {
                get {
                    return this.columnACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_BANKColumn {
                get {
                    return this.columnNAME_BANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIKColumn {
                get {
                    return this.columnBIK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CORR_ACCOUNTColumn {
                get {
                    return this.columnCORR_ACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_BANK_PColumn {
                get {
                    return this.columnNAME_BANK_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIK_PColumn {
                get {
                    return this.columnBIK_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CORR_ACCOUNT_PColumn {
                get {
                    return this.columnCORR_ACCOUNT_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INN_PColumn {
                get {
                    return this.columnINN_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPP_PColumn {
                get {
                    return this.columnKPP_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCOUNT_PColumn {
                get {
                    return this.columnACCOUNT_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_ADD_PColumn {
                get {
                    return this.columnNAME_ADD_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPE_OPColumn {
                get {
                    return this.columnTYPE_OP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENT_PERIODColumn {
                get {
                    return this.columnPAYMENT_PERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENT_QUEUEColumn {
                get {
                    return this.columnPAYMENT_QUEUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PAYMENT_ASSINGMENTColumn {
                get {
                    return this.columnPAYMENT_ASSINGMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Add_TableRow(
                        string MNEMOCODE, 
                        System.DateTime DATE, 
                        string TYPE_P, 
                        decimal PVAT_SUM, 
                        string INN, 
                        string KPP, 
                        string NAME_ADD, 
                        string ACCOUNT, 
                        string NAME_BANK, 
                        string BIK, 
                        string CORR_ACCOUNT, 
                        string NAME_BANK_P, 
                        string BIK_P, 
                        string CORR_ACCOUNT_P, 
                        string INN_P, 
                        string KPP_P, 
                        string ACCOUNT_P, 
                        string NAME_ADD_P, 
                        string TYPE_OP, 
                        System.DateTime PAYMENT_PERIOD, 
                        int PAYMENT_QUEUE, 
                        string PAYMENT_ASSINGMENT) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MNEMOCODE,
                        DATE,
                        TYPE_P,
                        PVAT_SUM,
                        INN,
                        KPP,
                        NAME_ADD,
                        ACCOUNT,
                        NAME_BANK,
                        BIK,
                        CORR_ACCOUNT,
                        NAME_BANK_P,
                        BIK_P,
                        CORR_ACCOUNT_P,
                        INN_P,
                        KPP_P,
                        ACCOUNT_P,
                        NAME_ADD_P,
                        TYPE_OP,
                        PAYMENT_PERIOD,
                        PAYMENT_QUEUE,
                        PAYMENT_ASSINGMENT};
                row_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMNEMOCODE = base.Columns["MNEMOCODE"];
                this.columnDATE = base.Columns["DATE"];
                this.columnTYPE_P = base.Columns["TYPE_P"];
                this.columnPVAT_SUM = base.Columns["PVAT_SUM"];
                this.columnINN = base.Columns["INN"];
                this.columnKPP = base.Columns["KPP"];
                this.columnNAME_ADD = base.Columns["NAME_ADD"];
                this.columnACCOUNT = base.Columns["ACCOUNT"];
                this.columnNAME_BANK = base.Columns["NAME_BANK"];
                this.columnBIK = base.Columns["BIK"];
                this.columnCORR_ACCOUNT = base.Columns["CORR_ACCOUNT"];
                this.columnNAME_BANK_P = base.Columns["NAME_BANK_P"];
                this.columnBIK_P = base.Columns["BIK_P"];
                this.columnCORR_ACCOUNT_P = base.Columns["CORR_ACCOUNT_P"];
                this.columnINN_P = base.Columns["INN_P"];
                this.columnKPP_P = base.Columns["KPP_P"];
                this.columnACCOUNT_P = base.Columns["ACCOUNT_P"];
                this.columnNAME_ADD_P = base.Columns["NAME_ADD_P"];
                this.columnTYPE_OP = base.Columns["TYPE_OP"];
                this.columnPAYMENT_PERIOD = base.Columns["PAYMENT_PERIOD"];
                this.columnPAYMENT_QUEUE = base.Columns["PAYMENT_QUEUE"];
                this.columnPAYMENT_ASSINGMENT = base.Columns["PAYMENT_ASSINGMENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMNEMOCODE = new global::System.Data.DataColumn("MNEMOCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNEMOCODE);
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnTYPE_P = new global::System.Data.DataColumn("TYPE_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_P);
                this.columnPVAT_SUM = new global::System.Data.DataColumn("PVAT_SUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPVAT_SUM);
                this.columnINN = new global::System.Data.DataColumn("INN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINN);
                this.columnKPP = new global::System.Data.DataColumn("KPP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKPP);
                this.columnNAME_ADD = new global::System.Data.DataColumn("NAME_ADD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ADD);
                this.columnACCOUNT = new global::System.Data.DataColumn("ACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT);
                this.columnNAME_BANK = new global::System.Data.DataColumn("NAME_BANK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_BANK);
                this.columnBIK = new global::System.Data.DataColumn("BIK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIK);
                this.columnCORR_ACCOUNT = new global::System.Data.DataColumn("CORR_ACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCORR_ACCOUNT);
                this.columnNAME_BANK_P = new global::System.Data.DataColumn("NAME_BANK_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_BANK_P);
                this.columnBIK_P = new global::System.Data.DataColumn("BIK_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIK_P);
                this.columnCORR_ACCOUNT_P = new global::System.Data.DataColumn("CORR_ACCOUNT_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCORR_ACCOUNT_P);
                this.columnINN_P = new global::System.Data.DataColumn("INN_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINN_P);
                this.columnKPP_P = new global::System.Data.DataColumn("KPP_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKPP_P);
                this.columnACCOUNT_P = new global::System.Data.DataColumn("ACCOUNT_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_P);
                this.columnNAME_ADD_P = new global::System.Data.DataColumn("NAME_ADD_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ADD_P);
                this.columnTYPE_OP = new global::System.Data.DataColumn("TYPE_OP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_OP);
                this.columnPAYMENT_PERIOD = new global::System.Data.DataColumn("PAYMENT_PERIOD", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENT_PERIOD);
                this.columnPAYMENT_QUEUE = new global::System.Data.DataColumn("PAYMENT_QUEUE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENT_QUEUE);
                this.columnPAYMENT_ASSINGMENT = new global::System.Data.DataColumn("PAYMENT_ASSINGMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENT_ASSINGMENT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Payment_DS ds = new Payment_DS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _TableRow : global::System.Data.DataRow {
            
            private _TableDataTable table_Table;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MNEMOCODE {
                get {
                    try {
                        return ((string)(this[this.table_Table.MNEMOCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MNEMOCODE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.MNEMOCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.TYPE_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TYPE_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PVAT_SUM {
                get {
                    try {
                        return ((decimal)(this[this.table_Table.PVAT_SUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PVAT_SUM\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PVAT_SUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INN {
                get {
                    try {
                        return ((string)(this[this.table_Table.INNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INN\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.INNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KPP {
                get {
                    try {
                        return ((string)(this[this.table_Table.KPPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KPP\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.KPPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_ADD {
                get {
                    try {
                        return ((string)(this[this.table_Table.NAME_ADDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_ADD\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NAME_ADDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT {
                get {
                    try {
                        return ((string)(this[this.table_Table.ACCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_BANK {
                get {
                    try {
                        return ((string)(this[this.table_Table.NAME_BANKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_BANK\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NAME_BANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIK {
                get {
                    try {
                        return ((string)(this[this.table_Table.BIKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIK\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.BIKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CORR_ACCOUNT {
                get {
                    try {
                        return ((string)(this[this.table_Table.CORR_ACCOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CORR_ACCOUNT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CORR_ACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_BANK_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.NAME_BANK_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_BANK_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NAME_BANK_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BIK_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.BIK_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BIK_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.BIK_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CORR_ACCOUNT_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.CORR_ACCOUNT_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CORR_ACCOUNT_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CORR_ACCOUNT_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INN_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.INN_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INN_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.INN_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KPP_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.KPP_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KPP_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.KPP_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.ACCOUNT_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ACCOUNT_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ACCOUNT_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_ADD_P {
                get {
                    try {
                        return ((string)(this[this.table_Table.NAME_ADD_PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAME_ADD_P\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NAME_ADD_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE_OP {
                get {
                    try {
                        return ((string)(this[this.table_Table.TYPE_OPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE_OP\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.TYPE_OPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PAYMENT_PERIOD {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table_Table.PAYMENT_PERIODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENT_PERIOD\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PAYMENT_PERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PAYMENT_QUEUE {
                get {
                    try {
                        return ((int)(this[this.table_Table.PAYMENT_QUEUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENT_QUEUE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PAYMENT_QUEUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PAYMENT_ASSINGMENT {
                get {
                    try {
                        return ((string)(this[this.table_Table.PAYMENT_ASSINGMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENT_ASSINGMENT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PAYMENT_ASSINGMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNEMOCODENull() {
                return this.IsNull(this.table_Table.MNEMOCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNEMOCODENull() {
                this[this.table_Table.MNEMOCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATENull() {
                return this.IsNull(this.table_Table.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATENull() {
                this[this.table_Table.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_PNull() {
                return this.IsNull(this.table_Table.TYPE_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_PNull() {
                this[this.table_Table.TYPE_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPVAT_SUMNull() {
                return this.IsNull(this.table_Table.PVAT_SUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPVAT_SUMNull() {
                this[this.table_Table.PVAT_SUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINNNull() {
                return this.IsNull(this.table_Table.INNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINNNull() {
                this[this.table_Table.INNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKPPNull() {
                return this.IsNull(this.table_Table.KPPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKPPNull() {
                this[this.table_Table.KPPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAME_ADDNull() {
                return this.IsNull(this.table_Table.NAME_ADDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAME_ADDNull() {
                this[this.table_Table.NAME_ADDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNTNull() {
                return this.IsNull(this.table_Table.ACCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNTNull() {
                this[this.table_Table.ACCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAME_BANKNull() {
                return this.IsNull(this.table_Table.NAME_BANKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAME_BANKNull() {
                this[this.table_Table.NAME_BANKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIKNull() {
                return this.IsNull(this.table_Table.BIKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIKNull() {
                this[this.table_Table.BIKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCORR_ACCOUNTNull() {
                return this.IsNull(this.table_Table.CORR_ACCOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCORR_ACCOUNTNull() {
                this[this.table_Table.CORR_ACCOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAME_BANK_PNull() {
                return this.IsNull(this.table_Table.NAME_BANK_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAME_BANK_PNull() {
                this[this.table_Table.NAME_BANK_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIK_PNull() {
                return this.IsNull(this.table_Table.BIK_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIK_PNull() {
                this[this.table_Table.BIK_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCORR_ACCOUNT_PNull() {
                return this.IsNull(this.table_Table.CORR_ACCOUNT_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCORR_ACCOUNT_PNull() {
                this[this.table_Table.CORR_ACCOUNT_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINN_PNull() {
                return this.IsNull(this.table_Table.INN_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINN_PNull() {
                this[this.table_Table.INN_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKPP_PNull() {
                return this.IsNull(this.table_Table.KPP_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKPP_PNull() {
                this[this.table_Table.KPP_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACCOUNT_PNull() {
                return this.IsNull(this.table_Table.ACCOUNT_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACCOUNT_PNull() {
                this[this.table_Table.ACCOUNT_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAME_ADD_PNull() {
                return this.IsNull(this.table_Table.NAME_ADD_PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAME_ADD_PNull() {
                this[this.table_Table.NAME_ADD_PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPE_OPNull() {
                return this.IsNull(this.table_Table.TYPE_OPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPE_OPNull() {
                this[this.table_Table.TYPE_OPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENT_PERIODNull() {
                return this.IsNull(this.table_Table.PAYMENT_PERIODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENT_PERIODNull() {
                this[this.table_Table.PAYMENT_PERIODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENT_QUEUENull() {
                return this.IsNull(this.table_Table.PAYMENT_QUEUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENT_QUEUENull() {
                this[this.table_Table.PAYMENT_QUEUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPAYMENT_ASSINGMENTNull() {
                return this.IsNull(this.table_Table.PAYMENT_ASSINGMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPAYMENT_ASSINGMENTNull() {
                this[this.table_Table.PAYMENT_ASSINGMENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _TableRowChangeEvent : global::System.EventArgs {
            
            private _TableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRowChangeEvent(_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591