SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_GOODS_KEEPING_TIME_LIST') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_GOODS_KEEPING_TIME_LIST AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_GOODS_KEEPING_TIME_LIST
	(@XMLPARAM NTEXT) AS

DECLARE @HDOC INT
DECLARE @CONDITIONID BIGINT
DECLARE @GOODSID BIGINT
DECLARE @STOREID BIGINT
DECLARE @DATEFROM DATETIME
DECLARE @DATETO DATETIME

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @STOREID = STOREID, @GOODSID = GOODSID, @CONDITIONID = CONDITIONID, @DATEFROM = DATEFROM, @DATETO = DATETO
	FROM OPENXML(@HDOC, '/XML') 
	WITH(STOREID BIGINT 'STOREID',GOODSID BIGINT 'GOODSID', CONDITIONID BIGINT 'CONDITIONID', DATEFROM DATETIME 'DATEFROM', DATETO DATETIME 'DATETO')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.REP_RANGEDAY @DATEFROM OUT, @DATETO OUT

--¡ŒÀ‹ÿ≈
IF (@CONDITIONID = 0) BEGIN
	SET @DATEFROM = @DATEFROM + 0.999999 --ƒÀﬂ  –»¬€’ —–Œ Œ¬ √ŒƒÕŒ—“» (—Œƒ≈–∆¿Ÿ»’ ¬–≈Ãﬂ)

	SELECT 
        LOT.SERIES_NUMBER,
        NAME = LOT.GOODS_NAME,
        G_CODE = G.CODE, 
        LOT.BEST_BEFORE,
    	AMOUNT = LOT.QUANTITY_REM * CONVERT(MONEY, LOT.NUMERATOR) / LOT.DENOMINATOR,
    	PRODUCER_NAME = P.NAME,
        PRICE = LOT.PRICE_SAL * CONVERT(MONEY, LOT.DENOMINATOR) / LOT.NUMERATOR,
        SUMM = LOT.QUANTITY_REM * LOT.PRICE_SAL
	FROM MV_LOT LOT
    INNER JOIN PRODUCER AS P ON LOT.ID_PRODUCER = P.ID_PRODUCER
    inner join goods g on (g.ID_GOODS = LOT.ID_GOODS)
	WHERE LOT.ID_SERIES IS NOT NULL
	AND (@GOODSID IS NULL OR LOT.ID_GOODS = @GOODSID)
	AND (@STOREID IS NULL OR LOT.ID_STORE = @STOREID) 
	AND LOT.BEST_BEFORE > @DATEFROM
	AND LOT.QUANTITY_REM > 0
    ORDER BY LOT.GOODS_NAME, LOT.SERIES_NUMBER, LOT.BEST_BEFORE
END
--Ã≈Õ‹ÿ≈
ELSE IF (@CONDITIONID = 1) BEGIN

	SELECT 
        LOT.SERIES_NUMBER,
        NAME = LOT.GOODS_NAME, 
        G_CODE = G.CODE,
        LOT.BEST_BEFORE,
    	AMOUNT = LOT.QUANTITY_REM * CONVERT(MONEY, LOT.NUMERATOR) / LOT.DENOMINATOR,
    	PRODUCER_NAME = P.NAME,
        PRICE = LOT.PRICE_SAL * CONVERT(MONEY, LOT.DENOMINATOR) / LOT.NUMERATOR,
        SUMM = LOT.QUANTITY_REM * LOT.PRICE_SAL
	FROM MV_LOT LOT
   	INNER JOIN PRODUCER AS P ON LOT.ID_PRODUCER = P.ID_PRODUCER
   	inner join goods g on (g.ID_GOODS = LOT.ID_GOODS)
	WHERE LOT.ID_SERIES IS NOT NULL
	AND (@GOODSID IS NULL OR LOT.ID_GOODS = @GOODSID)
	AND (@STOREID IS NULL OR LOT.ID_STORE = @STOREID) 
	AND LOT.BEST_BEFORE < @DATEFROM
	AND LOT.QUANTITY_REM > 0
    ORDER BY LOT.GOODS_NAME, LOT.SERIES_NUMBER, LOT.BEST_BEFORE
END
--–¿¬ÕŒ
ELSE IF (@CONDITIONID = 2) BEGIN

	DECLARE @STR_DATEFROM VARCHAR(10)
	SET @STR_DATEFROM = CONVERT(VARCHAR, @DATEFROM, 104)

	SELECT
        LOT.SERIES_NUMBER,
        NAME = LOT.GOODS_NAME,
        G_CODE = G.CODE, 
        LOT.BEST_BEFORE,
    	AMOUNT = LOT.QUANTITY_REM * CONVERT(MONEY, LOT.NUMERATOR) / LOT.DENOMINATOR,
    	PRODUCER_NAME = P.NAME,
        PRICE = LOT.PRICE_SAL * CONVERT(MONEY, LOT.DENOMINATOR) / LOT.NUMERATOR,
        SUMM = LOT.QUANTITY_REM * LOT.PRICE_SAL
	FROM MV_LOT LOT
   	INNER JOIN PRODUCER AS P ON LOT.ID_PRODUCER = P.ID_PRODUCER
   	inner join goods g on (g.ID_GOODS = LOT.ID_GOODS)
	WHERE LOT.ID_SERIES IS NOT NULL
	AND (@GOODSID IS NULL OR LOT.ID_GOODS = @GOODSID)
	AND (@STOREID IS NULL OR LOT.ID_STORE = @STOREID) 
	AND CONVERT(VARCHAR, LOT.BEST_BEFORE, 104) = @STR_DATEFROM
	AND LOT.QUANTITY_REM > 0
    ORDER BY LOT.GOODS_NAME, LOT.SERIES_NUMBER, LOT.BEST_BEFORE
END
--œ≈–»Œƒ
ELSE IF (@CONDITIONID = 3) BEGIN

	SELECT 
        LOT.SERIES_NUMBER,
        NAME = LOT.GOODS_NAME,
        G_CODE = G.CODE, 
        LOT.BEST_BEFORE,
    	AMOUNT = LOT.QUANTITY_REM * CONVERT(MONEY, LOT.NUMERATOR) / LOT.DENOMINATOR,
    	PRODUCER_NAME = P.NAME,
        PRICE = LOT.PRICE_SAL * CONVERT(MONEY, LOT.DENOMINATOR) / LOT.NUMERATOR,
        SUMM = LOT.QUANTITY_REM * LOT.PRICE_SAL
	FROM MV_LOT LOT
   	INNER JOIN PRODUCER AS P ON LOT.ID_PRODUCER = P.ID_PRODUCER
   	inner join goods g on (g.ID_GOODS = LOT.ID_GOODS)
	WHERE LOT.ID_SERIES IS NOT NULL
	AND (@GOODSID IS NULL OR LOT.ID_GOODS = @GOODSID)
	AND (@STOREID IS NULL OR LOT.ID_STORE = @STOREID) 
	AND LOT.BEST_BEFORE BETWEEN @DATEFROM AND @DATETO		
	AND LOT.QUANTITY_REM <> 0
    ORDER BY LOT.GOODS_NAME, LOT.SERIES_NUMBER, LOT.BEST_BEFORE
END

RETURN 0
GO

