//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace InvoiceReestrPriceEx {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("INVOICE_REESTRPRICE_DS")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class INVOICE_REESTRPRICE_DS : System.Data.DataSet {
        
        private TableDataTable tableTable;
        
        private Table1DataTable tableTable1;
        
        private Table2DataTable tableTable2;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public INVOICE_REESTRPRICE_DS() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected INVOICE_REESTRPRICE_DS(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new TableDataTable(ds.Tables["Table"]));
                }
                if ((ds.Tables["Table1"] != null)) {
                    base.Tables.Add(new Table1DataTable(ds.Tables["Table1"]));
                }
                if ((ds.Tables["Table2"] != null)) {
                    base.Tables.Add(new Table2DataTable(ds.Tables["Table2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TableDataTable Table {
            get {
                return this.tableTable;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table1DataTable Table1 {
            get {
                return this.tableTable1;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Table2DataTable Table2 {
            get {
                return this.tableTable2;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            INVOICE_REESTRPRICE_DS cln = ((INVOICE_REESTRPRICE_DS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Table"] != null)) {
                    base.Tables.Add(new TableDataTable(ds.Tables["Table"]));
                }
                if ((ds.Tables["Table1"] != null)) {
                    base.Tables.Add(new Table1DataTable(ds.Tables["Table1"]));
                }
                if ((ds.Tables["Table2"] != null)) {
                    base.Tables.Add(new Table2DataTable(ds.Tables["Table2"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTable = ((TableDataTable)(base.Tables["Table"]));
            if ((initTable == true)) {
                if ((this.tableTable != null)) {
                    this.tableTable.InitVars();
                }
            }
            this.tableTable1 = ((Table1DataTable)(base.Tables["Table1"]));
            if ((initTable == true)) {
                if ((this.tableTable1 != null)) {
                    this.tableTable1.InitVars();
                }
            }
            this.tableTable2 = ((Table2DataTable)(base.Tables["Table2"]));
            if ((initTable == true)) {
                if ((this.tableTable2 != null)) {
                    this.tableTable2.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "INVOICE_REESTRPRICE_DS";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTable = new TableDataTable();
            base.Tables.Add(this.tableTable);
            this.tableTable1 = new Table1DataTable();
            base.Tables.Add(this.tableTable1);
            this.tableTable2 = new Table2DataTable();
            base.Tables.Add(this.tableTable2);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTable() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTable1() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTable2() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            INVOICE_REESTRPRICE_DS ds = new INVOICE_REESTRPRICE_DS();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void TableRowChangeEventHandler(object sender, TableRowChangeEvent e);
        
        public delegate void Table1RowChangeEventHandler(object sender, Table1RowChangeEvent e);
        
        public delegate void Table2RowChangeEventHandler(object sender, Table2RowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TableDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnMNEMOCODE;
            
            private System.Data.DataColumn columnINV0ICE_DATE;
            
            private System.Data.DataColumn columnINCOMING_NUMBER;
            
            private System.Data.DataColumn columnSUPPLIER_NAME;
            
            private System.Data.DataColumn columnCUSTOMER_NAME;
            
            private System.Data.DataColumn columnGOODS;
            
            private System.Data.DataColumn columnSERIES_NUMBER;
            
            private System.Data.DataColumn columnQUANTITY;
            
            private System.Data.DataColumn columnPRODUCER_NAME;
            
            private System.Data.DataColumn columnREGISTER_PRICE;
            
            private System.Data.DataColumn columnPRODUCER_PRICE;
            
            private System.Data.DataColumn columnPRODUCER_PRICE_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_ADPRICE;
            
            private System.Data.DataColumn columnSUP_ADD;
            
            private System.Data.DataColumn columnRETAIL_VAT_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_PRICE;
            
            private System.Data.DataColumn columnSUPPLIER_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_VAT;
            
            private System.Data.DataColumn columnSUPPLIER_VAT_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_PRICE_VAT;
            
            private System.Data.DataColumn columnSUPPLIER_SUM_VAT;
            
            private System.Data.DataColumn columnRETAIL_ADPRICE;
            
            private System.Data.DataColumn columnRETAIL_PRICE_VAT;
            
            private System.Data.DataColumn columnRETAIL_SUM_VAT;
            
            private System.Data.DataColumn columnRETAIL_ADPRICE_ABS;
            
            private System.Data.DataColumn columnRETAIL_ADPRICE_ABS_SUM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TableDataTable() {
                this.TableName = "Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TableDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TableDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MNEMOCODEColumn {
                get {
                    return this.columnMNEMOCODE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INV0ICE_DATEColumn {
                get {
                    return this.columnINV0ICE_DATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INCOMING_NUMBERColumn {
                get {
                    return this.columnINCOMING_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_NAMEColumn {
                get {
                    return this.columnSUPPLIER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CUSTOMER_NAMEColumn {
                get {
                    return this.columnCUSTOMER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn GOODSColumn {
                get {
                    return this.columnGOODS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SERIES_NUMBERColumn {
                get {
                    return this.columnSERIES_NUMBER;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QUANTITYColumn {
                get {
                    return this.columnQUANTITY;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRODUCER_NAMEColumn {
                get {
                    return this.columnPRODUCER_NAME;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn REGISTER_PRICEColumn {
                get {
                    return this.columnREGISTER_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRODUCER_PRICEColumn {
                get {
                    return this.columnPRODUCER_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRODUCER_PRICE_SUMColumn {
                get {
                    return this.columnPRODUCER_PRICE_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_ADPRICEColumn {
                get {
                    return this.columnSUPPLIER_ADPRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUP_ADDColumn {
                get {
                    return this.columnSUP_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_VAT_SUMColumn {
                get {
                    return this.columnRETAIL_VAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_PRICEColumn {
                get {
                    return this.columnSUPPLIER_PRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_SUMColumn {
                get {
                    return this.columnSUPPLIER_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_VATColumn {
                get {
                    return this.columnSUPPLIER_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_VAT_SUMColumn {
                get {
                    return this.columnSUPPLIER_VAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_PRICE_VATColumn {
                get {
                    return this.columnSUPPLIER_PRICE_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_SUM_VATColumn {
                get {
                    return this.columnSUPPLIER_SUM_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_ADPRICEColumn {
                get {
                    return this.columnRETAIL_ADPRICE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_PRICE_VATColumn {
                get {
                    return this.columnRETAIL_PRICE_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_SUM_VATColumn {
                get {
                    return this.columnRETAIL_SUM_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_ADPRICE_ABSColumn {
                get {
                    return this.columnRETAIL_ADPRICE_ABS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_ADPRICE_ABS_SUMColumn {
                get {
                    return this.columnRETAIL_ADPRICE_ABS_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TableRow this[int index] {
                get {
                    return ((TableRow)(this.Rows[index]));
                }
            }
            
            public event TableRowChangeEventHandler TableRowChanging;
            
            public event TableRowChangeEventHandler TableRowChanged;
            
            public event TableRowChangeEventHandler TableRowDeleting;
            
            public event TableRowChangeEventHandler TableRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTableRow(TableRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TableRow AddTableRow(
                        string MNEMOCODE, 
                        string INV0ICE_DATE, 
                        string INCOMING_NUMBER, 
                        string SUPPLIER_NAME, 
                        string CUSTOMER_NAME, 
                        string GOODS, 
                        string SERIES_NUMBER, 
                        decimal QUANTITY, 
                        string PRODUCER_NAME, 
                        decimal REGISTER_PRICE, 
                        decimal PRODUCER_PRICE, 
                        decimal PRODUCER_PRICE_SUM, 
                        decimal SUPPLIER_ADPRICE, 
                        decimal SUP_ADD, 
                        decimal RETAIL_VAT_SUM, 
                        decimal SUPPLIER_PRICE, 
                        decimal SUPPLIER_SUM, 
                        decimal SUPPLIER_VAT, 
                        decimal SUPPLIER_VAT_SUM, 
                        decimal SUPPLIER_PRICE_VAT, 
                        decimal SUPPLIER_SUM_VAT, 
                        decimal RETAIL_ADPRICE, 
                        decimal RETAIL_PRICE_VAT, 
                        decimal RETAIL_SUM_VAT, 
                        decimal RETAIL_ADPRICE_ABS, 
                        decimal RETAIL_ADPRICE_ABS_SUM) {
                TableRow rowTableRow = ((TableRow)(this.NewRow()));
                rowTableRow.ItemArray = new object[] {
                        MNEMOCODE,
                        INV0ICE_DATE,
                        INCOMING_NUMBER,
                        SUPPLIER_NAME,
                        CUSTOMER_NAME,
                        GOODS,
                        SERIES_NUMBER,
                        QUANTITY,
                        PRODUCER_NAME,
                        REGISTER_PRICE,
                        PRODUCER_PRICE,
                        PRODUCER_PRICE_SUM,
                        SUPPLIER_ADPRICE,
                        SUP_ADD,
                        RETAIL_VAT_SUM,
                        SUPPLIER_PRICE,
                        SUPPLIER_SUM,
                        SUPPLIER_VAT,
                        SUPPLIER_VAT_SUM,
                        SUPPLIER_PRICE_VAT,
                        SUPPLIER_SUM_VAT,
                        RETAIL_ADPRICE,
                        RETAIL_PRICE_VAT,
                        RETAIL_SUM_VAT,
                        RETAIL_ADPRICE_ABS,
                        RETAIL_ADPRICE_ABS_SUM};
                this.Rows.Add(rowTableRow);
                return rowTableRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                TableDataTable cln = ((TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new TableDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMNEMOCODE = base.Columns["MNEMOCODE"];
                this.columnINV0ICE_DATE = base.Columns["INV0ICE_DATE"];
                this.columnINCOMING_NUMBER = base.Columns["INCOMING_NUMBER"];
                this.columnSUPPLIER_NAME = base.Columns["SUPPLIER_NAME"];
                this.columnCUSTOMER_NAME = base.Columns["CUSTOMER_NAME"];
                this.columnGOODS = base.Columns["GOODS"];
                this.columnSERIES_NUMBER = base.Columns["SERIES_NUMBER"];
                this.columnQUANTITY = base.Columns["QUANTITY"];
                this.columnPRODUCER_NAME = base.Columns["PRODUCER_NAME"];
                this.columnREGISTER_PRICE = base.Columns["REGISTER_PRICE"];
                this.columnPRODUCER_PRICE = base.Columns["PRODUCER_PRICE"];
                this.columnPRODUCER_PRICE_SUM = base.Columns["PRODUCER_PRICE_SUM"];
                this.columnSUPPLIER_ADPRICE = base.Columns["SUPPLIER_ADPRICE"];
                this.columnSUP_ADD = base.Columns["SUP_ADD"];
                this.columnRETAIL_VAT_SUM = base.Columns["RETAIL_VAT_SUM"];
                this.columnSUPPLIER_PRICE = base.Columns["SUPPLIER_PRICE"];
                this.columnSUPPLIER_SUM = base.Columns["SUPPLIER_SUM"];
                this.columnSUPPLIER_VAT = base.Columns["SUPPLIER_VAT"];
                this.columnSUPPLIER_VAT_SUM = base.Columns["SUPPLIER_VAT_SUM"];
                this.columnSUPPLIER_PRICE_VAT = base.Columns["SUPPLIER_PRICE_VAT"];
                this.columnSUPPLIER_SUM_VAT = base.Columns["SUPPLIER_SUM_VAT"];
                this.columnRETAIL_ADPRICE = base.Columns["RETAIL_ADPRICE"];
                this.columnRETAIL_PRICE_VAT = base.Columns["RETAIL_PRICE_VAT"];
                this.columnRETAIL_SUM_VAT = base.Columns["RETAIL_SUM_VAT"];
                this.columnRETAIL_ADPRICE_ABS = base.Columns["RETAIL_ADPRICE_ABS"];
                this.columnRETAIL_ADPRICE_ABS_SUM = base.Columns["RETAIL_ADPRICE_ABS_SUM"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMNEMOCODE = new System.Data.DataColumn("MNEMOCODE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNEMOCODE);
                this.columnINV0ICE_DATE = new System.Data.DataColumn("INV0ICE_DATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV0ICE_DATE);
                this.columnINCOMING_NUMBER = new System.Data.DataColumn("INCOMING_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOMING_NUMBER);
                this.columnSUPPLIER_NAME = new System.Data.DataColumn("SUPPLIER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_NAME);
                this.columnCUSTOMER_NAME = new System.Data.DataColumn("CUSTOMER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER_NAME);
                this.columnGOODS = new System.Data.DataColumn("GOODS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOODS);
                this.columnSERIES_NUMBER = new System.Data.DataColumn("SERIES_NUMBER", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERIES_NUMBER);
                this.columnQUANTITY = new System.Data.DataColumn("QUANTITY", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUANTITY);
                this.columnPRODUCER_NAME = new System.Data.DataColumn("PRODUCER_NAME", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER_NAME);
                this.columnREGISTER_PRICE = new System.Data.DataColumn("REGISTER_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGISTER_PRICE);
                this.columnPRODUCER_PRICE = new System.Data.DataColumn("PRODUCER_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER_PRICE);
                this.columnPRODUCER_PRICE_SUM = new System.Data.DataColumn("PRODUCER_PRICE_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER_PRICE_SUM);
                this.columnSUPPLIER_ADPRICE = new System.Data.DataColumn("SUPPLIER_ADPRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_ADPRICE);
                this.columnSUP_ADD = new System.Data.DataColumn("SUP_ADD", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUP_ADD);
                this.columnRETAIL_VAT_SUM = new System.Data.DataColumn("RETAIL_VAT_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_VAT_SUM);
                this.columnSUPPLIER_PRICE = new System.Data.DataColumn("SUPPLIER_PRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_PRICE);
                this.columnSUPPLIER_SUM = new System.Data.DataColumn("SUPPLIER_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_SUM);
                this.columnSUPPLIER_VAT = new System.Data.DataColumn("SUPPLIER_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_VAT);
                this.columnSUPPLIER_VAT_SUM = new System.Data.DataColumn("SUPPLIER_VAT_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_VAT_SUM);
                this.columnSUPPLIER_PRICE_VAT = new System.Data.DataColumn("SUPPLIER_PRICE_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_PRICE_VAT);
                this.columnSUPPLIER_SUM_VAT = new System.Data.DataColumn("SUPPLIER_SUM_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_SUM_VAT);
                this.columnRETAIL_ADPRICE = new System.Data.DataColumn("RETAIL_ADPRICE", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_ADPRICE);
                this.columnRETAIL_PRICE_VAT = new System.Data.DataColumn("RETAIL_PRICE_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_PRICE_VAT);
                this.columnRETAIL_SUM_VAT = new System.Data.DataColumn("RETAIL_SUM_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_SUM_VAT);
                this.columnRETAIL_ADPRICE_ABS = new System.Data.DataColumn("RETAIL_ADPRICE_ABS", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_ADPRICE_ABS);
                this.columnRETAIL_ADPRICE_ABS_SUM = new System.Data.DataColumn("RETAIL_ADPRICE_ABS_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_ADPRICE_ABS_SUM);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TableRow NewTableRow() {
                return ((TableRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new TableRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(TableRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TableRowChanged != null)) {
                    this.TableRowChanged(this, new TableRowChangeEvent(((TableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TableRowChanging != null)) {
                    this.TableRowChanging(this, new TableRowChangeEvent(((TableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TableRowDeleted != null)) {
                    this.TableRowDeleted(this, new TableRowChangeEvent(((TableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TableRowDeleting != null)) {
                    this.TableRowDeleting(this, new TableRowChangeEvent(((TableRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTableRow(TableRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                INVOICE_REESTRPRICE_DS ds = new INVOICE_REESTRPRICE_DS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table1DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPRODUCER_PRICE_SUM;
            
            private System.Data.DataColumn columnSUP_ADD;
            
            private System.Data.DataColumn columnSUPPLIER_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_VAT_SUM;
            
            private System.Data.DataColumn columnSUPPLIER_SUM_VAT;
            
            private System.Data.DataColumn columnRETAIL_VAT_SUM;
            
            private System.Data.DataColumn columnRETAIL_SUM_VAT;
            
            private System.Data.DataColumn columnRETAIL_ADPRICE_ABS_SUM;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1DataTable() {
                this.TableName = "Table1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table1DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Table1DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PRODUCER_PRICE_SUMColumn {
                get {
                    return this.columnPRODUCER_PRICE_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUP_ADDColumn {
                get {
                    return this.columnSUP_ADD;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_SUMColumn {
                get {
                    return this.columnSUPPLIER_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_VAT_SUMColumn {
                get {
                    return this.columnSUPPLIER_VAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SUPPLIER_SUM_VATColumn {
                get {
                    return this.columnSUPPLIER_SUM_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_VAT_SUMColumn {
                get {
                    return this.columnRETAIL_VAT_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_SUM_VATColumn {
                get {
                    return this.columnRETAIL_SUM_VAT;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RETAIL_ADPRICE_ABS_SUMColumn {
                get {
                    return this.columnRETAIL_ADPRICE_ABS_SUM;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row this[int index] {
                get {
                    return ((Table1Row)(this.Rows[index]));
                }
            }
            
            public event Table1RowChangeEventHandler Table1RowChanging;
            
            public event Table1RowChangeEventHandler Table1RowChanged;
            
            public event Table1RowChangeEventHandler Table1RowDeleting;
            
            public event Table1RowChangeEventHandler Table1RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTable1Row(Table1Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row AddTable1Row(decimal PRODUCER_PRICE_SUM, decimal SUP_ADD, decimal SUPPLIER_SUM, decimal SUPPLIER_VAT_SUM, decimal SUPPLIER_SUM_VAT, decimal RETAIL_VAT_SUM, decimal RETAIL_SUM_VAT, decimal RETAIL_ADPRICE_ABS_SUM) {
                Table1Row rowTable1Row = ((Table1Row)(this.NewRow()));
                rowTable1Row.ItemArray = new object[] {
                        PRODUCER_PRICE_SUM,
                        SUP_ADD,
                        SUPPLIER_SUM,
                        SUPPLIER_VAT_SUM,
                        SUPPLIER_SUM_VAT,
                        RETAIL_VAT_SUM,
                        RETAIL_SUM_VAT,
                        RETAIL_ADPRICE_ABS_SUM};
                this.Rows.Add(rowTable1Row);
                return rowTable1Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                Table1DataTable cln = ((Table1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new Table1DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPRODUCER_PRICE_SUM = base.Columns["PRODUCER_PRICE_SUM"];
                this.columnSUP_ADD = base.Columns["SUP_ADD"];
                this.columnSUPPLIER_SUM = base.Columns["SUPPLIER_SUM"];
                this.columnSUPPLIER_VAT_SUM = base.Columns["SUPPLIER_VAT_SUM"];
                this.columnSUPPLIER_SUM_VAT = base.Columns["SUPPLIER_SUM_VAT"];
                this.columnRETAIL_VAT_SUM = base.Columns["RETAIL_VAT_SUM"];
                this.columnRETAIL_SUM_VAT = base.Columns["RETAIL_SUM_VAT"];
                this.columnRETAIL_ADPRICE_ABS_SUM = base.Columns["RETAIL_ADPRICE_ABS_SUM"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPRODUCER_PRICE_SUM = new System.Data.DataColumn("PRODUCER_PRICE_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCER_PRICE_SUM);
                this.columnSUP_ADD = new System.Data.DataColumn("SUP_ADD", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUP_ADD);
                this.columnSUPPLIER_SUM = new System.Data.DataColumn("SUPPLIER_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_SUM);
                this.columnSUPPLIER_VAT_SUM = new System.Data.DataColumn("SUPPLIER_VAT_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_VAT_SUM);
                this.columnSUPPLIER_SUM_VAT = new System.Data.DataColumn("SUPPLIER_SUM_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUPPLIER_SUM_VAT);
                this.columnRETAIL_VAT_SUM = new System.Data.DataColumn("RETAIL_VAT_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_VAT_SUM);
                this.columnRETAIL_SUM_VAT = new System.Data.DataColumn("RETAIL_SUM_VAT", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_SUM_VAT);
                this.columnRETAIL_ADPRICE_ABS_SUM = new System.Data.DataColumn("RETAIL_ADPRICE_ABS_SUM", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETAIL_ADPRICE_ABS_SUM);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row NewTable1Row() {
                return ((Table1Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new Table1Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(Table1Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table1RowChanged != null)) {
                    this.Table1RowChanged(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table1RowChanging != null)) {
                    this.Table1RowChanging(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table1RowDeleted != null)) {
                    this.Table1RowDeleted(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table1RowDeleting != null)) {
                    this.Table1RowDeleting(this, new Table1RowChangeEvent(((Table1Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTable1Row(Table1Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                INVOICE_REESTRPRICE_DS ds = new INVOICE_REESTRPRICE_DS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Table2DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDIR;
            
            private System.Data.DataColumn columnBUH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2DataTable() {
                this.TableName = "Table2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table2DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Table2DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DIRColumn {
                get {
                    return this.columnDIR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BUHColumn {
                get {
                    return this.columnBUH;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row this[int index] {
                get {
                    return ((Table2Row)(this.Rows[index]));
                }
            }
            
            public event Table2RowChangeEventHandler Table2RowChanging;
            
            public event Table2RowChangeEventHandler Table2RowChanged;
            
            public event Table2RowChangeEventHandler Table2RowDeleting;
            
            public event Table2RowChangeEventHandler Table2RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTable2Row(Table2Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row AddTable2Row(string DIR, string BUH) {
                Table2Row rowTable2Row = ((Table2Row)(this.NewRow()));
                rowTable2Row.ItemArray = new object[] {
                        DIR,
                        BUH};
                this.Rows.Add(rowTable2Row);
                return rowTable2Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                Table2DataTable cln = ((Table2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new Table2DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDIR = base.Columns["DIR"];
                this.columnBUH = base.Columns["BUH"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDIR = new System.Data.DataColumn("DIR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIR);
                this.columnBUH = new System.Data.DataColumn("BUH", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUH);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row NewTable2Row() {
                return ((Table2Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new Table2Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(Table2Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Table2RowChanged != null)) {
                    this.Table2RowChanged(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Table2RowChanging != null)) {
                    this.Table2RowChanging(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Table2RowDeleted != null)) {
                    this.Table2RowDeleted(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Table2RowDeleting != null)) {
                    this.Table2RowDeleting(this, new Table2RowChangeEvent(((Table2Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTable2Row(Table2Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                INVOICE_REESTRPRICE_DS ds = new INVOICE_REESTRPRICE_DS();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Table2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TableRow : System.Data.DataRow {
            
            private TableDataTable tableTable;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TableRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable = ((TableDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MNEMOCODE {
                get {
                    try {
                        return ((string)(this[this.tableTable.MNEMOCODEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MNEMOCODE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.MNEMOCODEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INV0ICE_DATE {
                get {
                    try {
                        return ((string)(this[this.tableTable.INV0ICE_DATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'INV0ICE_DATE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.INV0ICE_DATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INCOMING_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableTable.INCOMING_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'INCOMING_NUMBER\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.INCOMING_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUPPLIER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTable.SUPPLIER_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_NAME\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTable.CUSTOMER_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CUSTOMER_NAME\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.CUSTOMER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GOODS {
                get {
                    try {
                        return ((string)(this[this.tableTable.GOODSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'GOODS\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.GOODSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERIES_NUMBER {
                get {
                    try {
                        return ((string)(this[this.tableTable.SERIES_NUMBERColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SERIES_NUMBER\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SERIES_NUMBERColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QUANTITY {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.QUANTITYColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QUANTITY\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.QUANTITYColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCER_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTable.PRODUCER_NAMEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRODUCER_NAME\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.PRODUCER_NAMEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REGISTER_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.REGISTER_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'REGISTER_PRICE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.REGISTER_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRODUCER_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.PRODUCER_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRODUCER_PRICE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.PRODUCER_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRODUCER_PRICE_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.PRODUCER_PRICE_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRODUCER_PRICE_SUM\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.PRODUCER_PRICE_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_ADPRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUPPLIER_ADPRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_ADPRICE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_ADPRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUP_ADD {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUP_ADDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUP_ADD\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUP_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_VAT_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.RETAIL_VAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_VAT_SUM\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.RETAIL_VAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUPPLIER_PRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_PRICE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_PRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUPPLIER_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_SUM\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUPPLIER_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_VAT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_VAT_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUPPLIER_VAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_VAT_SUM\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_VAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_PRICE_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUPPLIER_PRICE_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_PRICE_VAT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_PRICE_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_SUM_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.SUPPLIER_SUM_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_SUM_VAT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.SUPPLIER_SUM_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_ADPRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.RETAIL_ADPRICEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_ADPRICE\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.RETAIL_ADPRICEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_PRICE_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.RETAIL_PRICE_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_PRICE_VAT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.RETAIL_PRICE_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_SUM_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.RETAIL_SUM_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_SUM_VAT\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.RETAIL_SUM_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_ADPRICE_ABS {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.RETAIL_ADPRICE_ABSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_ADPRICE_ABS\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.RETAIL_ADPRICE_ABSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_ADPRICE_ABS_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable.RETAIL_ADPRICE_ABS_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_ADPRICE_ABS_SUM\' in table \'Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable.RETAIL_ADPRICE_ABS_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNEMOCODENull() {
                return this.IsNull(this.tableTable.MNEMOCODEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNEMOCODENull() {
                this[this.tableTable.MNEMOCODEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINV0ICE_DATENull() {
                return this.IsNull(this.tableTable.INV0ICE_DATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINV0ICE_DATENull() {
                this[this.tableTable.INV0ICE_DATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINCOMING_NUMBERNull() {
                return this.IsNull(this.tableTable.INCOMING_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINCOMING_NUMBERNull() {
                this[this.tableTable.INCOMING_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_NAMENull() {
                return this.IsNull(this.tableTable.SUPPLIER_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_NAMENull() {
                this[this.tableTable.SUPPLIER_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_NAMENull() {
                return this.IsNull(this.tableTable.CUSTOMER_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_NAMENull() {
                this[this.tableTable.CUSTOMER_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGOODSNull() {
                return this.IsNull(this.tableTable.GOODSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGOODSNull() {
                this[this.tableTable.GOODSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERIES_NUMBERNull() {
                return this.IsNull(this.tableTable.SERIES_NUMBERColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERIES_NUMBERNull() {
                this[this.tableTable.SERIES_NUMBERColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUANTITYNull() {
                return this.IsNull(this.tableTable.QUANTITYColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUANTITYNull() {
                this[this.tableTable.QUANTITYColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCER_NAMENull() {
                return this.IsNull(this.tableTable.PRODUCER_NAMEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCER_NAMENull() {
                this[this.tableTable.PRODUCER_NAMEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREGISTER_PRICENull() {
                return this.IsNull(this.tableTable.REGISTER_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREGISTER_PRICENull() {
                this[this.tableTable.REGISTER_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCER_PRICENull() {
                return this.IsNull(this.tableTable.PRODUCER_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCER_PRICENull() {
                this[this.tableTable.PRODUCER_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCER_PRICE_SUMNull() {
                return this.IsNull(this.tableTable.PRODUCER_PRICE_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCER_PRICE_SUMNull() {
                this[this.tableTable.PRODUCER_PRICE_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_ADPRICENull() {
                return this.IsNull(this.tableTable.SUPPLIER_ADPRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_ADPRICENull() {
                this[this.tableTable.SUPPLIER_ADPRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUP_ADDNull() {
                return this.IsNull(this.tableTable.SUP_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUP_ADDNull() {
                this[this.tableTable.SUP_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_VAT_SUMNull() {
                return this.IsNull(this.tableTable.RETAIL_VAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_VAT_SUMNull() {
                this[this.tableTable.RETAIL_VAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_PRICENull() {
                return this.IsNull(this.tableTable.SUPPLIER_PRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_PRICENull() {
                this[this.tableTable.SUPPLIER_PRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_SUMNull() {
                return this.IsNull(this.tableTable.SUPPLIER_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_SUMNull() {
                this[this.tableTable.SUPPLIER_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_VATNull() {
                return this.IsNull(this.tableTable.SUPPLIER_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_VATNull() {
                this[this.tableTable.SUPPLIER_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_VAT_SUMNull() {
                return this.IsNull(this.tableTable.SUPPLIER_VAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_VAT_SUMNull() {
                this[this.tableTable.SUPPLIER_VAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_PRICE_VATNull() {
                return this.IsNull(this.tableTable.SUPPLIER_PRICE_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_PRICE_VATNull() {
                this[this.tableTable.SUPPLIER_PRICE_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_SUM_VATNull() {
                return this.IsNull(this.tableTable.SUPPLIER_SUM_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_SUM_VATNull() {
                this[this.tableTable.SUPPLIER_SUM_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_ADPRICENull() {
                return this.IsNull(this.tableTable.RETAIL_ADPRICEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_ADPRICENull() {
                this[this.tableTable.RETAIL_ADPRICEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_PRICE_VATNull() {
                return this.IsNull(this.tableTable.RETAIL_PRICE_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_PRICE_VATNull() {
                this[this.tableTable.RETAIL_PRICE_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_SUM_VATNull() {
                return this.IsNull(this.tableTable.RETAIL_SUM_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_SUM_VATNull() {
                this[this.tableTable.RETAIL_SUM_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_ADPRICE_ABSNull() {
                return this.IsNull(this.tableTable.RETAIL_ADPRICE_ABSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_ADPRICE_ABSNull() {
                this[this.tableTable.RETAIL_ADPRICE_ABSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_ADPRICE_ABS_SUMNull() {
                return this.IsNull(this.tableTable.RETAIL_ADPRICE_ABS_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_ADPRICE_ABS_SUMNull() {
                this[this.tableTable.RETAIL_ADPRICE_ABS_SUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Table1Row : System.Data.DataRow {
            
            private Table1DataTable tableTable1;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table1Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable1 = ((Table1DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRODUCER_PRICE_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.PRODUCER_PRICE_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'PRODUCER_PRICE_SUM\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.PRODUCER_PRICE_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUP_ADD {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.SUP_ADDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUP_ADD\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.SUP_ADDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.SUPPLIER_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_SUM\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.SUPPLIER_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_VAT_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.SUPPLIER_VAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_VAT_SUM\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.SUPPLIER_VAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUPPLIER_SUM_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.SUPPLIER_SUM_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SUPPLIER_SUM_VAT\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.SUPPLIER_SUM_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_VAT_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.RETAIL_VAT_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_VAT_SUM\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.RETAIL_VAT_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_SUM_VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.RETAIL_SUM_VATColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_SUM_VAT\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.RETAIL_SUM_VATColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RETAIL_ADPRICE_ABS_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableTable1.RETAIL_ADPRICE_ABS_SUMColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RETAIL_ADPRICE_ABS_SUM\' in table \'Table1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable1.RETAIL_ADPRICE_ABS_SUMColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRODUCER_PRICE_SUMNull() {
                return this.IsNull(this.tableTable1.PRODUCER_PRICE_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRODUCER_PRICE_SUMNull() {
                this[this.tableTable1.PRODUCER_PRICE_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUP_ADDNull() {
                return this.IsNull(this.tableTable1.SUP_ADDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUP_ADDNull() {
                this[this.tableTable1.SUP_ADDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_SUMNull() {
                return this.IsNull(this.tableTable1.SUPPLIER_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_SUMNull() {
                this[this.tableTable1.SUPPLIER_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_VAT_SUMNull() {
                return this.IsNull(this.tableTable1.SUPPLIER_VAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_VAT_SUMNull() {
                this[this.tableTable1.SUPPLIER_VAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUPPLIER_SUM_VATNull() {
                return this.IsNull(this.tableTable1.SUPPLIER_SUM_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUPPLIER_SUM_VATNull() {
                this[this.tableTable1.SUPPLIER_SUM_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_VAT_SUMNull() {
                return this.IsNull(this.tableTable1.RETAIL_VAT_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_VAT_SUMNull() {
                this[this.tableTable1.RETAIL_VAT_SUMColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_SUM_VATNull() {
                return this.IsNull(this.tableTable1.RETAIL_SUM_VATColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_SUM_VATNull() {
                this[this.tableTable1.RETAIL_SUM_VATColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRETAIL_ADPRICE_ABS_SUMNull() {
                return this.IsNull(this.tableTable1.RETAIL_ADPRICE_ABS_SUMColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRETAIL_ADPRICE_ABS_SUMNull() {
                this[this.tableTable1.RETAIL_ADPRICE_ABS_SUMColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Table2Row : System.Data.DataRow {
            
            private Table2DataTable tableTable2;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Table2Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTable2 = ((Table2DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DIR {
                get {
                    try {
                        return ((string)(this[this.tableTable2.DIRColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DIR\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.DIRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BUH {
                get {
                    try {
                        return ((string)(this[this.tableTable2.BUHColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'BUH\' in table \'Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTable2.BUHColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDIRNull() {
                return this.IsNull(this.tableTable2.DIRColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDIRNull() {
                this[this.tableTable2.DIRColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBUHNull() {
                return this.IsNull(this.tableTable2.BUHColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBUHNull() {
                this[this.tableTable2.BUHColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TableRowChangeEvent : System.EventArgs {
            
            private TableRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TableRowChangeEvent(TableRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Table1RowChangeEvent : System.EventArgs {
            
            private Table1Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1RowChangeEvent(Table1Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Table2RowChangeEvent : System.EventArgs {
            
            private Table2Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2RowChangeEvent(Table2Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Table2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591