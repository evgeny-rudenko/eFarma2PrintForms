SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_SERVICES_SALES_ANALYSIS') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_SERVICES_SALES_ANALYSIS AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_SERVICES_SALES_ANALYSIS
	@XMLPARAM NTEXT AS
		
DECLARE	@HDOC INT
DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME

DECLARE @ALL_SERVICES BIT
		
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
		
SELECT
	@DATE_FROM = DATE_FROM,
	@DATE_TO = DATE_TO
FROM OPENXML(@HDOC , '/XML') WITH(
	DATE_FROM DATETIME 'DATE_FROM',
	DATE_TO DATETIME 'DATE_TO'
)

SELECT * INTO #SERVICES FROM OPENXML(@HDOC, '/XML/ID_SERVICE') WITH(ID_SERVICE UNIQUEIDENTIFIER '.')
IF @@ROWCOUNT = 0 
	SET @ALL_SERVICES = 1
		
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_DAYS	@DATE_FROM OUTPUT, @DATE_TO OUTPUT
EXEC DBO.USP_RANGE_NORM	@DATE_FROM OUTPUT, @DATE_TO OUTPUT

SELECT
	SERVICE_NAME = SV.NAME,
	QUANTITY = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * CHI.QUANTITY * SI.QUANTITY),
	PRICE_SUM = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * CHI.QUANTITY * SI.QUANTITY * SI.PRICE_SAL)
FROM CHEQUE AS CH
	INNER JOIN CHEQUE_ITEM AS CHI ON CHI.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL
	INNER JOIN SERVICE_4_SALE AS S ON S.ID_SERVICE_4_SALE = CHI.ID_LOT_GLOBAL
	INNER JOIN SERVICE_4_SALE_ITEM SI ON SI.ID_SERVICE_4_SALE = S.ID_SERVICE_4_SALE
	INNER JOIN SERVICE SV ON SV.ID_SERVICE = SI.ID_SERVICE
WHERE CH.DOCUMENT_STATE = 'PROC'
	AND CH.CHEQUE_TYPE IN ('SALE', 'RETURN')
	AND CH.DATE_CHEQUE BETWEEN @DATE_FROM AND @DATE_TO
	AND (@ALL_SERVICES = 1 OR SI.ID_SERVICE IN (SELECT ID_SERVICE FROM #SERVICES))
GROUP BY SV.NAME

RETURN 0
GO

/*
exec REPEX_SERVICES_SALES_ANALYSIS N'
<XML>
	<DATE_FROM>2009-07-29T17:23:28.031</DATE_FROM>
	<DATE_TO>2009-07-29T17:23:28.031</DATE_TO>
</XML>'*/