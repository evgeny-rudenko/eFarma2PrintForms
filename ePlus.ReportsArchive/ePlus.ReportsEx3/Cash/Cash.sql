SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_CASH') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_CASH AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_CASH
    @XMLPARAM NTEXT
AS

DECLARE @ALL_CASHIER BIT
DECLARE @ALL_KKM BIT
DECLARE @ALL_PRODUCER BIT
DECLARE @ALL_CONTRACTOR BIT
DECLARE @ALL_GOODS BIT

DECLARE @HDOC INT

DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @DETAIL BIT


EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@DETAIL = DETAIL
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	DETAIL BIT 'DETAIL'
)

SELECT * INTO #CASHIER FROM OPENXML(@HDOC, '//CASHIER') WITH(ID_CASHIER BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_CASHIER = 1 ELSE SET @ALL_CASHIER = 0

SELECT * INTO #KKM FROM OPENXML(@HDOC, '//KKM') WITH(ID_KKM BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_KKM = 1 ELSE SET @ALL_KKM = 0

SELECT * INTO #PRODUCER FROM OPENXML(@HDOC, '//PRODUCER') WITH(ID_PRODUCER BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_PRODUCER = 1 ELSE SET @ALL_PRODUCER = 0

SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1 ELSE SET @ALL_CONTRACTOR = 0

SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//GOODS') WITH(ID_GOODS BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_GOODS = 1 ELSE SET @ALL_GOODS = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

SELECT
	CASHIER = S.CASHIER,
	CASHIER_NAME = S.CASHIER_NAME,
	CASH_REGISTER = S.CASH_REGISTER,
	CASH_REGISTER_NAME = S.NAME_CASH_REGISTER,

	COUNT_CHEQUE_SAL = S.COUNT_CHEQUE_SAL,
	QUANTITY_SAL = S.QUANTITY_SAL,
	SUM_SUP_SAL = S.SUM_SUP_SAL,
	SUM_RET_SAL = S.SUM_RET_SAL,
	SUM_DIS_SAL = S.SUM_DIS_SAL,
	SUM_RETDIS_SAL = S.SUM_RETDIS_SAL,

	COUNT_CHEQUE_RET = ISNULL(R.COUNT_CHEQUE_RET, 0),
	QUANTITY_RET = ISNULL(R.QUANTITY_RET, 0),
	SUM_SUP_RET = ISNULL(R.SUM_SUP_RET, 0),
	SUM_RET_RET = ISNULL(R.SUM_RET_RET, 0),
	SUM_DIS_RET = ISNULL(R.SUM_DIS_RET, 0),
	SUM_RETDIS_RET = ISNULL(R.SUM_RETDIS_RET, 0),
	DATE_OP = S.DATE_OP
	
FROM
(
SELECT	
	CASHIER = CH.ID_USER_DATA,
	CASHIER_NAME = U.FULL_NAME,
	CASH_REGISTER = CR.ID_CASH_REGISTER,
	NAME_CASH_REGISTER = CR.NAME_CASH_REGISTER,
	COUNT_CHEQUE_SAL = COUNT(DISTINCT(CONVERT(CHAR(36), CH.ID_CHEQUE_GLOBAL))),
	QUANTITY_SAL = SUM(CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END),
	SUM_SUP_SAL = SUM(CHI.QUANTITY * L.PRICE_SUP),
	SUM_RET_SAL = SUM(CHI.QUANTITY * CHI.PRICE),
	SUM_DIS_SAL = SUM(CHI.SUMM_DISCOUNT),
	SUM_RETDIS_SAL = SUM(CHI.SUMM),
	DATE_OP = CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
FROM CASH_SESSION CS
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
	INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE_ITEM CHI ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON CHI.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
	INNER JOIN LOT L ON CHI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	LEFT JOIN GOODS G ON CHI.ID_GOODS = G.ID_GOODS
	LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER	
WHERE CH.CHEQUE_TYPE IN ('SALE') AND CH.DOCUMENT_STATE = 'PROC'
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND (@ALL_CASHIER = 1 OR CH.ID_USER_DATA IN (SELECT * FROM #CASHIER))
	AND (@ALL_KKM = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #KKM))
	AND (@ALL_PRODUCER = 1 OR (P.ID_PRODUCER IS NULL OR P.ID_PRODUCER IN (SELECT * FROM #PRODUCER)))
	AND (@ALL_CONTRACTOR = 1 OR (C.ID_CONTRACTOR IS NULL OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR)))
	AND (@ALL_GOODS = 1 OR (G.ID_GOODS IS NULL OR G.ID_GOODS IN (SELECT * FROM #GOODS)))
GROUP BY CH.ID_USER_DATA, U.FULL_NAME, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER, CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
) AS S

LEFT JOIN

(
SELECT	
	CASHIER = CH.ID_USER_DATA,
	CASHIER_NAME = U.FULL_NAME,
	CASH_REGISTER = CR.ID_CASH_REGISTER,
	NAME_CASH_REGISTER = CR.NAME_CASH_REGISTER,
	COUNT_CHEQUE_RET = COUNT(DISTINCT(CONVERT(CHAR(36), CH.ID_CHEQUE_GLOBAL))),
	QUANTITY_RET = SUM(CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END),
	SUM_SUP_RET = SUM(CHI.QUANTITY * L.PRICE_SUP),
	SUM_RET_RET = SUM(CHI.QUANTITY * CHI.PRICE),
	SUM_DIS_RET = SUM(CHI.SUMM_DISCOUNT),
	SUM_RETDIS_RET = SUM(CHI.SUMM),
	DATE_OP = CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
FROM CASH_SESSION CS
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
	INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE_ITEM CHI ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON CHI.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
	INNER JOIN LOT L ON CHI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	LEFT JOIN GOODS G ON CHI.ID_GOODS = G.ID_GOODS
	LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
WHERE CH.CHEQUE_TYPE IN ('RETURN') AND CH.DOCUMENT_STATE = 'PROC'
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND (@ALL_CASHIER = 1 OR CH.ID_USER_DATA IN (SELECT * FROM #CASHIER))
	AND (@ALL_KKM = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #KKM))
	AND (@ALL_PRODUCER = 1 OR (P.ID_PRODUCER IS NULL OR P.ID_PRODUCER IN (SELECT * FROM #PRODUCER)))
	AND (@ALL_CONTRACTOR = 1 OR (C.ID_CONTRACTOR IS NULL OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR)))
	AND (@ALL_GOODS = 1 OR (G.ID_GOODS IS NULL OR G.ID_GOODS IN (SELECT * FROM #GOODS)))
GROUP BY CH.ID_USER_DATA, U.FULL_NAME, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER, CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
) AS R ON S.DATE_OP = R.DATE_OP AND S.CASHIER = R.CASHIER AND S.CASH_REGISTER = R.CASH_REGISTER
ORDER BY S.CASHIER_NAME, S.NAME_CASH_REGISTER, S.DATE_OP

IF (@DETAIL = 1)
BEGIN
SELECT		
	CASHIER = CH.ID_USER_DATA,
	CASHIER_NAME = U.FULL_NAME,
	CASH_REGISTER = CR.ID_CASH_REGISTER,
	CASH_REGISTER_NAME = CR.NAME_CASH_REGISTER,

	COUNT_CHEQUE_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE 0 END),
	QUANTITY_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END ELSE 0 END),
	SUM_SUP_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CHI.QUANTITY * L.PRICE_SUP ELSE 0 END),
	SUM_RET_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CHI.QUANTITY * CHI.PRICE ELSE 0 END),
	SUM_DIS_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CHI.SUMM_DISCOUNT ELSE 0 END),
	SUM_RETDIS_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CHI.SUMM ELSE 0 END),

	COUNT_CHEQUE_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN 1 ELSE 0 END),
	QUANTITY_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END ELSE 0 END),
	SUM_SUP_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CHI.QUANTITY * L.PRICE_SUP ELSE 0 END),
	SUM_RET_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CHI.QUANTITY * CHI.PRICE ELSE 0 END),
	SUM_DIS_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CHI.SUMM_DISCOUNT ELSE 0 END),
	SUM_RETDIS_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CHI.SUMM ELSE 0 END),

	GOODS_NAME = MAX('“Ó‚‡: ' + G.[NAME] + '; »«√Œ“Œ¬»“≈À‹: ' + ISNULL(P.[NAME], '') + '; œŒ—“¿¬Ÿ» : ' + ISNULL(C.[NAME], '')),
	DATE_OP = CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME),
	G_CODE = max(G.CODE)
FROM CASH_SESSION CS
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
	INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE_ITEM CHI ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON CHI.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
	INNER JOIN LOT L ON CHI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	INNER JOIN GOODS G ON CHI.ID_GOODS = G.ID_GOODS
	INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
WHERE CH.CHEQUE_TYPE IN ('SALE', 'RETURN') AND CH.DOCUMENT_STATE = 'PROC'
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND (@ALL_CASHIER = 1 OR CH.ID_USER_DATA IN (SELECT * FROM #CASHIER))
	AND (@ALL_KKM = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #KKM))
	AND (@ALL_PRODUCER = 1 OR (P.ID_PRODUCER IS NULL OR P.ID_PRODUCER IN (SELECT * FROM #PRODUCER)))
	AND (@ALL_CONTRACTOR = 1 OR (C.ID_CONTRACTOR IS NULL OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR)))
	AND (@ALL_GOODS = 1 OR (G.ID_GOODS IS NULL OR G.ID_GOODS IN (SELECT * FROM #GOODS)))
GROUP BY CH.ID_USER_DATA, U.FULL_NAME, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER,
 		G.ID_GOODS_GLOBAL, G.NAME,
		CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
ORDER BY G.NAME

END
ELSE
BEGIN

SELECT
	CASHIER = NULL,
	CASHIER_NAME = NULL,
	CASH_REGISTER = NULL,
	CASH_REGISTER_NAME = NULL,

	COUNT_CHEQUE_SAL = NULL,
	QUANTITY_SAL = NULL,
	SUM_SUP_SAL = NULL,
	SUM_RET_SAL = NULL,
	SUM_DIS_SAL = NULL,
	SUM_RETDIS_SAL = NULL,

	COUNT_CHEQUE_RET = NULL,
	QUANTITY_RET = NULL,
	SUM_SUP_RET = NULL,
	SUM_RET_RET = NULL,
	SUM_DIS_RET = NULL,
	SUM_RETDIS_RET = NULL,

	GOODS_NAME = NULL,
	DATE_OP = NULL,
	G_CODE = NULL

END

select count(distinct convert(char(8), date_close, 112)) as PERIOD_DAYS
from cash_session 
where date_close between @date_fr and @date_to

RETURN 0
GO

/*
EXEC REPEX_CASH N'
<XML>
	<DATE_FR>2009-09-01T00:00:00.000</DATE_FR>
	<DATE_TO>2009-09-09T00:00:00.000</DATE_TO>
	<DETAIL>0</DETAIL>
</XML>'*/

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_CASH_SERVICE') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_CASH_SERVICE AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_CASH_SERVICE
    @XMLPARAM NTEXT
AS

DECLARE @ALL_CASHIER BIT
DECLARE @ALL_KKM BIT
DECLARE @ALL_PRODUCER BIT
DECLARE @ALL_CONTRACTOR BIT
DECLARE @ALL_GOODS BIT

DECLARE @HDOC INT

DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @DETAIL BIT


EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@DETAIL = DETAIL
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	DETAIL BIT 'DETAIL'
)

SELECT * INTO #CASHIER FROM OPENXML(@HDOC, '//CASHIER') WITH(ID_CASHIER BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_CASHIER = 1 ELSE SET @ALL_CASHIER = 0

SELECT * INTO #KKM FROM OPENXML(@HDOC, '//KKM') WITH(ID_KKM BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_KKM = 1 ELSE SET @ALL_KKM = 0

SELECT * INTO #PRODUCER FROM OPENXML(@HDOC, '//PRODUCER') WITH(ID_PRODUCER BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_PRODUCER = 1 ELSE SET @ALL_PRODUCER = 0

SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1 ELSE SET @ALL_CONTRACTOR = 0

SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//GOODS') WITH(ID_GOODS BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_GOODS = 1 ELSE SET @ALL_GOODS = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

SELECT
	CASHIER = S.CASHIER,
	CASHIER_NAME = S.CASHIER_NAME,
	CASH_REGISTER = S.CASH_REGISTER,
	CASH_REGISTER_NAME = S.NAME_CASH_REGISTER,

	COUNT_CHEQUE_SAL = S.COUNT_CHEQUE_SAL,
	QUANTITY_SAL = S.QUANTITY_SAL,
	SUM_SUP_SAL = S.SUM_SUP_SAL,
	SUM_RET_SAL = S.SUM_RET_SAL,
	SUM_DIS_SAL = S.SUM_DIS_SAL,
	SUM_RETDIS_SAL = S.SUM_RETDIS_SAL,

	COUNT_CHEQUE_RET = ISNULL(R.COUNT_CHEQUE_RET, 0),
	QUANTITY_RET = ISNULL(R.QUANTITY_RET, 0),
	SUM_SUP_RET = ISNULL(R.SUM_SUP_RET, 0),
	SUM_RET_RET = ISNULL(R.SUM_RET_RET, 0),
	SUM_DIS_RET = ISNULL(R.SUM_DIS_RET, 0),
	SUM_RETDIS_RET = ISNULL(R.SUM_RETDIS_RET, 0),
	DATE_OP = S.DATE_OP
	
FROM
(
SELECT	
	CASHIER = CH.ID_USER_DATA,
	CASHIER_NAME = U.FULL_NAME,
	CASH_REGISTER = CR.ID_CASH_REGISTER,
	NAME_CASH_REGISTER = CR.NAME_CASH_REGISTER,
	COUNT_CHEQUE_SAL = COUNT(DISTINCT(CONVERT(CHAR(36), CH.ID_CHEQUE_GLOBAL))),
	QUANTITY_SAL = SUM(CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END),
	SUM_SUP_SAL = SUM(CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.QUANTITY * L.PRICE_SUP END),
	SUM_RET_SAL = SUM(CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN CHI.SUMM ELSE CHI.QUANTITY * CHI.PRICE END),
	SUM_DIS_SAL = SUM(CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.SUMM_DISCOUNT END),
	SUM_RETDIS_SAL = SUM(CHI.SUMM),
	DATE_OP = CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
FROM CASH_SESSION CS
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
	INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE_ITEM CHI ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON CHI.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
	LEFT JOIN LOT L ON CHI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	LEFT JOIN GOODS G ON CHI.ID_GOODS = G.ID_GOODS
	LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER	
WHERE CH.CHEQUE_TYPE IN ('SALE') AND CH.DOCUMENT_STATE = 'PROC'
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND (@ALL_CASHIER = 1 OR CH.ID_USER_DATA IN (SELECT * FROM #CASHIER))
	AND (@ALL_KKM = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #KKM))
	AND (@ALL_PRODUCER = 1 OR (P.ID_PRODUCER IS NULL OR P.ID_PRODUCER IN (SELECT * FROM #PRODUCER)))
	AND (@ALL_CONTRACTOR = 1 OR (C.ID_CONTRACTOR IS NULL OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR)))
	AND (@ALL_GOODS = 1 OR (G.ID_GOODS IS NULL OR G.ID_GOODS IN (SELECT * FROM #GOODS)))
GROUP BY CH.ID_USER_DATA, U.FULL_NAME, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER, CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
) AS S

LEFT JOIN

(
SELECT	
	CASHIER = CH.ID_USER_DATA,
	CASHIER_NAME = U.FULL_NAME,
	CASH_REGISTER = CR.ID_CASH_REGISTER,
	NAME_CASH_REGISTER = CR.NAME_CASH_REGISTER,
	COUNT_CHEQUE_RET = COUNT(DISTINCT(CONVERT(CHAR(36), CH.ID_CHEQUE_GLOBAL))),
	QUANTITY_RET = SUM(CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END),
	SUM_SUP_RET = SUM(CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.QUANTITY * L.PRICE_SUP END),
	SUM_RET_RET = SUM(CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN CHI.SUMM ELSE CHI.QUANTITY * CHI.PRICE END),
	SUM_DIS_RET = SUM(CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.SUMM_DISCOUNT END),
	SUM_RETDIS_RET = SUM(CHI.SUMM),
	DATE_OP = CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
FROM CASH_SESSION CS
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
	INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE_ITEM CHI ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON CHI.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
	LEFT JOIN LOT L ON CHI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	LEFT JOIN GOODS G ON CHI.ID_GOODS = G.ID_GOODS
	LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
WHERE CH.CHEQUE_TYPE IN ('RETURN') AND CH.DOCUMENT_STATE = 'PROC'
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND (@ALL_CASHIER = 1 OR CH.ID_USER_DATA IN (SELECT * FROM #CASHIER))
	AND (@ALL_KKM = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #KKM))
	AND (@ALL_PRODUCER = 1 OR (P.ID_PRODUCER IS NULL OR P.ID_PRODUCER IN (SELECT * FROM #PRODUCER)))
	AND (@ALL_CONTRACTOR = 1 OR (C.ID_CONTRACTOR IS NULL OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR)))
	AND (@ALL_GOODS = 1 OR (G.ID_GOODS IS NULL OR G.ID_GOODS IN (SELECT * FROM #GOODS)))
GROUP BY CH.ID_USER_DATA, U.FULL_NAME, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER, CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
) AS R ON S.DATE_OP = R.DATE_OP AND S.CASHIER = R.CASHIER AND S.CASH_REGISTER = R.CASH_REGISTER
ORDER BY S.CASHIER_NAME, S.NAME_CASH_REGISTER, S.DATE_OP

IF (@DETAIL = 1)
BEGIN
SELECT		
	CASHIER = CH.ID_USER_DATA,
	CASHIER_NAME = U.FULL_NAME,
	CASH_REGISTER = CR.ID_CASH_REGISTER,
	CASH_REGISTER_NAME = CR.NAME_CASH_REGISTER,

	COUNT_CHEQUE_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE 0 END),
	QUANTITY_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END ELSE 0 END),
	SUM_SUP_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.QUANTITY * L.PRICE_SUP END ELSE 0 END),
	SUM_RET_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN CHI.SUMM ELSE CHI.QUANTITY * CHI.PRICE END ELSE 0 END),
	SUM_DIS_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.SUMM_DISCOUNT END ELSE 0 END),
	SUM_RETDIS_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CHI.SUMM ELSE 0 END),

	COUNT_CHEQUE_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN 1 ELSE 0 END),
	QUANTITY_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CHI.QUANTITY * CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END ELSE 0 END),
	SUM_SUP_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.QUANTITY * L.PRICE_SUP END ELSE 0 END),
	SUM_RET_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN CHI.SUMM ELSE CHI.QUANTITY * CHI.PRICE END ELSE 0 END),
	SUM_DIS_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CASE WHEN L.ID_LOT_GLOBAL IS NULL THEN 0 ELSE CHI.SUMM_DISCOUNT END ELSE 0 END),
	SUM_RETDIS_RET = SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN CHI.SUMM ELSE 0 END),

	GOODS_NAME = MAX(CASE WHEN L.ID_LOT_GLOBAL IS NULL 
					THEN '”ÒÎÛ„‡: ' + S4S.NAME
					ELSE '“Ó‚‡: ' + G.[NAME] + '; »«√Œ“Œ¬»“≈À‹: ' + ISNULL(P.[NAME], '') + '; œŒ—“¿¬Ÿ» : ' + ISNULL(C.[NAME], '')
				END),	
	DATE_OP = CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME),
	G_CODE = max(G.CODE)
FROM CASH_SESSION CS
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
	INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE_ITEM CHI ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	LEFT JOIN SCALING_RATIO SR ON CHI.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
	LEFT JOIN LOT L ON CHI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	LEFT JOIN GOODS G ON CHI.ID_GOODS = G.ID_GOODS
	LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
	LEFT JOIN SERVICE_4_SALE S4S ON S4S.ID_SERVICE_4_SALE = CHI.ID_LOT_GLOBAL
WHERE CH.CHEQUE_TYPE IN ('SALE', 'RETURN') AND CH.DOCUMENT_STATE = 'PROC'
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND (@ALL_CASHIER = 1 OR CH.ID_USER_DATA IN (SELECT * FROM #CASHIER))
	AND (@ALL_KKM = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #KKM))
	AND (@ALL_PRODUCER = 1 OR (P.ID_PRODUCER IS NULL OR P.ID_PRODUCER IN (SELECT * FROM #PRODUCER)))
	AND (@ALL_CONTRACTOR = 1 OR (C.ID_CONTRACTOR IS NULL OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR)))
	AND (@ALL_GOODS = 1 OR (G.ID_GOODS IS NULL OR G.ID_GOODS IN (SELECT * FROM #GOODS)))
GROUP BY CH.ID_USER_DATA, U.FULL_NAME, CR.ID_CASH_REGISTER, CR.NAME_CASH_REGISTER,
 		CASE WHEN L.ID_LOT_GLOBAL IS NULL 
			THEN S4S.ID_SERVICE_4_SALE
			ELSE G.ID_GOODS_GLOBAL
		END,
		CAST(CONVERT(VARCHAR(8), CH.DATE_CHEQUE, 112) AS DATETIME)
ORDER BY MAX(CASE WHEN L.ID_LOT_GLOBAL IS NULL 
				THEN S4S.NAME
				ELSE G.[NAME]
			END)
END
ELSE
BEGIN

SELECT
	CASHIER = NULL,
	CASHIER_NAME = NULL,
	CASH_REGISTER = NULL,
	CASH_REGISTER_NAME = NULL,

	COUNT_CHEQUE_SAL = NULL,
	QUANTITY_SAL = NULL,
	SUM_SUP_SAL = NULL,
	SUM_RET_SAL = NULL,
	SUM_DIS_SAL = NULL,
	SUM_RETDIS_SAL = NULL,

	COUNT_CHEQUE_RET = NULL,
	QUANTITY_RET = NULL,
	SUM_SUP_RET = NULL,
	SUM_RET_RET = NULL,
	SUM_DIS_RET = NULL,
	SUM_RETDIS_RET = NULL,

	GOODS_NAME = NULL,	
	DATE_OP = NULL,
	G_CODE = NULL
END 

select count(distinct convert(char(8), date_close, 112)) as PERIOD_DAYS
from cash_session 
where date_close between @date_fr and @date_to

RETURN 0
GO

/*
EXEC REPEX_CASH_SERVICE N'
<XML>
	<DATE_FR>2009-06-26T00:00:00.000</DATE_FR>
	<DATE_TO>2009-06-29T00:00:00.000</DATE_TO>
	<DETAIL>0</DETAIL>
</XML>'*/