SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.REPEX_ECONOMIC_ACTIVITIES_SIMPLEX') IS NULL) EXEC ('CREATE PROCEDURE DBO.REPEX_ECONOMIC_ACTIVITIES_SIMPLEX AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_ECONOMIC_ACTIVITIES_SIMPLEX
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ID_CONTRACTOR BIGINT
declare @stores table (id_store bigint)

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
SELECT
    @DATE_FR = DATE_FR,
    @DATE_TO = DATE_TO,
    @ID_CONTRACTOR  = ID_CONTRACTOR
FROM OPENXML(@HDOC, '/XML', 2) WITH(
    DATE_FR DATETIME,
    DATE_TO DATETIME,
    ID_CONTRACTOR BIGINT
)

insert into @stores
SELECT x.id_store
from store s
inner join OPENXML(@HDOC, '//XML/ID_STORE', 2) WITH (ID_STORE BIGINT '.') x on x.id_store = s.id_store where s.id_contractor = @id_contractor
IF (@@ROWCOUNT = 0)
BEGIN
	insert into @stores
	Select id_Store from store where id_contractor = @id_contractor
END

--select * from @stores

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT

DECLARE @TEMP_T TABLE(
	DATE_OP DATETIME,
	SUM_SUP_INVOICE MONEY
)

DECLARE @TEMP_DATE DATETIME
DECLARE @SUM_SUP_INVOICE MONEY

SET @TEMP_DATE = @DATE_FR

WHILE @TEMP_DATE <= CAST(CONVERT(VARCHAR(8), @DATE_TO, 112) AS DATETIME)
BEGIN

SELECT
	@SUM_SUP_INVOICE = SUM(DM.SUM_SUP)
FROM DOC_MOVEMENT DM
WHERE
	DM.ID_TABLE = 2
	AND DM.DATE_OP BETWEEN @TEMP_DATE AND @TEMP_DATE + 1
	AND ID_STORE IN (select id_store from @stores)

INSERT INTO @TEMP_T (DATE_OP, SUM_SUP_INVOICE)
SELECT DATE_OP = @TEMP_DATE, SUM_SUP_INVOICE = @SUM_SUP_INVOICE

SET @TEMP_DATE = @TEMP_DATE + 1

END

SELECT
	DATE_OP = T1.DATE_OP,
	SUM_SUP_INVOICE = ISNULL(T1.SUM_SUP_INVOICE, 0),
	SUM_SUP = ISNULL(T2.SUM_SUP_CH, 0) + ISNULL(T3.SUM_SUP_I, 0),
	SUM_SAL = ISNULL(T2.SUM_SAL_CH, 0) + ISNULL(T3.SUM_SAL_I, 0),
	COUNT_CH = ISNULL(T2.COUNT_CH, 0),
	COUNT_I = ISNULL(T3.COUNT_I, 0),
	AVG_CH = CASE WHEN ISNULL(T2.COUNT_CH, 0) = 0 THEN 0 ELSE T2.SUM_SAL_CH / T2.COUNT_CH END,
	AVG_I = CASE WHEN ISNULL(T3.COUNT_I, 0) = 0 THEN 0 ELSE T3.SUM_SAL_I / T3.COUNT_I END,
	TORG_N = CASE WHEN ISNULL(T2.SUM_SUP_CH, 0) + ISNULL(T3.SUM_SUP_I, 0) = 0 THEN NULL ELSE (ISNULL(T2.SUM_SAL_CH, 0) + ISNULL(T3.SUM_SAL_I, 0)) * 100 / (ISNULL(T2.SUM_SUP_CH, 0) + ISNULL(T3.SUM_SUP_I, 0)) - 100 END,
	SUM_SAL_CH = ISNULL(T2.SUM_SAL_CH, 0),
	SUM_SAL_I = ISNULL(T3.SUM_SAL_I, 0)
FROM @TEMP_T T1
	LEFT JOIN
(
SELECT
	DATE_OP = CHEQUE_DAY,
	SUM_SUP_CH = SUM((CASE WHEN CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END) * SUM_SUP),
	SUM_SAL_CH = SUM((CASE WHEN CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END) * SUM_SAL),
	COUNT_CH = SUM((CASE WHEN CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END) * CHEQUE_COUNT)
FROM CASH_SESSION_CHEQUE_SUM
WHERE ID_STORE IN (select id_store from @stores)
    AND CHEQUE_DAY BETWEEN @DATE_FR AND @DATE_TO
    AND CHEQUE_TYPE IN ('SALE', 'RETURN')
    AND CHEQUE_STATE = 'PROC'
GROUP BY CHEQUE_DAY
) T2 ON T1.DATE_OP = T2.DATE_OP

LEFT JOIN

(
SELECT
	DATE_OP = CAST(CONVERT(VARCHAR(8), I.DATE, 112) AS DATETIME),
	SUM_SUP_I = SUM(I.SUM_SUP),
	SUM_SAL_I = SUM(I.SUM_SAL),
	COUNT_I = COUNT(*)
FROM INVOICE_OUT I
WHERE I.DATE BETWEEN @DATE_FR AND @DATE_TO
	AND I.ID_STORE IN (select id_store from @stores)
	AND I.STATE = 'PROC'
GROUP BY CAST(CONVERT(VARCHAR(8), I.DATE, 112) AS DATETIME)
) T3 ON T1.DATE_OP = T3.DATE_OP

SELECT
    [DATE] = @DATE_FR,
    SUM_SUP = SUM(SUM_SUP * SIGN_OP),    
    SUM_SAL = SUM(CASE WHEN CODE_OP='DIS' THEN SUM_ACC * -1 ELSE SUM_ACC * SIGN_OP END)
FROM DOC_MOVEMENT DM 
WHERE DATE_OP < @DATE_FR
	AND DM.ID_STORE in (select id_store from @stores)

SELECT
    [DATE] = @DATE_FR,
    SUM_SUP = SUM(SUM_SUP * SIGN_OP),    
    SUM_SAL = SUM(CASE WHEN CODE_OP='DIS' THEN SUM_ACC * -1 ELSE SUM_ACC * SIGN_OP END)
FROM DOC_MOVEMENT DM 
WHERE DATE_OP < @DATE_TO
	AND DM.ID_STORE in (select id_store from @stores)

RETURN 
GO 

/*
EXEC REPEX_ECONOMIC_ACTIVITIES_SIMPLEX N'
<XML>
	<DATE_FR>2009-07-03T00:00:00.000</DATE_FR>
	<DATE_TO>2009-07-16T18:33:57.968</DATE_TO>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<ID_STORE>152</ID_STORE>
</XML>'*/


