SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.FN_CERT_LIST_4_REPEX_INVOICE_OUT_EKATERINBURG') IS NULL)	EXEC ('CREATE FUNCTION DBO.FN_CERT_LIST_4_REPEX_INVOICE_OUT_EKATERINBURG() RETURNS VARCHAR(4000) AS BEGIN RETURN CONVERT(VARCHAR(4000), NULL) END')
GO
ALTER FUNCTION DBO.FN_CERT_LIST_4_REPEX_INVOICE_OUT_EKATERINBURG(
    @ID_SERIES BIGINT
)
RETURNS VARCHAR(4000)
AS
BEGIN
    DECLARE @RESULT VARCHAR(4000)
    SELECT 
        @RESULT = ISNULL(@RESULT + ' ;' + C.CERT_NUMBER, ISNULL(C.CERT_NUMBER, ''))
    FROM CERTIFICATE C
    WHERE ID_SERIES = @ID_SERIES
    RETURN @RESULT
END
GO

IF OBJECT_ID('REPEX_INVOICE_OUT_EKATERINBURG') IS NULL EXEC('CREATE PROCEDURE REPEX_INVOICE_OUT_EKATERINBURG AS RETURN')
GO
ALTER PROCEDURE REPEX_INVOICE_OUT_EKATERINBURG
	@XMLPARAM NTEXT
AS

DECLARE @HDOC INT, @ID_INVOICE_OUT_GLOBAL UNIQUEIDENTIFIER

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @ID_INVOICE_OUT_GLOBAL = ID_INVOICE_OUT_GLOBAL
	FROM OPENXML(@HDOC, '/XML') WITH(ID_INVOICE_OUT_GLOBAL UNIQUEIDENTIFIER 'ID_INVOICE_OUT_GLOBAL')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT
	GOODS_NAME = G.NAME + ' [' + P.NAME + ', ' + COALESCE(C.NAME, '') + ']',
	QUANTITY = II.QUANTITY,
	CONTRACTOR_PRICE_PER_UNIT = ROUND(L.PRICE_SUP - L.PVAT_SUP, 2),
	CONTRACTOR_PRICE_PER_UNIT_VAT = ROUND(L.PRICE_SUP, 2) ,
	CONTRACTOR_SUM_VAT = II.QUANTITY * L.PRICE_SUP,
	SCALING_RATIO_NAME = CAST(SR.NUMERATOR AS VARCHAR) + '/' + CAST(SR.DENOMINATOR AS VARCHAR) + ' ' +U.NAME,
	VAT_RATE = L.VAT_SAL,
	VAT_DISCOUNT = II.VAT_DISCOUNT,
	SUM_DISCOUNT = II.SUM_DISCOUNT,
	RETAIL_VAT_SUM = II.PSUM_SAL,
	RETAIL_PRICE = L.PRICE_SAL,
	RETAIL_SUM = II.SUM_SAL,
	SERIES_NUMBER = S.SERIES_NUMBER,
	BEST_BEFORE = S.BEST_BEFORE,
	REG_CERT_NAME = RC.[NAME],
	FED_CERT_NAME = DBO.FN_CERT_LIST_4_REPEX_INVOICE_OUT_EKATERINBURG(S.ID_SERIES)
FROM DBO.INVOICE_OUT I
	INNER JOIN DBO.INVOICE_OUT_ITEM AS II ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
	INNER JOIN DBO.LOT AS L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
	INNER JOIN SCALING_RATIO AS SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	INNER JOIN UNIT AS U ON U.ID_UNIT = SR.ID_UNIT
	INNER JOIN DBO.GOODS AS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN DBO.PRODUCER AS P ON P.ID_PRODUCER = G.ID_PRODUCER
	LEFT JOIN DBO.COUNTRY AS C ON C.ID_COUNTRY = P.ID_COUNTRY
	LEFT JOIN SERIES AS S ON S.ID_SERIES = L.ID_SERIES
	LEFT JOIN REG_CERT AS RC ON L.ID_REG_CERT_GLOBAL = RC.ID_REG_CERT_GLOBAL
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_INVOICE_OUT_GLOBAL
ORDER BY GOODS_NAME

SELECT TOP 1
    INVOICE_NUMBER = I.MNEMOCODE,
    INVOICE_DATE = I.DATE,
    INCOMING_NUMBER =
        COALESCE(INPUT.MNEMOCODE, M.MNEMOCODE, '') +
        COALESCE(' îò ' + CONVERT(VARCHAR, INPUT.DOCUMENT_DATE, 104), ' îò ' + CONVERT(VARCHAR, M.DATE, 104), ''),
    CUSTOMER_NAME = CASE WHEN ISNULL(PAY.FULL_NAME, '') != '' THEN PAY.FULL_NAME ELSE PAY.NAME END,
    CUSTOMER_ADDRESS = CASE WHEN ISNULL(PAY.ADDRESS, '') != '' THEN ' Àäðåñ:'+ PAY.ADDRESS ELSE '' END,
    SUPPLIER_NAME =
        CASE WHEN ISNULL(SUP.FULL_NAME, '') != '' THEN SUP.FULL_NAME ELSE SUP.NAME END +
        CASE WHEN ISNULL(SUP.INN, '') != '' THEN ' ÈÍÍ:' + SUP.INN ELSE '' END,
    STORE_NAME = S.NAME,
    COMPANY =
        CASE WHEN ISNULL(PAY.FULL_NAME, '') != '' THEN PAY.FULL_NAME ELSE PAY.NAME END +
        CASE WHEN ISNULL(PAY.INN, '') != '' THEN ' ÈÍÍ:' + PAY.INN ELSE '' END
FROM DBO.INVOICE_OUT I
    INNER JOIN DBO.STORE S ON S.ID_STORE = I.ID_STORE 
    INNER JOIN DBO.CONTRACTOR SUP ON SUP.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN DBO.CONTRACTOR PAY ON PAY.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
    LEFT JOIN INVOICE INPUT ON INPUT.ID_INVOICE_GLOBAL = I.ID_DOC_BASE_GLOBAL
    LEFT JOIN MOVEMENT M ON M.ID_MOVEMENT_GLOBAL = I.ID_DOC_BASE_GLOBAL
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_INVOICE_OUT_GLOBAL

SELECT 
	CONTRACTOR_SUM = ROUND(I.SUM_SUP - SVAT_SUP, 2),
	CONTRACTOR_SUM_VAT = ROUND(I.SUM_SUP, 2),
	SUM_CONTRACTOR_VAT = ROUND(I.SVAT_SUP, 2),
	SUM_CONTRACTOR_VAT_10 = SUM(ROUND(CASE WHEN L.VAT_SUP = 10.0 THEN II.QUANTITY * L.PRICE_SUP ELSE 0.0 END, 2)),
	SUM_CONTRACTOR_VAT_18 = SUM(ROUND(CASE WHEN L.VAT_SUP = 18.0 THEN II.QUANTITY * L.PRICE_SUP ELSE 0.0 END, 2)),
	SUM_RETAIL_SUM = ROUND(I.SUM_SAL, 2),
	SUM_PROD_SUM = ROUND(I.SUM_SAL, 2),
	SUM_RETAIL_VAT_10 = SUM(ROUND(CASE WHEN L.VAT_SAL = 10.0 THEN II.SUM_SAL ELSE 0.0 END, 2)),
	SUM_RETAIL_VAT_18 = SUM(ROUND(CASE WHEN L.VAT_SAL = 18.0 THEN II.SUM_SAL ELSE 0.0 END, 2)),
	SUM_PROD_TAX = 0.00
FROM DBO.INVOICE_OUT I
    INNER JOIN DBO.INVOICE_OUT_ITEM II ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
    INNER JOIN DBO.LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
    INNER JOIN DBO.SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_INVOICE_OUT_GLOBAL
GROUP BY ROUND(I.SUM_SUP - SVAT_SUP, 2), ROUND(I.SUM_SUP, 2), ROUND(I.SVAT_SUP, 2), ROUND(I.SUM_SAL, 2)

SELECT
    VAT_SAL = L.VAT_SAL,
    PSUM_SAL = SUM(II.PSUM_SAL)
FROM DBO.INVOICE_OUT I
    INNER JOIN DBO.INVOICE_OUT_ITEM II ON II.ID_INVOICE_OUT_GLOBAL = I.ID_INVOICE_OUT_GLOBAL
    INNER JOIN DBO.LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
WHERE I.ID_INVOICE_OUT_GLOBAL = @ID_INVOICE_OUT_GLOBAL
GROUP BY L.VAT_SAL
ORDER BY L.VAT_SAL

RETURN 0
GO