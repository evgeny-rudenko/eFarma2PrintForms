SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF COL_LENGTH('CASH_SESSION', 'ID_USER_CLOSE_GLOBAL') IS NULL
    ALTER TABLE CASH_SESSION ADD ID_USER_CLOSE_GLOBAL UNIQUEIDENTIFIER NULL

IF (OBJECT_ID('DBO.REPEX_Z_REPORT') IS NULL) EXEC ('CREATE PROCEDURE DBO.REPEX_Z_REPORT AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_Z_REPORT
	(@XMLPARAM NTEXT) AS

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME,
	@DATE_TO DATETIME,
	@ALL_CONTRACTOR BIT,
	@ALL_CASH_REGISTER BIT,
	@DETAIL BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT TOP 1
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@DETAIL = DETAIL
FROM OPENXML(@HDOC, '/XML') WITH
	(DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO', 
	DETAIL BIT 'DETAIL')

SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTOR = 1
SELECT * INTO #CASH_REGISTER FROM OPENXML(@HDOC, '//ID_CASH_REGISTER') WITH(ID_CASH_REGISTER BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CASH_REGISTER = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

--SELECT @DATE_FR, @DATE_TO, @ALL_CASH_REGISTER, @ALL_CONTRACTOR
--SELECT @DETAIL

/*BEGIN ÂÐÅÌÅÍÍÀß ÒÀÁËÈÖÀ*/

SELECT 
	TPS.ID_CASH_SESSION_GLOBAL, 
	TPS.PAY_TYPE, 
	PAY_SUM = SUM(TPS.SUMM)
INTO #TMP1
FROM
(
SELECT 
	CS.ID_CASH_SESSION_GLOBAL, 
	PAY_TYPE = CP.SEPARATE_TYPE, 
	SUMM = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CP.SUMM WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1*CP.SUMM ELSE 0 END
FROM CASH_SESSION CS
	LEFT JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN CHEQUE_PAYMENT CP ON CH.ID_CHEQUE_GLOBAL = CP.ID_CHEQUE_GLOBAL
	LEFT JOIN CONTRACTOR C ON CR.ID_CONTRACTOR = C.ID_CONTRACTOR
	LEFT JOIN META_USER MU ON MU.ID_USER = CS.ID_USER_CLOSE_GLOBAL
WHERE CS.DATE_OPEN >= @DATE_FR AND CS.DATE_CLOSE <= @DATE_TO
  	AND	(@ALL_CASH_REGISTER = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #CASH_REGISTER))
  	AND	(@ALL_CONTRACTOR = 1 OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR))
  	AND CP.SEPARATE_TYPE IS NOT NULL
  	AND CH.DOCUMENT_STATE IN ('PROC')
--ORDER BY CS.ID_CASH_SESSION_GLOBAL, CH.ID_CHEQUE_GLOBAL
UNION ALL
SELECT 
	CS.ID_CASH_SESSION_GLOBAL, 
	PAY_TYPE = CP.TYPE_PAYMENT, 
	SUMM = CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN CP.SUMM WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1*CP.SUMM ELSE 0 END
FROM CASH_SESSION CS
	LEFT JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	INNER JOIN CHEQUE CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN CHEQUE_PAYMENT CP ON CH.ID_CHEQUE_GLOBAL = CP.ID_CHEQUE_GLOBAL
	LEFT JOIN CONTRACTOR C ON CR.ID_CONTRACTOR = C.ID_CONTRACTOR
	LEFT JOIN META_USER MU ON MU.ID_USER = CS.ID_USER_CLOSE_GLOBAL
WHERE CS.DATE_OPEN >= @DATE_FR AND CS.DATE_CLOSE <= @DATE_TO
  	AND	(@ALL_CASH_REGISTER = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #CASH_REGISTER))
  	AND	(@ALL_CONTRACTOR = 1 OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR))
  	AND CP.SEPARATE_TYPE IS NULL	
  	AND CH.DOCUMENT_STATE IN ('PROC')
) TPS
GROUP BY TPS.ID_CASH_SESSION_GLOBAL, TPS.PAY_TYPE
ORDER BY TPS.ID_CASH_SESSION_GLOBAL

CREATE INDEX I_TYPES_ID ON #TMP1(ID_CASH_SESSION_GLOBAL)
CREATE INDEX I_TYPES_TYPE ON #TMP1(PAY_TYPE)

/*END ÂÐÅÌÅÍÍÀß ÒÀÁËÈÖÀ*/

SELECT
	CS.ID_CASH_SESSION_GLOBAL,
	C.NAME AS CONTRACTOR_NAME,
	CR.NAME_CASH_REGISTER,
	CR.NUMBER_CASH_REGISTER,
 	CS.DATE_OPEN,
 	CS.DATE_CLOSE,
 	CS.SUM_PAYMENT,
 	CS.SUM_REQUISITIONING,
 	SUM_SALES = CS.SUM_SALES + CS.SUM_DISCOUNT,
 	CS.SUM_SALES_RETURNS,
 	CASH = CS.SUM_SALES - CS.SUM_SALES_RETURNS,
 	CS.SUM_DISCOUNT,
 	NAL = ISNULL(T1.PAY_SUM, 0),
 	BANKCARD = ISNULL(T2.PAY_SUM, 0), 
 	TRUSTLETTER = ISNULL(T4.PAY_SUM, 0), 
 	USER_CLOSE = MU.NAME
FROM CASH_SESSION CS
	LEFT JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	LEFT JOIN CONTRACTOR C ON CR.ID_CONTRACTOR = C.ID_CONTRACTOR
	LEFT JOIN META_USER MU ON MU.ID_USER = CS.ID_USER_CLOSE_GLOBAL
	LEFT JOIN #TMP1 T1 ON T1.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL AND T1.PAY_TYPE = 'TYPE1'
	LEFT JOIN #TMP1 T2 ON T2.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL AND T2.PAY_TYPE = 'TYPE2'
	LEFT JOIN #TMP1 T4 ON T4.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL AND T4.PAY_TYPE = 'TYPE4'
WHERE CS.DATE_OPEN >= @DATE_FR AND CS.DATE_CLOSE <= @DATE_TO
  	AND	(@ALL_CASH_REGISTER = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #CASH_REGISTER))
  	AND	(@ALL_CONTRACTOR = 1 OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR))
ORDER BY C.NAME, CR.NUMBER_CASH_REGISTER, CS.DATE_CLOSE
--compute sum(CS.SUM_SALES_CREDIT - CS.SUM_SALES_RETURNS_CREDIT)

IF (@DETAIL = 1)
BEGIN 

SELECT
	NUMBER_CASH_REGISTER = CR.NUMBER_CASH_REGISTER,
	NAME = 'Òèï ïëàò¸æíîé êàðòû: ' + CP.PAYMENT_TYPE_NAME,
	NOTNAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE 0 END * CP.SUMM)
FROM DBO.CHEQUE CH
	INNER JOIN DBO.CHEQUE_PAYMENT CP ON CH.ID_CHEQUE_GLOBAL = CP.ID_CHEQUE_GLOBAL
	INNER JOIN DBO.CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	LEFT JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	LEFT JOIN CONTRACTOR C ON CR.ID_CONTRACTOR = C.ID_CONTRACTOR
WHERE CS.DATE_OPEN >= @DATE_FR AND CS.DATE_CLOSE <= @DATE_TO
	AND ISNULL(CP.CARD_NUMBER, '') != ''
	AND NOT EXISTS (SELECT * FROM CHEQUE WHERE ID_DOCUMENT_BASE_GLOBAL = CH.ID_CHEQUE_GLOBAL)
	AND	(@ALL_CASH_REGISTER = 1 OR CS.ID_CASH_REGISTER IN (SELECT * FROM #CASH_REGISTER))
  	AND	(@ALL_CONTRACTOR = 1 OR C.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTOR))  	
GROUP BY CR.NUMBER_CASH_REGISTER, 'Òèï ïëàò¸æíîé êàðòû: ' + CP.PAYMENT_TYPE_NAME
--compute sum(sum(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE 0 END * CP.SUMM))

END

RETURN 0
GO


/*
EXEC DBO.REPEX_Z_REPORT N'
<XML>
	<DATE_FR>2010-05-01T13:18:27.750</DATE_FR>
	<DATE_TO>2010-06-01T13:18:27.750</DATE_TO>
	<DETAIL>1</DETAIL>
</XML>'*/