IF (OBJECT_ID('REP_PRIHOD_KALININGRAD') IS NULL) 
    EXEC ('CREATE PROCEDURE REP_PRIHOD_KALININGRAD AS RETURN')
GO
ALTER PROCEDURE REP_PRIHOD_KALININGRAD(
	@XMLPARAM NTEXT)
AS
DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME

DECLARE @HDOC INT, @ERROR INT, @ROWCOUNT INT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM
    SELECT TOP 1 * INTO #PARAMS FROM OPENXML(@HDOC, '//XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT @DATE_FROM = DATE_FR, @DATE_TO = DATE_TO FROM #PARAMS
EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT

SELECT DISTINCT
	G.ID_GOODS,
	GOODS_NAME = G.[NAME],
	CODE = G.CODE,
	CODE_1C = GC.CODE,
	PRIHOD = CONVERT(INT, NULL)	
INTO #RESULT
FROM
	GOODS G
	LEFT JOIN GOODS_CODE GC ON GC.ID_GOODS = G.ID_GOODS
	LEFT JOIN GOODS_KIND GK ON GK.ID_GOODS_KIND = G.ID_GOODS_KIND

UPDATE #RESULT SET PRIHOD = T.PRIHOD
FROM
(
SELECT SUM(LM.QUANTITY_ADD) AS PRIHOD,
	L.ID_GOODS
FROM
	LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN INVOICE I ON I.ID_INVOICE_GLOBAL = LM.ID_DOCUMENT
WHERE I.DOCUMENT_DATE BETWEEN @DATE_FROM AND @DATE_TO AND I.DOCUMENT_STATE = 'PROC'
GROUP BY L.ID_GOODS
) T, #RESULT
WHERE T.ID_GOODS = #RESULT.ID_GOODS


SELECT * FROM #RESULT WHERE PRIHOD IS NOT NULL
ORDER BY GOODS_NAME

RETURN 0
GO
