IF (OBJECT_ID('REP_OBOROT_SALDO_MOVEMENT_FACT_SEBESTIOMOST') IS NULL) 
    EXEC ('CREATE PROCEDURE REP_OBOROT_SALDO_MOVEMENT_FACT_SEBESTIOMOST AS RETURN')
GO
ALTER PROCEDURE REP_OBOROT_SALDO_MOVEMENT_FACT_SEBESTIOMOST(
	@XMLPARAM NTEXT)
AS
DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
--DECLARE @ENVD BIT
DECLARE @ID_CONTRACTOR_STU BIGINT
DECLARE @NOAU BIT
DECLARE @ALL_STORE BIT

SELECT TOP 1 @ID_CONTRACTOR_STU = ID_CONTRACTOR FROM CONTRACTOR WHERE [NAME] = 'СТУ' AND DATE_DELETED IS NULL

DECLARE @HDOC INT, @ERROR INT, @ROWCOUNT INT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM
SELECT TOP 1 * INTO #PARAMS FROM OPENXML(@HDOC, '//XML') WITH(
    DATE_FR DATETIME 'DATE_FR',
    DATE_TO DATETIME 'DATE_TO',
--ENVD BIT 'ENVD',
NOAU BIT 'NOAU')

SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//XML/GOODS') WITH(
    ID_GOODS BIGINT 'ID_GOODS')


/*
SELECT * INTO #STORE FROM OPENXML(@HDOC, '//XML/STORE') WITH(
    ID_STORE BIGINT 'ID_STORE')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORE = 1
*/


SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR INTO #STORE
FROM
	(SELECT * FROM OPENXML(@HDOC, '//XML/STORE') 
    WITH(ID_STORE BIGINT 'ID_STORE')) TAB
INNER JOIN STORE S ON S.ID_STORE = TAB.ID_STORE

--//////////////
--select * from #STORE

--select * from store
--////////////
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT @DATE_FROM = DATE_FR, @DATE_TO = DATE_TO, /*@ENVD = ENVD,*/ @NOAU = NOAU FROM #PARAMS

EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
--select @date_from, @date_to
SELECT 
	--LM.*, 
	LM.ID_DOCUMENT,
	LM.QUANTITY_ADD,
	LM.QUANTITY_SUB,
	SUM_ACC=LM.SUM_ACC+lm.DISCOUNT_ACC,
	LM.DATE_OP,
	LM.CODE_OP,
	LM.SVAT_SUP,
	LM.ID_TABLE,
	
	--LM.SUM_SUP,
	L.PRICE_SUP,
	L.PRICE_SAL,
	L.PVAT_SUP,
	L.ID_STORE, 
	L.ID_GOODS,
	L.ID_SUPPLIER,
	S.ID_CONTRACTOR,
	SUM_SUP_VAT = CASE WHEN CT.USE_VAT = 1 THEN SUM_SUP - SVAT_SUP ELSE SUM_SUP END,
	CONVERT(MONEY, NULL) AS SUM_SALDO,
	CONVERT(MONEY, NULL) AS SUM_SALDO_R,
	CONVERT(DATETIME, NULL) AS DATE_CLOSE
	,SUM_SUP = ISNULL(LM.SUM_SUP,0)
INTO #LM
FROM LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
	INNER JOIN CONTRACTOR CT ON S.ID_CONTRACTOR = CT.ID_CONTRACTOR
WHERE ISNULL(LM.QUANTITY_RES, 0) = 0
and L.ID_STORE in (select ID_STORE from #STORE)
--select * from #lm

UPDATE #LM SET DATE_CLOSE = CS.DATE_CLOSE
FROM CASH_SESSION CS, #LM
WHERE #LM.ID_DOCUMENT = CS.ID_CASH_SESSION_GLOBAL

--IF (ISNULL(@ENVD, 0) = 0)
	UPDATE #LM SET
		--SUM_SUP_VAT = SUM_SUP - SVAT_SUP,
		SUM_SALDO = (SIGN(QUANTITY_ADD) - SIGN(QUANTITY_SUB)) * SUM_SUP_VAT,
		SUM_SALDO_R = (SIGN(QUANTITY_ADD) - SIGN(QUANTITY_SUB)) * SUM_ACC
	
		--SUM_SALDO = (QUANTITY_ADD - QUANTITY_SUB) * (PRICE_SUP - PVAT_SUP)
--ELSE
--	UPDATE #LM SET 
--		SUM_SUP_VAT = SUM_SUP,
--		SUM_SALDO = (SIGN(QUANTITY_ADD) - SIGN(QUANTITY_SUB)) * SUM_SUP
		

IF (SELECT COUNT(*) FROM #STORE) > 0
BEGIN
	DELETE FROM #LM WHERE ID_STORE NOT IN (SELECT ID_STORE FROM #STORE)
END

IF (SELECT COUNT(*) FROM #GOODS) > 0
BEGIN
	DELETE FROM #LM WHERE ID_GOODS NOT IN (SELECT ID_GOODS FROM #GOODS)
END


SELECT id_store, id_contractor INTO #STORES_EX FROM #STORE
insert into #stores_ex
select id_store, id_contractor from store where id_contractor not in (select id_contractor from #store)
--select * from #stores_ex

DECLARE @RESULT TABLE(
	[COUNT] [BIGINT] IDENTITY (1, 1),
	ID_CONTRACTOR BIGINT,
	SALDO_DATE_START MONEY,
	SALDO_DATE_END MONEY,
	SALDO_DATE_END_R MONEY,
	INVOICE_DEBET MONEY,
	NDS_INVOICE_DEBET MONEY,
	RETURN_BUYER_DEBET MONEY,
	MOVEMENT_DEBET MONEY,
	IZLISHKI_DEBET MONEY,
	DIS_REVAL_DEBET MONEY,
	TOTAL_DEBET MONEY,
	
	COST_CREDIT MONEY,
	COST_WITH_NDS_CREDIT MONEY,
	RETURN_SUPPLIER_CRETID MONEY,
	RETURN_SUPPLIER_BACK MONEY,
	NEDOSTACHI_CREDIT MONEY,
	SPISANIYA_CREDIT MONEY,
	MOVEMENT_CREDIT MONEY,
	DIS_REVAL_CREDIT MONEY,
	TOTAL_CREDIT MONEY,
	CASH_SUM MONEY
)

INSERT INTO @RESULT (ID_CONTRACTOR) SELECT DISTINCT ID_CONTRACTOR FROM #LM

-- 3
-- Сальдо для всех документов кроме чеков продаж
UPDATE @RESULT SET SALDO_DATE_START = T.VALUE
FROM 
(
SELECT SUM(SUM_SALDO) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP <= @DATE_FROM --AND DATE_CLOSE IS NULL
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

/*
UPDATE @RESULT SET SALDO_DATE_START = ISNULL(SALDO_DATE_START, 0) + ISNULL(T.VALUE, 0)
FROM 
(
SELECT SUM(SUM_SALDO) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_CLOSE <= @DATE_FROM AND DATE_CLOSE IS NOT NULL
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR
*/
UPDATE @RESULT SET SALDO_DATE_START = ISNULL(SALDO_DATE_START, 0) + ISNULL(T.VALUE, 0)
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND ((CODE_OP = 'INVOICE' AND ID_SUPPLIER = @ID_CONTRACTOR_STU) OR CODE_OP = 'IMPORT_REMAINS')
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- 16
-- Сальдо для всех документов кроме чеков продаж
UPDATE @RESULT SET SALDO_DATE_END = T.VALUE
FROM 
(
SELECT SUM(SUM_SALDO) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP <= @DATE_TO AND DATE_CLOSE IS NULL

GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

UPDATE @RESULT SET SALDO_DATE_END = ISNULL(SALDO_DATE_END, 0) + ISNULL(T.VALUE, 0)
FROM 
(
SELECT SUM(SUM_SALDO) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_CLOSE <= @DATE_TO AND DATE_CLOSE IS NOT NULL
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

--19
--
UPDATE @RESULT SET SALDO_DATE_END_R = T.VALUE
FROM 
(
SELECT SUM(SUM_SALDO_R) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP <= @DATE_TO --AND DATE_CLOSE IS NULL

GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR
/*
UPDATE @RESULT SET SALDO_DATE_END_R = ISNULL(SALDO_DATE_END_R, 0) + ISNULL(T.VALUE, 0)
FROM 
(
SELECT SUM(SUM_SALDO_R) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_CLOSE <= @DATE_TO AND DATE_CLOSE IS NOT NULL
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR
*/
-- 4
UPDATE @RESULT SET INVOICE_DEBET = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND CODE_OP = 'INVOICE' AND (ID_SUPPLIER <> @ID_CONTRACTOR_STU OR @ID_CONTRACTOR_STU IS NULL)
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- 4a
--IF (ISNULL(@ENVD, 0) = 0)
BEGIN
	UPDATE @RESULT SET NDS_INVOICE_DEBET = T.VALUE
	FROM 
	(
	SELECT SUM(SVAT_SUP) AS VALUE, ID_CONTRACTOR
	FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO AND 
		CODE_OP = 'INVOICE' AND (ID_SUPPLIER <> @ID_CONTRACTOR_STU OR @ID_CONTRACTOR_STU IS NULL)
	GROUP BY ID_CONTRACTOR
	) T, @RESULT R
	WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR
END

-- Считаем акты возврата от покупателя
UPDATE @RESULT SET RETURN_BUYER_DEBET = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_CLOSE IS NULL AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO
	AND CODE_OP = 'ACT_R2B' /*OR (CODE_OP = 'CHEQUE' AND QUANTITY_SUB < 0)*/
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- Считаем чеки возврата
UPDATE @RESULT SET RETURN_BUYER_DEBET = ISNULL(RETURN_BUYER_DEBET, 0) + ISNULL(T.VALUE, 0)
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_CLOSE IS NOT NULL AND DATE_CLOSE BETWEEN @DATE_FROM AND @DATE_TO
	AND(CODE_OP = 'CHEQUE' AND QUANTITY_SUB < 0)
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR
--select * from #lm l INNER JOIN MOVEMENT M ON M.ID_MOVEMENT_GLOBAL = L.ID_DOCUMENT
--select * from #lm order by code_op
--select * from #store
-- 6
--select * from #lm where code_op = 'MOVE' and date_op between @date_from and @date_to
--select * from #lm where code_op = 'MOVE' and date_op between @date_from and @date_to and quantity_add > 0 and id_contractor = 5271
--select @noau
--set @noau = 1
UPDATE @RESULT SET MOVEMENT_DEBET = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, L.ID_CONTRACTOR
FROM #LM L
	LEFT JOIN MOVEMENT M ON M.ID_MOVEMENT_GLOBAL = L.ID_DOCUMENT
	LEFT JOIN STORE S_FR ON S_FR.ID_STORE = M.ID_STORE_FROM
	LEFT JOIN STORE S_TO ON S_TO.ID_STORE = M.ID_STORE_TO
WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND CODE_OP = 'MOVE' AND QUANTITY_ADD > 0 AND (@NOAU = 1 OR ID_TABLE = 38 OR (ID_TABLE = 8 AND S_FR.id_store not in (select id_store from #stores_ex where id_contractor = S_TO.id_contractor)))
GROUP BY L.ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR 

-- 7
UPDATE @RESULT SET IZLISHKI_DEBET = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND CODE_OP = 'INVENTORY_SVED' AND ISNULL(QUANTITY_ADD, 0) > 0
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

UPDATE @RESULT SET DIS_REVAL_DEBET = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND (CODE_OP = 'ACT_REV' OR CODE_OP = 'DIS') AND ISNULL(QUANTITY_ADD, 0) > 0
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- 8
UPDATE @RESULT SET TOTAL_DEBET = ISNULL(INVOICE_DEBET, 0) + ISNULL(RETURN_BUYER_DEBET, 0) + ISNULL(MOVEMENT_DEBET, 0) 
	+ ISNULL(IZLISHKI_DEBET, 0) + ISNULL(DIS_REVAL_DEBET, 0)

-- 9, (11)
UPDATE @RESULT SET COST_CREDIT = T.VALUE, COST_WITH_NDS_CREDIT = T.VALUE2
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR, isnull(SUM(#LM.SUM_SUP),0) AS VALUE2
FROM #LM 
INNER JOIN INVOICE_OUT INV_OUT ON INV_OUT.ID_INVOICE_OUT_GLOBAL = #LM.ID_DOCUMENT
WHERE DATE_CLOSE IS NULL AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO AND ISNULL(INV_OUT.IS_SUPPLIER, 1) = 0
	AND CODE_OP = 'INVOICE_OUT'
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- Считаем чеки продажи
UPDATE @RESULT SET COST_CREDIT = ISNULL(COST_CREDIT, 0) + ISNULL(T.VALUE, 0), COST_WITH_NDS_CREDIT = ISNULL(COST_WITH_NDS_CREDIT, 0) + ISNULL(T.VALUE2, 0)
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR, isnull(SUM(#LM.SUM_SUP),0) AS VALUE2
FROM #LM WHERE DATE_CLOSE IS NOT NULL AND DATE_CLOSE BETWEEN @DATE_FROM AND @DATE_TO
	AND(CODE_OP = 'CHEQUE' AND QUANTITY_SUB > 0)
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR
------------------------------------------------------------
-- 9
/*
UPDATE @RESULT SET COST_WITH_NDS_CREDIT = T.VALUE
FROM 
(
SELECT isnull(SUM(#LM.SUM_SUP),0) AS VALUE, ID_CONTRACTOR
FROM #LM 
INNER JOIN INVOICE_OUT INV_OUT ON INV_OUT.ID_INVOICE_OUT_GLOBAL = #LM.ID_DOCUMENT
WHERE DATE_CLOSE IS NULL AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO AND ISNULL(INV_OUT.IS_SUPPLIER, 1) = 0
	AND CODE_OP = 'INVOICE_OUT'
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- Считаем чеки продажи
UPDATE @RESULT SET COST_WITH_NDS_CREDIT = ISNULL(COST_WITH_NDS_CREDIT, 0) + ISNULL(T.VALUE, 0)
FROM 
(
SELECT SUM(#LM.SUM_SUP) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_CLOSE IS NOT NULL AND DATE_CLOSE BETWEEN @DATE_FROM AND @DATE_TO
	AND(CODE_OP = 'CHEQUE' AND QUANTITY_SUB > 0)
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR
*/
------------------------------------------------------------
-- 10
UPDATE @RESULT SET RETURN_SUPPLIER_CRETID = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND CODE_OP = 'ACT_R2C'
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR


-- 11
UPDATE @RESULT SET RETURN_SUPPLIER_BACK = ISNULL(RETURN_SUPPLIER_BACK, 0) + ISNULL(T.VALUE, 0)
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM 
INNER JOIN INVOICE_OUT INV_OUT ON INV_OUT.ID_INVOICE_OUT_GLOBAL = #LM.ID_DOCUMENT
WHERE DATE_CLOSE IS NULL AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO AND ISNULL(INV_OUT.IS_SUPPLIER, 1) = 1
	AND CODE_OP = 'INVOICE_OUT'
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- 12
UPDATE @RESULT SET NEDOSTACHI_CREDIT = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND CODE_OP = 'INVENTORY_SVED' AND ISNULL(QUANTITY_SUB, 0) > 0
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- 13
UPDATE @RESULT SET SPISANIYA_CREDIT = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND CODE_OP = 'DED'
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- 14
UPDATE @RESULT SET MOVEMENT_CREDIT = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, L.ID_CONTRACTOR
FROM #LM L
	LEFT JOIN MOVEMENT M ON M.ID_MOVEMENT_GLOBAL = L.ID_DOCUMENT
	LEFT JOIN STORE S_FR ON S_FR.ID_STORE = M.ID_STORE_FROM
	LEFT JOIN STORE S_TO ON S_TO.ID_STORE = M.ID_STORE_TO
WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND CODE_OP = 'MOVE' AND QUANTITY_SUB > 0 AND (@NOAU = 1 OR ID_TABLE = 38 OR (ID_TABLE = 8 AND S_TO.id_store not in (select id_store from #stores_ex where id_contractor = S_FR.id_contractor)))
GROUP BY L.ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

UPDATE @RESULT SET DIS_REVAL_CREDIT = T.VALUE
FROM 
(
SELECT SUM(SUM_SUP_VAT) AS VALUE, ID_CONTRACTOR
FROM #LM WHERE DATE_OP BETWEEN @DATE_FROM AND @DATE_TO 
	AND (CODE_OP = 'ACT_REV' OR CODE_OP = 'DIS') AND ISNULL(QUANTITY_SUB, 0) > 0
GROUP BY ID_CONTRACTOR
) T, @RESULT R
WHERE T.ID_CONTRACTOR = R.ID_CONTRACTOR

-- 15
UPDATE @RESULT SET TOTAL_CREDIT = ISNULL(COST_CREDIT, 0) + ISNULL(RETURN_SUPPLIER_CRETID, 0) + ISNULL(RETURN_SUPPLIER_BACK, 0) + 
			ISNULL(NEDOSTACHI_CREDIT, 0) + ISNULL(SPISANIYA_CREDIT, 0) + ISNULL(MOVEMENT_CREDIT, 0) + ISNULL(DIS_REVAL_CREDIT, 0)
--select * from @result

--17
UPDATE R SET CASH_SUM = T.SUM_CASH
FROM @RESULT R
INNER JOIN (SELECT SUM_CASH = SUM(CS.SUM_SALES - CS.SUM_SALES_RETURNS), S.ID_CONTRACTOR
    FROM CASH_SESSION CS 
    INNER JOIN CASH_REGISTER_2_STORE CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
    INNER JOIN STORE S ON S.ID_STORE = CR.ID_STORE
    WHERE CS.DATE_CLOSE BETWEEN @DATE_FROM AND @DATE_TO
    GROUP BY S.ID_CONTRACTOR) T ON T.ID_CONTRACTOR = R.ID_CONTRACTOR

SELECT R.*, C.NAME AS CONTRACTOR_NAME FROM @RESULT R INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = R.ID_CONTRACTOR

RETURN 0
GO

/*
EXEC REP_OBOROT_SALDO_MOVEMENT_FACT_SEBESTIOMOST N'
<XML>
	<DATE_FR>2010-05-27T14:04:39.781</DATE_FR>
	<DATE_TO>2011-05-27T14:04:39.781</DATE_TO>
	<STORE>
		<ID_STORE>
		161
		</ID_STORE>
	</STORE>
	<NOAU>1</NOAU>
</XML>'
*/
