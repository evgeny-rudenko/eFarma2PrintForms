SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('REPEX_GET_QUANTITY_SUB_POSITION') IS NULL) 
		EXEC('CREATE PROCEDURE REPEX_GET_QUANTITY_SUB_POSITION AS RETURN ')
GO
ALTER PROCEDURE DBO.REPEX_GET_QUANTITY_SUB_POSITION
@ID_LOT_GLOBAL UNIQUEIDENTIFIER, 
@ID_CHEQUE_GLOBAL UNIQUEIDENTIFIER, 
@ID_STORE_GLOBAL UNIQUEIDENTIFIER,
@PRICE MONEY,
@QUANTITY_RESET BIGINT OUT,
@SUM_RESET MONEY OUT,
@DISCOUNT_RESET MONEY OUT
AS
BEGIN
	DECLARE @QUANTITY_RESET_BEGIN BIGINT
	DECLARE @QUANTITY_RESET_END BIGINT
	DECLARE @QUANTITY_RESET_RESULT BIGINT
	DECLARE @DATE DATETIME
	DECLARE @PRICE_BEGIN MONEY
	DECLARE @PRICE_END MONEY
	DECLARE @DISCOUNT MONEY
	DECLARE @DISCOUNT_begin MONEY
	DECLARE @DISCOUNT_end MONEY
    SET @QUANTITY_RESET_BEGIN = 0
    SET @QUANTITY_RESET_END = 0
    SET @QUANTITY_RESET_RESULT = 0
    SET @PRICE_BEGIN = 0
    SET @PRICE_END = 0
    SET @DISCOUNT  = 0
    
    CREATE TABLE #TMP
    (		
	    CODE_OP VARCHAR(255),
		QUANTITY BIGINT,
		SUMM MONEY,
		DISCOUNT MONEY,
		[DATE] DATETIME
    )
	INSERT INTO #TMP
    SELECT  
		CODE_OP,
		QUANTITY,
		SUMM,
		DISCOUNT,
		[DATE]
		FROM USER_LOG 
		WHERE (ID_LOT_GLOBAL = @ID_LOT_GLOBAL AND ID_CHEQUE_GLOBAL = @ID_CHEQUE_GLOBAL AND ID_STORE_GLOBAL = @ID_STORE_GLOBAL)
		or (ID_CHEQUE_GLOBAL = @ID_CHEQUE_GLOBAL and CODE_OP = 'ChequeCancel')
		or (ID_CHEQUE_GLOBAL = @ID_CHEQUE_GLOBAL and CODE_OP = 'ChequeDiscountClear')-------
		ORDER BY [DATE]
--select * from #TMP
    SELECT TOP 1 
			@QUANTITY_RESET_BEGIN = ISNULL(QUANTITY,0),
			@PRICE_BEGIN =SUMM,-- CASE WHEN ISNULL(QUANTITY,0)=0 THEN 0 ELSE ISNULL(SUMM,0)/ISNULL(QUANTITY,0) END,
			@DISCOUNT_begin = ISNULL(DISCOUNT,0)
    FROM #TMP
    WHERE CODE_OP IN ('ChequeItemQtyChange', 'GoodsByListAdd','GoodsByBarcodeAdd') 
    ORDER BY QUANTITY DESC
--select '1', @QUANTITY_RESET_BEGIN, @PRICE_BEGIN
 
    SELECT TOP 1 
			@QUANTITY_RESET_END = ISNULL(QUANTITY,0),
			@DATE = [DATE],
			@PRICE_END=SUMM,-- CASE WHEN ISNULL(QUANTITY,0)=0 THEN 0 ELSE ISNULL(SUMM,0)/ISNULL(QUANTITY,0) END,
			@DISCOUNT_end =  ISNULL(DISCOUNT,0)
    FROM #TMP
    WHERE CODE_OP IN ('ChequeItemQtyChange', 'GoodsByListAdd','ChequeItemDiscountApply','GoodsByBarcodeAdd') 
    ORDER BY [DATE] DESC
    
--select '2',@QUANTITY_RESET_END, @DATE,@PRICE_END
    IF EXISTS(SELECT NULL FROM #TMP WHERE [DATE] > @DATE AND CODE_OP IN ('ChequeCancel', 'ChequeItemDelete'))
		SET  @QUANTITY_RESET_RESULT = @QUANTITY_RESET_BEGIN
			ELSE
				SET @QUANTITY_RESET_RESULT = @QUANTITY_RESET_BEGIN - @QUANTITY_RESET_END
	SET @DISCOUNT  = abs( @DISCOUNT_begin-@DISCOUNT_end)
--select 'fff', @QUANTITY_RESET_RESULT,@PRICE_BEGIN,@PRICE_END,@DISCOUNT
			SET @QUANTITY_RESET =  @QUANTITY_RESET_RESULT
			SET @SUM_RESET = @QUANTITY_RESET_RESULT *@PRICE
			SET @DISCOUNT_RESET = CASE WHEN NOT  EXISTS(SELECT NULL FROM #TMP WHERE [DATE] > @DATE AND  CODE_OP IN ('ChequeDiscountClear')) THEN 0 ELSE @DISCOUNT END --* CASE WHEN @QUANTITY_RESET_RESULT =0 THEN 1 ELSE @QUANTITY_RESET_RESULT END
--select CASE WHEN NOT  EXISTS(SELECT NULL FROM #TMP WHERE [DATE] > @DATE AND  CODE_OP IN ('ChequeDiscountClear')) THEN 0 ELSE @DISCOUNT END

--select @DISCOUNT , @QUANTITY_RESET_RESULT 
    RETURN 0
END
GO

IF OBJECT_ID('DBO.REPEX_USER_LOG') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_USER_LOG AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_USER_LOG
    @XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @ALL_STORE BIT, @ALL_USER BIT, @ALL_DRUGSTORE BIT, @ALL_GOODS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO
FROM OPENXML(@HDOC, '/XML') WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO')
--SELECT  @DATE_FR , @DATE_TO
SELECT * INTO #STORE FROM OPENXML(@HDOC, '//ID_STORE')
WITH(ID_STORE BIGINT '.') WHERE ID_STORE <> 0
IF @@ROWCOUNT = 0 SET @ALL_STORE = 1 ELSE SET @ALL_STORE = 0

SELECT * INTO #USER FROM OPENXML(@HDOC, '//ID_USER')
WITH(ID_USER BIGINT '.') WHERE ID_USER <> 0
IF @@ROWCOUNT = 0 SET @ALL_USER = 1 ELSE SET @ALL_USER = 0 

SELECT * INTO #DRUGSTORE FROM OPENXML(@HDOC, '//ID_DRUGSTORE') 
WITH(ID_DRUGSTORE BIGINT '.') WHERE ID_DRUGSTORE <> 0
IF @@ROWCOUNT = 0 SET @ALL_DRUGSTORE = 1 ELSE SET @ALL_DRUGSTORE = 0
---
SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//ID_GOODS') 
WITH(ID_GOODS BIGINT '.') WHERE ID_GOODS <> 0
IF @@ROWCOUNT = 0 SET @ALL_GOODS = 1 ELSE SET @ALL_GOODS = 0
---
--select * from #GOODS
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT

	SELECT
		U.ID_USER_LOG
	INTO #TMP_LOG
	FROM USER_LOG U
		INNER JOIN STORE S WITH(NOLOCK) ON S.ID_STORE_GLOBAL = U.ID_STORE_GLOBAL
		INNER JOIN META_USER MU WITH(NOLOCK) ON MU.ID_USER = U.ID_USER_GLOBAL
		LEFT JOIN GOODS G WITH(NOLOCK) ON G.ID_GOODS_GLOBAL = U.ID_GOODS_GLOBAL
		LEFT JOIN LOT L WITH(NOLOCK) ON L.ID_LOT_GLOBAL = U.ID_LOT_GLOBAL
		LEFT JOIN CONTRACTOR C WITH(NOLOCK) ON C.ID_CONTRACTOR_GLOBAL = U.ID_CONTRACTOR_GLOBAL
		LEFT JOIN CASH_REGISTER CR WITH(NOLOCK) ON CR.ID_CASH_REGISTER = U.ID_CASH_REGISTER
		LEFT JOIN CHEQUE CH WITH(NOLOCK) ON CH.ID_CHEQUE_GLOBAL = U.ID_CHEQUE_GLOBAL
	WHERE U.CODE_OP IN ('GoodsByListAdd','GoodsByBarcodeAdd')
		AND U.[DATE] BETWEEN @DATE_FR AND @DATE_TO
		AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT ID_STORE FROM #STORE))
		AND (@ALL_USER = 1 OR MU.USER_NUM IN (SELECT ID_USER FROM #USER))
		AND (@ALL_DRUGSTORE = 1 OR C.ID_CONTRACTOR IN (SELECT ID_DRUGSTORE FROM #DRUGSTORE))
		AND (@ALL_GOODS = 1 OR G.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS))
--select  @ALL_GOODS
--return
	SELECT L.PRICE_SAL, R.*
	INTO #TMP_CHEQUEITEMQTYCHANGE
	FROM (
			SELECT
				U.ID_LOT_GLOBAL,
				U.ID_CHEQUE_GLOBAL,
				U.ID_STORE_GLOBAL,
				U.ID_USER_GLOBAL,
				U.ID_GOODS_GLOBAL,
				U.ID_CONTRACTOR_GLOBAL,
				U.ID_CASH_REGISTER,
				[DATE] = MAX(U.[DATE])
				FROM USER_LOG U
				WHERE (U.ID_USER_LOG IN (SELECT ID_USER_LOG FROM #TMP_LOG))
			   -- AND ID_USER_LOG > 68780---?
				GROUP BY 
					U.ID_LOT_GLOBAL,
					U.ID_CHEQUE_GLOBAL,
					U.ID_STORE_GLOBAL,
					U.ID_USER_GLOBAL,
					U.ID_GOODS_GLOBAL,
					U.ID_CONTRACTOR_GLOBAL,
					U.ID_CASH_REGISTER
		)R
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = R.ID_LOT_GLOBAL
--	select * from #TMP_CHEQUEITEMQTYCHANGE
--select @DATE_FR , @DATE_TO
	CREATE TABLE #RESULT
	(
	    ID_LOT_GLOBAL UNIQUEIDENTIFIER,    
        ID_CHEQUE_GLOBAL UNIQUEIDENTIFIER,
        ID_STORE_GLOBAL UNIQUEIDENTIFIER,
        QUANTITY_RESET BIGINT,
		SUM_RESET MONEY,
		DISCOUNT_RESET MONEY
	)
	
	DECLARE @QUANTITY_RESET BIGINT
	DECLARE @SUM_RESET MONEY
	DECLARE @DISCOUNT_RESET MONEY
	
    DECLARE C CURSOR FOR
    SELECT 
		PRICE_SAL,
        ID_LOT_GLOBAL,    
        ID_CHEQUE_GLOBAL,
        ID_STORE_GLOBAL
    FROM #TMP_CHEQUEITEMQTYCHANGE C
   -- WHERE EXISTS (SELECT NULL FROM #RES_FULL I WHERE I.ID_SERIES = C.ID_SERIES)    
	DECLARE @PRICE_SAL MONEY
    DECLARE @ID_LOT_GLOBAL UNIQUEIDENTIFIER
    DECLARE @ID_CHEQUE_GLOBAL UNIQUEIDENTIFIER
    DECLARE @ID_STORE_GLOBAL UNIQUEIDENTIFIER
    OPEN C 
    WHILE 1=1 BEGIN
    	SET @QUANTITY_RESET = 0
		SET @SUM_RESET = 0
		SET @DISCOUNT_RESET = 0
        FETCH NEXT FROM C INTO @PRICE_SAL, @ID_LOT_GLOBAL, @ID_CHEQUE_GLOBAL, @ID_STORE_GLOBAL
        IF (@@FETCH_STATUS<>0) BREAK
        EXEC REPEX_GET_QUANTITY_SUB_POSITION @ID_LOT_GLOBAL, @ID_CHEQUE_GLOBAL,	@ID_STORE_GLOBAL, @PRICE_SAL, @QUANTITY_RESET OUT, @SUM_RESET  OUT, @DISCOUNT_RESET OUT
--select @ID_LOT_GLOBAL, @ID_CHEQUE_GLOBAL,	@ID_STORE_GLOBAL, @PRICE_SAL, @QUANTITY_RESET , @SUM_RESET  , @DISCOUNT_RESET 
		IF (@QUANTITY_RESET <> 0 OR @DISCOUNT_RESET<>0)       
		BEGIN
			INSERT INTO #RESULT
			SELECT 
				@ID_LOT_GLOBAL ,    
				@ID_CHEQUE_GLOBAL ,
				@ID_STORE_GLOBAL ,
				@QUANTITY_RESET ,
				@SUM_RESET ,
				@DISCOUNT_RESET 
		END
    END
    CLOSE C
    DEALLOCATE C

SELECT * 
INTO #TMP
FROM 
	(
	
		SELECT
			MU.USER_NUM,
			MU.FULL_NAME,
			GOODS_NAME = G.[NAME],
			L.INTERNAL_BARCODE,
			L.LOT_NAME,
			U.QUANTITY,
			DATE_D = CONVERT(VARCHAR(10), U.[DATE], 104),
			DATE_T = CONVERT(VARCHAR(8), U.[DATE], 114),
			U.SUMM, 
			U.DISCOUNT,
			CR_NAME = CAST(CR.NUMBER_CASH_REGISTER AS VARCHAR) + '  ' + CR.NAME_CASH_REGISTER,
			CHEQUE_ID = CH.ID_CHEQUE,
			U.[DATE]
		FROM USER_LOG U
			INNER JOIN STORE S ON S.ID_STORE_GLOBAL = U.ID_STORE_GLOBAL
			INNER JOIN META_USER MU ON MU.ID_USER = U.ID_USER_GLOBAL
			LEFT JOIN GOODS G ON G.ID_GOODS_GLOBAL = U.ID_GOODS_GLOBAL
			LEFT JOIN LOT L ON L.ID_LOT_GLOBAL = U.ID_LOT_GLOBAL
			LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR_GLOBAL = U.ID_CONTRACTOR_GLOBAL
			LEFT JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = U.ID_CASH_REGISTER
			LEFT JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = U.ID_CHEQUE_GLOBAL
		WHERE CODE_OP IN ('CLEAR_CH', 'REMOVE_POS', 'CLEAR_DISCOUNT', 'CHANGE_QTY')
			AND U.[DATE] BETWEEN @DATE_FR AND @DATE_TO
			AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT ID_STORE FROM #STORE))
			AND (@ALL_USER = 1 OR MU.USER_NUM IN (SELECT ID_USER FROM #USER))
			AND (@ALL_DRUGSTORE = 1 OR C.ID_CONTRACTOR IN (SELECT ID_DRUGSTORE FROM #DRUGSTORE))
			AND (@ALL_GOODS = 1 OR G.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS))

		UNION ALL

		SELECT
			MU.USER_NUM,
			MU.FULL_NAME,
			GOODS_NAME = G.[NAME],
			L.INTERNAL_BARCODE,
			L.LOT_NAME,
			QUANTITY = R.QUANTITY_RESET,--U.QUANTITY,
			DATE_D = CONVERT(VARCHAR(10), U.[DATE], 104),
			DATE_T = CONVERT(VARCHAR(8), U.[DATE], 114),
			SUMM = R.SUM_RESET,--U.SUMM, 
			DISCOUNT =R.DISCOUNT_RESET ,
			CR_NAME = CAST(CR.NUMBER_CASH_REGISTER AS VARCHAR) + '  ' + CR.NAME_CASH_REGISTER,
			CHEQUE_ID = CH.ID_CHEQUE,
			U.[DATE]
		FROM #RESULT R
			LEFT JOIN #TMP_CHEQUEITEMQTYCHANGE U ON R.ID_LOT_GLOBAL = U.ID_LOT_GLOBAL AND  R.ID_CHEQUE_GLOBAL = U.ID_CHEQUE_GLOBAL AND R.ID_STORE_GLOBAL = U.ID_STORE_GLOBAL
			LEFT JOIN STORE S WITH(NOLOCK) ON S.ID_STORE_GLOBAL = U.ID_STORE_GLOBAL
			LEFT JOIN META_USER MU WITH(NOLOCK) ON MU.ID_USER = U.ID_USER_GLOBAL
			LEFT JOIN GOODS G WITH(NOLOCK) ON G.ID_GOODS_GLOBAL = U.ID_GOODS_GLOBAL
			LEFT JOIN LOT L WITH(NOLOCK) ON L.ID_LOT_GLOBAL = U.ID_LOT_GLOBAL
			LEFT JOIN CONTRACTOR C WITH(NOLOCK) ON C.ID_CONTRACTOR_GLOBAL = U.ID_CONTRACTOR_GLOBAL
			LEFT JOIN CASH_REGISTER CR WITH(NOLOCK) ON CR.ID_CASH_REGISTER = U.ID_CASH_REGISTER
			LEFT JOIN CHEQUE CH WITH(NOLOCK) ON CH.ID_CHEQUE_GLOBAL = U.ID_CHEQUE_GLOBAL
	)T
ORDER BY FULL_NAME, CAST(CONVERT(VARCHAR(8), [DATE], 114) AS DATETIME), GOODS_NAME

SELECT * FROM #TMP

RETURN
GO

/*
EXEC REPEX_USER_LOG @XMLPARAM = N'
<XML>
	<DATE_FR>2001-11-28T13:00:28.890</DATE_FR>
	<DATE_TO>2015-11-30T14:59:28.890</DATE_TO>
	<ID_GOODS>253662</ID_GOODS>
</XML>'
*/
/*
@ID_LOT_GLOBAL UNIQUEIDENTIFIER, 
@ID_CHEQUE_GLOBAL UNIQUEIDENTIFIER, 
@ID_STORE_GLOBAL

SELECT * FROM (SELECT TOP 50 IDL=ID_LOT_GLOBAL, IDC=ID_CHEQUE_GLOBAL , * FROM USER_LOG ORDER BY  ID_USER_LOG DESC) G ORDER BY  ID_USER_LOG
	DECLARE @QUANTITY_RESET BIGINT
	DECLARE @SUM_RESET MONEY
	DECLARE @DISCOUNT_RESET MONEY
	    	SET @QUANTITY_RESET = 0
		SET @SUM_RESET = 0
		SET @DISCOUNT_RESET = 0
EXEC REPEX_GET_QUANTITY_SUB_POSITION '583B5C24-59E3-4791-A15D-6F1383F42F02',	'628DF2A5-1CFE-41E8-9EC7-A04013A0E480',	'C76DB93F-ACC7-4023-B58C-0A992F4589A2',100,@QUANTITY_RESET OUT, @SUM_RESET  OUT, @DISCOUNT_RESET OUT
select  @QUANTITY_RESET , @SUM_RESET  , @DISCOUNT_RESET 
*/
--SELECT  * FROM USER_LOG where code_op ='ChequeCancel'


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'UserLog.UserLogForm'