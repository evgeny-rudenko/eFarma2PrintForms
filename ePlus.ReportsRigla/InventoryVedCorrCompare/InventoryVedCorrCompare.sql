IF (OBJECT_ID('REPEX_INVENTORY_VED_CORR_COMPARE') IS NULL) EXEC ('CREATE PROCEDURE REPEX_INVENTORY_VED_CORR_COMPARE AS RETURN')
GO
ALTER PROCEDURE REPEX_INVENTORY_VED_CORR_COMPARE
    @XMLPARAM NTEXT
AS
DECLARE @HDOC INT, @INVENTORY_VED BIT, @TYPE VARCHAR(8)
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT * INTO #INVENTORY_VED FROM OPENXML(@HDOC, '//ID_INVENTORY_VED_GLOBAL') 
WITH(ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER '.')
IF @@ROWCOUNT = 0 SET @INVENTORY_VED = 1 ELSE SET @INVENTORY_VED = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT ID_ITEM = IDENTITY(INT, 1, 1),
    CODE_STU = ISNULL(GC.CODE, ''),
    CODE_AP = G.CODE,
    GOODS_NAME = G.[NAME],
    BARCODE = ISNULL(B.CODE, ''),
    BARCODE_R = DBO.FN_GET_INVENTORY_ITEM_DATA(G.ID_GOODS, NULL, 0),
    PLACE = ISNULL(SP.[NAME], ''),
    COMMENT_I = I.COMMENT,
    DOC_NUM = I.DOC_NUM,
    QUNT = ROUND(II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR, 2),
    PRICE_OPT = ROUND(II.PRICE_SUP * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR, 2),
    PRICE_ROZ = ROUND(II.PRICE_SAL * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR, 2),
    I.ID_STORE_PLACE,
    COMMENT = CAST(NULL AS NVARCHAR(4000))
INTO #INV FROM INVENTORY_VED I(NOLOCK)
INNER JOIN INVENTORY_VED_ITEM II(NOLOCK) ON II.ID_INVENTORY_VED_GLOBAL = I.ID_INVENTORY_VED_GLOBAL
INNER JOIN GOODS G(NOLOCK) ON G.ID_GOODS = II.ID_GOODS
INNER JOIN GOODS_CODE GC(NOLOCK) ON GC.ID_GOODS = G.ID_GOODS
INNER JOIN CONTRACTOR C(NOLOCK) ON C.ID_CONTRACTOR = GC.ID_CONTRACTOR
INNER JOIN SCALING_RATIO SR(NOLOCK) ON SR.ID_SCALING_RATIO = II.ID_SCALING_RATIO
LEFT JOIN STORE_PLACE SP(NOLOCK) ON SP.ID_STORE_PLACE = I.ID_STORE_PLACE
LEFT JOIN BAR_CODE B(NOLOCK) ON B.ID_GOODS = G.ID_GOODS AND B.DATE_DELETED IS NULL
WHERE I.DOC_STATE <> 'DEL' AND C.[NAME] = 'СТУ'
	AND (@INVENTORY_VED = 1 OR I.ID_INVENTORY_VED_GLOBAL IN (SELECT ID_INVENTORY_VED_GLOBAL FROM #INVENTORY_VED))

SELECT ID_ITEM,
    COMMENT = CAST(CASE WHEN QUNT = 0 THEN 'Нулевое количество; ' ELSE '' END
        + CASE WHEN PRICE_OPT = 0 THEN 'Нулевая цена оптовая; ' ELSE '' END
        + CASE WHEN PRICE_ROZ = 0 THEN 'Нулевая цена розничная; ' ELSE '' END
        + CASE WHEN BARCODE = '' THEN 'Отсутствует ШК; ' ELSE '' END
        + CASE WHEN CODE_STU = '' THEN 'Отсутствует код СТУ; ' ELSE '' END
        + CASE WHEN ID_STORE_PLACE IS NULL THEN 'Отсутствует место хранения; ' ELSE '' END AS NVARCHAR(4000))
INTO #RESULT FROM #INV
WHERE QUNT = 0 OR PRICE_OPT = 0 OR PRICE_ROZ = 0 OR BARCODE = '' OR CODE_STU = '' OR ID_STORE_PLACE IS NULL

UPDATE #INV SET COMMENT = R.COMMENT FROM #RESULT R WHERE R.ID_ITEM = #INV.ID_ITEM

DECLARE @ID_ITEM BIGINT, @BARCODE VARCHAR(200), @CODE_AP VARCHAR(16), @RESULT NVARCHAR(4000), 
    @CODE_STU VARCHAR(40), @PLACE VARCHAR(100), @QUNT MONEY, @DOC_NUM VARCHAR(40)

SELECT ID_ITEM, CODE_STU, CODE_AP, GOODS_NAME, BARCODE, BARCODE_R, PLACE, COMMENT_I, DOC_NUM, QUNT, PRICE_OPT, PRICE_ROZ, COMMENT = CAST(NULL AS VARCHAR(4000))
INTO #BR FROM #INV A
WHERE A.BARCODE <> ''  
    AND EXISTS (SELECT TOP 1 1 FROM #INV B WHERE A.CODE_AP <> B.CODE_AP AND A.BARCODE = B.BARCODE)

SELECT TOP 1 @ID_ITEM = ID_ITEM, @BARCODE = ISNULL(BARCODE, ''), @CODE_AP = CODE_AP, @RESULT = '' FROM #BR WHERE COMMENT IS NULL
WHILE @ID_ITEM IS NOT NULL BEGIN
    SELECT @RESULT = @RESULT + ISNULL(RTRIM(CODE_AP + ', ' + MAX(GOODS_NAME)), '') + '; ' 
    FROM #BR(NOLOCK)
    WHERE ID_ITEM <> @ID_ITEM AND BARCODE = @BARCODE AND @CODE_AP <> CODE_AP
    GROUP BY CODE_AP

    SET @RESULT = LEFT(RTRIM(@RESULT), 4000)    
    
    SET @RESULT = CASE WHEN @RESULT IS NOT NULL AND RIGHT(@RESULT, 1) = ';' 
        THEN LEFT(@RESULT, LEN(@RESULT)-1) ELSE @RESULT END
    SET @RESULT = ISNULL(@RESULT, '')

    UPDATE #BR SET COMMENT = 'Дубль ШК с товарами: "' + @RESULT + '"; '
    FROM #BR WHERE ID_ITEM = @ID_ITEM

    SELECT @ID_ITEM = NULL, @RESULT = '', @BARCODE = ''
    SELECT TOP 1 @ID_ITEM = ID_ITEM , @BARCODE = ISNULL(BARCODE, ''), @CODE_AP = CODE_AP FROM #BR WHERE COMMENT IS NULL
END

UPDATE R SET R.COMMENT = ISNULL(R.COMMENT, '') + I.COMMENT FROM #INV R
INNER JOIN #BR I ON I.ID_ITEM = R.ID_ITEM

SELECT ID_ITEM, CODE_STU, CODE_AP, GOODS_NAME, BARCODE, BARCODE_R, PLACE, COMMENT_I, DOC_NUM, QUNT, PRICE_OPT, PRICE_ROZ, COMMENT = CAST(NULL AS VARCHAR(4000))
INTO #STU FROM #INV A
WHERE A.CODE_STU <> ''
    AND EXISTS (SELECT TOP 1 1 FROM #INV B WHERE A.CODE_AP <> B.CODE_AP AND A.CODE_STU = B.CODE_STU)

SELECT TOP 1 @ID_ITEM = ID_ITEM, @CODE_STU = ISNULL(CODE_STU, ''), @CODE_AP = CODE_AP, @RESULT = '' FROM #STU WHERE COMMENT IS NULL
WHILE @ID_ITEM IS NOT NULL BEGIN
    SELECT @RESULT = @RESULT + ISNULL(RTRIM(CODE_AP + ', ' + MAX(GOODS_NAME)), '') + '; ' 
    FROM #STU(NOLOCK)
    WHERE ID_ITEM <> @ID_ITEM AND CODE_STU = @CODE_STU AND @CODE_AP <> CODE_AP
    GROUP BY CODE_AP

    SET @RESULT = LEFT(RTRIM(@RESULT), 4000)    
    
    SET @RESULT = CASE WHEN @RESULT IS NOT NULL AND RIGHT(@RESULT, 1) = ';' 
        THEN LEFT(@RESULT, LEN(@RESULT)-1) ELSE @RESULT END
    SET @RESULT = ISNULL(@RESULT, '')
    UPDATE #STU SET COMMENT = 'Дубль по коду СТУ с товарами: "' + @RESULT + '"; '
    FROM #STU WHERE ID_ITEM = @ID_ITEM

    SELECT @ID_ITEM = NULL, @RESULT = '', @CODE_STU = ''
    SELECT TOP 1 @ID_ITEM = ID_ITEM , @CODE_STU = ISNULL(CODE_STU, ''), @CODE_AP = CODE_AP FROM #STU WHERE COMMENT IS NULL
END

UPDATE R SET R.COMMENT = ISNULL(R.COMMENT, '') + I.COMMENT FROM #INV R
INNER JOIN #STU I ON I.ID_ITEM = R.ID_ITEM

SELECT ID_ITEM, CODE_STU, CODE_AP, GOODS_NAME, BARCODE, BARCODE_R, PLACE, COMMENT_I, DOC_NUM, QUNT, PRICE_OPT, PRICE_ROZ, COMMENT = CAST(NULL AS VARCHAR(4000))
INTO #PLACE FROM #INV A
WHERE A.PLACE <> '' 
    AND EXISTS (SELECT TOP 1 1 FROM #INV B WHERE A.CODE_AP <> B.CODE_AP AND A.PLACE = B.PLACE AND A.DOC_NUM <> B.DOC_NUM AND A.QUNT = B.QUNT)

SELECT TOP 1 @ID_ITEM = ID_ITEM, @PLACE = ISNULL(PLACE, ''), @QUNT = ISNULL(QUNT, 0), 
    @CODE_AP = CODE_AP, @RESULT = '', @DOC_NUM = ISNULL(DOC_NUM, '') 
FROM #PLACE WHERE COMMENT IS NULL
WHILE @ID_ITEM IS NOT NULL BEGIN

    SELECT @RESULT = @RESULT + ISNULL(RTRIM(MAX(DOC_NUM)), '') + '; ' 
    FROM #PLACE(NOLOCK)
    WHERE ID_ITEM <> @ID_ITEM AND PLACE = @PLACE AND QUNT = @QUNT AND @CODE_AP <> CODE_AP AND DOC_NUM <> @DOC_NUM
    GROUP BY DOC_NUM

    SET @RESULT = LEFT(RTRIM(@RESULT), 4000)    
    
    SET @RESULT = CASE WHEN @RESULT IS NOT NULL AND RIGHT(@RESULT, 1) = ';' 
        THEN LEFT(@RESULT, LEN(@RESULT)-1) ELSE @RESULT END
    SET @RESULT = ISNULL(@RESULT, '')
    UPDATE #PLACE SET COMMENT = 'Дубль по месту хранения с документом №: "' + @RESULT + '"; '
    FROM #PLACE WHERE ID_ITEM = @ID_ITEM

    SELECT @ID_ITEM = NULL, @RESULT = '', @PLACE = '', @QUNT = 0, @DOC_NUM = ''
    SELECT TOP 1 @ID_ITEM = ID_ITEM , @PLACE = ISNULL(PLACE, ''), @QUNT = ISNULL(QUNT, 0),
         @CODE_AP = CODE_AP, @DOC_NUM = ISNULL(DOC_NUM, '') FROM #PLACE WHERE COMMENT IS NULL
END

UPDATE R SET R.COMMENT = ISNULL(R.COMMENT, '') + I.COMMENT FROM #INV R
INNER JOIN #PLACE I ON I.ID_ITEM = R.ID_ITEM

SELECT DISTINCT 
    CODE_STU, CODE_AP, GOODS_NAME, BARCODE = BARCODE_R, PLACE = DOC_NUM + ISNULL('(' + ISNULL(NULLIF(PLACE, ''), COMMENT_I) + ')', ''),  
    QUNT, PRICE_OPT, PRICE_ROZ, COMMENT = MAX(COMMENT)
FROM #INV WHERE COMMENT IS NOT NULL
GROUP BY CODE_STU, CODE_AP, GOODS_NAME, BARCODE_R, DOC_NUM , PLACE, COMMENT_I, QUNT, PRICE_OPT, PRICE_ROZ
ORDER BY GOODS_NAME

RETURN 0
GO
--exec REPEX_INVENTORY_VED_CORR_COMPARE @xmlParam=N'<XML><ID_INVENTORY_VED_GLOBAL>492a3043-62d8-47b7-8d4f-02d87be4d480</ID_INVENTORY_VED_GLOBAL></XML>'
