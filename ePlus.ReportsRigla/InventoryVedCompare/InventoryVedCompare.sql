IF (OBJECT_ID('REPEX_INVENTORY_VED_COMPARE') IS NULL) EXEC ('CREATE PROCEDURE REPEX_INVENTORY_VED_COMPARE AS RETURN')
GO
ALTER PROCEDURE REPEX_INVENTORY_VED_COMPARE(
    @XMLPARAM NTEXT
)
AS
DECLARE @INV_LIST1 TABLE(
    ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER NOT NULL UNIQUE
)
DECLARE @INV_LIST2 TABLE(
    ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER NOT NULL UNIQUE
)

DECLARE @HDOC INT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
INSERT INTO @INV_LIST1
SELECT 
    ID_INVENTORY_VED_GLOBAL
FROM OPENXML(@HDOC, '/XML/LIST1/ID_INVENTORY_VED_GLOBAL') WITH(
    ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER '.'    
)

INSERT INTO @INV_LIST2
SELECT 
    ID_INVENTORY_VED_GLOBAL
FROM OPENXML(@HDOC, '/XML/LIST2/ID_INVENTORY_VED_GLOBAL') WITH(
    ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER '.'    
)

EXEC SP_XML_REMOVEDOCUMENT @HDOC

DECLARE @LIST1 TABLE(
    ID BIGINT NOT NULL IDENTITY,
    ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER,
    DOC_NAME VARCHAR(300),
    ID_GOODS BIGINT,
    GOODS_NAME VARCHAR(600),
    QUANTITY MONEY,
    PRICE_SAL MONEY        
)

DECLARE @LIST2 TABLE(
    ID BIGINT NOT NULL IDENTITY,
    ID_INVENTORY_VED_GLOBAL UNIQUEIDENTIFIER,
    DOC_NAME VARCHAR(300),
    ID_GOODS BIGINT,
    GOODS_NAME VARCHAR(600),
    QUANTITY MONEY,
    PRICE_SAL MONEY        
)

INSERT INTO @LIST1(
    ID_INVENTORY_VED_GLOBAL,
    DOC_NAME,
    ID_GOODS,
    GOODS_NAME,
    QUANTITY,
    PRICE_SAL
)
SELECT
    II.ID_INVENTORY_VED_GLOBAL,
    I.DOC_NUM,
    II.ID_GOODS,
    G.NAME + ' ('+P.NAME+')',
    II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR,
    II.PRICE_SAL * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR
FROM INVENTORY_VED_ITEM II
INNER JOIN INVENTORY_VED I ON I.ID_INVENTORY_VED_GLOBAL = II.ID_INVENTORY_VED_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = II.ID_GOODS
INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = II.ID_SCALING_RATIO
WHERE EXISTS (SELECT NULL 
              FROM @INV_LIST1 L
              WHERE L.ID_INVENTORY_VED_GLOBAL = II.ID_INVENTORY_VED_GLOBAL)
ORDER BY II.ID_GOODS, II.QUANTITY DESC, II.PRICE_SAL DESC, SR.DENOMINATOR DESC

INSERT INTO @LIST2(
    ID_INVENTORY_VED_GLOBAL,
    DOC_NAME,
    ID_GOODS,
    GOODS_NAME,
    QUANTITY,
    PRICE_SAL
)
SELECT
    II.ID_INVENTORY_VED_GLOBAL,
    I.DOC_NUM,
    II.ID_GOODS,
    G.NAME + ' ('+P.NAME+')',
    II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR,
    II.PRICE_SAL * CONVERT(MONEY, SR.DENOMINATOR) / SR.NUMERATOR
FROM INVENTORY_VED_ITEM II
INNER JOIN INVENTORY_VED I ON I.ID_INVENTORY_VED_GLOBAL = II.ID_INVENTORY_VED_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = II.ID_GOODS
INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = II.ID_SCALING_RATIO
WHERE EXISTS (SELECT NULL 
              FROM @INV_LIST2 I 
              WHERE I.ID_INVENTORY_VED_GLOBAL = II.ID_INVENTORY_VED_GLOBAL)
ORDER BY II.ID_GOODS, II.QUANTITY DESC, II.PRICE_SAL DESC, SR.DENOMINATOR DESC

DECLARE @RESULT TABLE(
    ID BIGINT NOT NULL IDENTITY,
    GOODS VARCHAR(600),
    DOC1_NAME VARCHAR(300),
    DOC2_NAME VARCHAR(300),
    DOC1_QTY MONEY,
    DOC2_QTY MONEY,
    DOC1_PRICE MONEY,
    DOC2_PRICE MONEY,
    DIFF_QTY MONEY,
    DIFF_PRICE MONEY
)

DECLARE C CURSOR FOR
SELECT 
    ID,
    ID_GOODS
FROM @LIST1
ORDER BY ID ASC

DECLARE @ID BIGINT
DECLARE @ID_GOODS BIGINT
DECLARE @RESULT_ID BIGINT
DECLARE @LIST2_ID BIGINT
OPEN C
WHILE 1=1 BEGIN
    FETCH NEXT FROM C INTO @ID, @ID_GOODS
    IF (@@FETCH_STATUS<>0) BREAK
    INSERT INTO @RESULT(
        GOODS,
        DOC1_NAME,
        DOC1_QTY,
        DOC1_PRICE
    )
    SELECT
        GOODS_NAME,
        DOC_NAME,
        QUANTITY,
        PRICE_SAL
    FROM @LIST1
    WHERE ID = @ID

    SET @RESULT_ID = SCOPE_IDENTITY()
    
    SET @LIST2_ID = NULL

    SELECT
        @LIST2_ID = MIN(ID)
    FROM @LIST2
    WHERE ID_GOODS = @ID_GOODS

    UPDATE R SET
        DOC2_NAME = L2.DOC_NAME,
        DOC2_QTY = L2.QUANTITY,
        DOC2_PRICE = L2.PRICE_SAL
    FROM @RESULT R, @LIST2 L2
    WHERE L2.ID = @LIST2_ID   
    AND R.ID = @RESULT_ID
    
    DELETE FROM @LIST2
    WHERE ID = @LIST2_ID
END
CLOSE C
DEALLOCATE C

INSERT INTO @RESULT(
        GOODS,
        DOC2_NAME,
        DOC2_QTY,
        DOC2_PRICE
)
SELECT
    GOODS_NAME,
    DOC_NAME,
    QUANTITY,
    PRICE_SAL
FROM @LIST2

SELECT 
    GOODS,
    DOC1_NAME,
    DOC2_NAME,
    DOC1_QTY,
    DOC2_QTY,
    DOC1_PRICE,
    DOC2_PRICE,
    DIFF_QTY = ISNULL(DOC2_QTY,0) - ISNULL(DOC1_QTY,0),
    DIFF_PRICE = ISNULL(DOC2_PRICE,0) - ISNULL(DOC1_PRICE,0)
FROM @RESULT
WHERE ISNULL(DOC2_QTY,0) - ISNULL(DOC1_QTY,0)<>0 
OR ISNULL(DOC2_PRICE,0) - ISNULL(DOC1_PRICE,0)<>0
ORDER BY 1 ASC, DOC1_QTY DESC
RETURN
GO
