SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_BEST_BEFORE_246_HELPER') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_BEST_BEFORE_246_HELPER AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_BEST_BEFORE_246_HELPER
	@ID_LOT_GLOBAL UNIQUEIDENTIFIER, @QUANTITY MONEY OUTPUT AS

DECLARE @ID_PARENT UNIQUEIDENTIFIER

SELECT @ID_PARENT = ID_PARENT FROM LOT WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL

WHILE (@ID_PARENT IS NOT NULL)
BEGIN
	SET @ID_LOT_GLOBAL = @ID_PARENT
	SELECT
		@ID_PARENT = ID_PARENT
	FROM LOT WHERE ID_LOT_GLOBAL = @ID_PARENT
	IF (@@ROWCOUNT = 0)
		BREAK
END

IF ((SELECT ID_TABLE FROM LOT WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL) = 30)
BEGIN
SELECT
	@QUANTITY = QUANTITY
FROM IMPORT_REMAINS_ITEM 
WHERE ID_IMPORT_REMAINS_ITEM_GLOBAL = (SELECT ID_DOCUMENT_ITEM FROM LOT WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL)
END
ELSE
BEGIN
SELECT
	@QUANTITY = II.QUANTITY
FROM INVOICE I INNER JOIN INVOICE_ITEM II ON II.ID_INVOICE_GLOBAL = I.ID_INVOICE_GLOBAL
WHERE I.ID_INVOICE_GLOBAL = (SELECT ID_DOCUMENT FROM LOT WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL)
	AND II.ID_INVOICE_ITEM_GLOBAL = (SELECT ID_DOCUMENT_ITEM FROM LOT WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL)
END

RETURN 0
GO

IF OBJECT_ID('DBO.REPEX_BEST_BEFORE_246') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_BEST_BEFORE_246 AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_BEST_BEFORE_246
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT

DECLARE @DATE DATETIME
DECLARE @DATE6 DATETIME
DECLARE @DATE4 DATETIME
DECLARE @DATE2 DATETIME

DECLARE @ALL_STORES BIT

DECLARE @STORES TABLE(
	ID_CONTRACTOR BIGINT,
	ID_STORE BIGINT
	)
--DECLARE	@ORDER_BY varchar(512)

--set @ORDER_BY =''

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT @DATE = DATE_N
FROM OPENXML(@HDOC , '/XML') WITH(DATE_N DATETIME 'DATE_N')

INSERT INTO @STORES
SELECT
	S.ID_CONTRACTOR,
	A.ID_STORE
FROM OPENXML(@HDOC, '/XML/ID_STORE') WITH(ID_STORE BIGINT '.') A
	INNER JOIN STORE S ON S.ID_STORE = A.ID_STORE

INSERT INTO @STORES
SELECT
	A.ID_CONTRACTOR,
	S.ID_STORE
FROM OPENXML(@HDOC, '/XML/ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.') A
	INNER JOIN STORE S ON S.ID_CONTRACTOR = A.ID_CONTRACTOR	AND NOT EXISTS (SELECT NULL FROM @STORES S1 WHERE S1.ID_CONTRACTOR = A.ID_CONTRACTOR)

IF ((SELECT COUNT(*) FROM @STORES) = 0)
	SET @ALL_STORES = 1
	
	/*SELECT TOP 1 @ORDER_BY = ORDER_BY
	FROM OPENXML(@HDOC, '/XML') 
	WITH(ORDER_BY varchar(512) 'ORDER_BY')	*/

EXEC SP_XML_REMOVEDOCUMENT @HDOC

SET @DATE6 = DATEADD(MONTH, 6, @DATE)
SET @DATE4 = DATEADD(MONTH, 4, @DATE)
SET @DATE2 = DATEADD(MONTH, 2, @DATE)

EXEC DBO.REP_RANGEDAY @DATE OUT, @DATE6 OUT
EXEC DBO.REP_RANGEDAY @DATE OUT, @DATE4 OUT
EXEC DBO.REP_RANGEDAY @DATE OUT, @DATE2 OUT
EXEC DBO.REP_RANGEDAY @DATE OUT, @DATE OUT

--select @date, @date2, @date4, @date6

SELECT
	ID_LOT_GLOBAL,
	DOC_NUM = ISNULL(L.INVOICE_NUM, '') + COALESCE(' от ' + CONVERT(VARCHAR, L.INVOICE_DATE, 104), ''),
	GOODS_NAME = G.NAME,
	SUPPLIER = C.NAME,
	REMAIN6 = CASE WHEN S.BEST_BEFORE < @DATE6 AND S.BEST_BEFORE > @DATE4 THEN L.QUANTITY_REM * SR.NUMERATOR / SR.DENOMINATOR ELSE 0 END,
	REMAIN4 = CASE WHEN S.BEST_BEFORE < @DATE4 AND S.BEST_BEFORE > @DATE2 THEN L.QUANTITY_REM * SR.NUMERATOR / SR.DENOMINATOR ELSE 0 END,
	REMAIN2 = CASE WHEN S.BEST_BEFORE < @DATE2 AND S.BEST_BEFORE > @DATE THEN L.QUANTITY_REM * SR.NUMERATOR / SR.DENOMINATOR ELSE 0 END,
	BEST_BEFORE =  CAST(S.BEST_BEFORE AS VARCHAR(20)),
	BARCODE = L.INTERNAL_BARCODE
INTO #temp_t
FROM LOT AS L
	INNER JOIN GOODS AS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN CONTRACTOR AS C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	INNER JOIN SCALING_RATIO AS SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	LEFT JOIN SERIES AS S ON S.ID_SERIES = L.ID_SERIES
WHERE L.ID_SERIES IS NOT NULL
	AND (@ALL_STORES = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM @STORES))
	AND (CASE WHEN S.BEST_BEFORE <= @DATE6 AND S.BEST_BEFORE > @DATE4 THEN L.QUANTITY_REM * SR.NUMERATOR / SR.DENOMINATOR ELSE 0 END > 0
	OR CASE WHEN S.BEST_BEFORE <= @DATE4 AND S.BEST_BEFORE > @DATE2 THEN L.QUANTITY_REM * SR.NUMERATOR / SR.DENOMINATOR ELSE 0 END > 0
	OR CASE WHEN S.BEST_BEFORE <= @DATE2 AND S.BEST_BEFORE > @DATE THEN L.QUANTITY_REM * SR.NUMERATOR / SR.DENOMINATOR ELSE 0 END > 0)
/*ORDER BY 
  CASE @ORDER_BY
         WHEN 'order by GOODS_NAME' THEN G.NAME         
         ELSE '1'
      END,
CASE @ORDER_BY
         WHEN 'order by BEST_BEFORE' THEN  S.BEST_BEFORE
         ELSE getdate()
      END */     

DECLARE @TEMP TABLE
(
	ID_LOT_GLOBAL UNIQUEIDENTIFIER,
	DOC_NUM VARCHAR(60),
	GOODS_NAME VARCHAR(255),
	SUPPLIER VARCHAR(100),
	REMAIN6 MONEY,
	REMAIN4 MONEY,
	REMAIN2 MONEY,
    BEST_BEFORE VARCHAR(20),
    BARCODE VARCHAR(40)
)

-- 2 MONTHS
INSERT INTO @TEMP(ID_LOT_GLOBAL, DOC_NUM, GOODS_NAME, SUPPLIER, REMAIN6, REMAIN4, REMAIN2, BEST_BEFORE, BARCODE)
SELECT ID_LOT_GLOBAL, DOC_NUM, GOODS_NAME, SUPPLIER, REMAIN6, REMAIN4, REMAIN2, BEST_BEFORE, BARCODE
FROM #temp_t
WHERE REMAIN2 > 0
ORDER BY GOODS_NAME, REMAIN2
/*CASE @ORDER_BY
         WHEN 'order by GOODS_NAME' THEN GOODS_NAME        
         ELSE '1'
      END,
CASE @ORDER_BY
         WHEN 'order by BEST_BEFORE' THEN  BEST_BEFORE
         ELSE getdate()
      END */ 

--4 MONTHS
INSERT INTO @TEMP(ID_LOT_GLOBAL, DOC_NUM, GOODS_NAME, SUPPLIER, REMAIN6, REMAIN4, REMAIN2, BEST_BEFORE, BARCODE)
SELECT ID_LOT_GLOBAL, DOC_NUM, GOODS_NAME, SUPPLIER, REMAIN6, REMAIN4, REMAIN2, BEST_BEFORE, BARCODE
FROM #temp_t
WHERE REMAIN4 > 0
ORDER BY GOODS_NAME, REMAIN4
/*CASE @ORDER_BY
         WHEN 'order by GOODS_NAME' THEN GOODS_NAME        
         ELSE '1'
      END,
CASE @ORDER_BY
         WHEN 'order by BEST_BEFORE' THEN  BEST_BEFORE
         ELSE getdate()
      END*/

-- 6 MONTHS
INSERT INTO @TEMP(ID_LOT_GLOBAL, DOC_NUM, GOODS_NAME, SUPPLIER, REMAIN6, REMAIN4, REMAIN2, BEST_BEFORE, BARCODE)
SELECT ID_LOT_GLOBAL, DOC_NUM, GOODS_NAME, SUPPLIER, REMAIN6, REMAIN4, REMAIN2, BEST_BEFORE, BARCODE
FROM #temp_t
WHERE REMAIN6 > 0
ORDER BY GOODS_NAME, REMAIN6
/*CASE @ORDER_BY
         WHEN 'order by GOODS_NAME' THEN GOODS_NAME        
         ELSE '1'
      END,
CASE @ORDER_BY
         WHEN 'order by BEST_BEFORE' THEN  BEST_BEFORE
         ELSE getdate()
      END*/

--select * from #temp_t
--alter table #temp_t drop column invoice_num, invoice_date

DECLARE @RESULT TABLE
(
	GOODS_NAME VARCHAR(255),
	DOC_NUM VARCHAR(60),
	SUPPLIER VARCHAR(100),
	QUANTITY MONEY,
	REMAIN6 MONEY,
	REMAIN4 MONEY,
	REMAIN2 MONEY,
    BEST_BEFORE VARCHAR(20),
    BARCODE VARCHAR(40)
)

DECLARE LOTS_CURSOR CURSOR FOR SELECT * FROM @TEMP

DECLARE @ID_LOT_GLOBAL UNIQUEIDENTIFIER
DECLARE @DOC_NUM VARCHAR(320)
DECLARE @GOODS_NAME VARCHAR(255)
DECLARE @SUPPLIER VARCHAR(100)
DECLARE @QUANTITY MONEY
DECLARE @REMAIN6 MONEY
DECLARE @REMAIN4 MONEY
DECLARE @REMAIN2 MONEY
DECLARE @BEST_BEFORE VARCHAR(20)
DECLARE @BARCODE VARCHAR(40)

OPEN LOTS_CURSOR

FETCH NEXT FROM LOTS_CURSOR INTO @ID_LOT_GLOBAL, @DOC_NUM, @GOODS_NAME, @SUPPLIER, @REMAIN6, @REMAIN4, @REMAIN2, @BEST_BEFORE, @BARCODE

WHILE @@FETCH_STATUS = 0
BEGIN

EXEC REPEX_BEST_BEFORE_246_HELPER @id_lot_global = @ID_LOT_GLOBAL, @quantity = @QUANTITY OUTPUT

INSERT INTO @RESULT VALUES(@GOODS_NAME, @DOC_NUM, @SUPPLIER, @QUANTITY, @REMAIN6, @REMAIN4, @REMAIN2, @BEST_BEFORE, @BARCODE)

FETCH NEXT FROM LOTS_CURSOR INTO @ID_LOT_GLOBAL, @DOC_NUM, @GOODS_NAME, @SUPPLIER, @REMAIN6, @REMAIN4, @REMAIN2, @BEST_BEFORE, @BARCODE
END

CLOSE LOTS_CURSOR
DEALLOCATE LOTS_CURSOR

select * from @result

DECLARE @CONTRACTOR_STRING VARCHAR(4000)
DECLARE @STORE_STRING VARCHAR(4000)

SELECT
	@STORE_STRING = ISNULL(@STORE_STRING+' ,'+S.NAME, S.NAME)
FROM (SELECT DISTINCT ID_STORE FROM @STORES) T
	INNER JOIN STORE S ON S.ID_STORE = T.ID_STORE

SELECT 
	@CONTRACTOR_STRING = ISNULL(@CONTRACTOR_STRING+' ,'+C.NAME, C.NAME)
FROM (SELECT DISTINCT ID_CONTRACTOR FROM @STORES) T
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR

SELECT
	CONTRACTORS = ISNULL(@CONTRACTOR_STRING, '(по всем)'),
	STORES = ISNULL(@STORE_STRING, '(по всем)')

RETURN 0

GO

/*
EXEC REPEX_BEST_BEFORE_246 N'
<XML>
	<DATE_N>2009-06-01T17:23:28.031</DATE_N>
</XML>'*/

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'BestBefore246Ex.BestBefore246Params'