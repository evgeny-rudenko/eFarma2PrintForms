SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID(N'dbo.FN_REPEX_BEST_BEFORE_RIGLA_HELPER', N'FN') IS NOT NULL 
DROP FUNCTION dbo.FN_REPEX_BEST_BEFORE_RIGLA_HELPER
GO

CREATE FUNCTION dbo.FN_REPEX_BEST_BEFORE_RIGLA_HELPER
    (@ID_LOT_GLOBAL UNIQUEIDENTIFIER) RETURNS VARCHAR(4000) AS
BEGIN

DECLARE @RESULT VARCHAR(4000)

SELECT 
    @RESULT = ISNULL(@RESULT + '; ' + CONVERT(VARCHAR(12), DATE_OP, 104), CONVERT(VARCHAR(12), DATE_OP, 104))
FROM LOT_MOVEMENT
WHERE ID_LOT_GLOBAL = @ID_LOT_GLOBAL AND CODE_OP = 'ACT_REV'

RETURN @RESULT

END
GO

IF OBJECT_ID('DBO.REPEX_BEST_BEFORE_RIGLA') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_BEST_BEFORE_RIGLA AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_BEST_BEFORE_RIGLA
	(@XMLPARAM NTEXT) AS 

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @USE_DATE BIT
--DECLARE @SORT BIT
DECLARE @ALL_STORES BIT
DECLARE @ALL_CONTRACTORS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@USE_DATE = USE_DATE
	--,@SORT = SORT
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	USE_DATE BIGINT 'USE_DATE'
	--,SORT BIT 'SORT'
	)

SELECT * INTO #STORES FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES = 1

SELECT * INTO #CONTRACTORS FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTORS = 1
			
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
/*
select @date_fr, @date_to, @use_date
select * from #contractors
select * from #stores
*/

IF (@USE_DATE = 1)
BEGIN
SELECT 
	CONTRACTOR_NAME = CT.NAME,
	STORE_NAME = ST.NAME,
	GOODS_CODE = G.CODE,
	GOODS_NAME = G.NAME,
	QUANTITY = L.QUANTITY_ADD - L.QUANTITY_SUB,
	UNIT_NAME = U.NAME + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)),
	SUPPLIER_NAME = SP.NAME,
	PRICE_SUP = L.PRICE_SUP - L.PVAT_SUP,
	PRICE_SAL = L.PRICE_SAL,
	INVOICE_DATE = L.INVOICE_DATE,
	BEST_BEFORE = S.BEST_BEFORE,
	BARCODE = L.INTERNAL_BARCODE,
	REVAL_DATES = DBO.FN_REPEX_BEST_BEFORE_RIGLA_HELPER(L.ID_LOT_GLOBAL)
FROM LOT AS L
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	INNER JOIN CONTRACTOR CT ON CT.ID_CONTRACTOR = ST.ID_CONTRACTOR
	INNER JOIN GOODS AS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN CONTRACTOR AS SP ON SP.ID_CONTRACTOR = L.ID_SUPPLIER
	INNER JOIN SCALING_RATIO AS SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
	LEFT JOIN SERIES AS S ON S.ID_SERIES = L.ID_SERIES
WHERE S.BEST_BEFORE BETWEEN @DATE_FR AND @DATE_TO
	AND (@ALL_CONTRACTORS = 1 OR CT.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS))
	AND (@ALL_STORES = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND L.QUANTITY_ADD - L.QUANTITY_SUB > 0
ORDER BY CT.NAME, G.NAME, S.BEST_BEFORE
--CASE WHEN @SORT = 1 THEN G.NAME ELSE NULL END, S.BEST_BEFORE
END
ELSE
BEGIN
SELECT 
	CONTRACTOR_NAME = CT.NAME,
	STORE_NAME = ST.NAME,
	GOODS_CODE = G.CODE,
	GOODS_NAME = G.NAME,
	QUANTITY = L.QUANTITY_ADD - L.QUANTITY_SUB,
	UNIT_NAME = U.NAME + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)),
	SUPPLIER_NAME = SP.NAME,
	PRICE_SUP = L.PRICE_SUP - L.PVAT_SUP,
	PRICE_SAL = L.PRICE_SAL,
	INVOICE_DATE = L.INVOICE_DATE,
	BEST_BEFORE = S.BEST_BEFORE,
	BARCODE = L.INTERNAL_BARCODE,
	REVAL_DATES = DBO.FN_REPEX_BEST_BEFORE_RIGLA_HELPER(L.ID_LOT_GLOBAL), L.ID_LOT_GLOBAL
FROM LOT AS L
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	INNER JOIN CONTRACTOR CT ON CT.ID_CONTRACTOR = ST.ID_CONTRACTOR
	INNER JOIN GOODS AS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN CONTRACTOR AS SP ON SP.ID_CONTRACTOR = L.ID_SUPPLIER
	INNER JOIN SCALING_RATIO AS SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
	LEFT JOIN SERIES AS S ON S.ID_SERIES = L.ID_SERIES
WHERE S.BEST_BEFORE IS NULL
	AND (@ALL_CONTRACTORS = 1 OR CT.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS))
	AND (@ALL_STORES = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND L.QUANTITY_ADD - L.QUANTITY_SUB > 0
ORDER BY CT.NAME, G.NAME, S.BEST_BEFORE
--CASE WHEN @SORT = 1 THEN G.NAME ELSE NULL END, S.BEST_BEFORE
END

SELECT 
	SELF_NAME = CASE WHEN ISNULL(C.FULL_NAME, '') = '' THEN C.NAME ELSE C.FULL_NAME END
FROM REPLICATION_CONFIG AS RC 
	INNER JOIN CONTRACTOR AS C ON RC.ID_CONTRACTOR_GLOBAL = C.ID_CONTRACTOR_GLOBAL
WHERE RC.IS_SELF = 1
 
RETURN 0
GO

/*
exec REPEX_BEST_BEFORE_RIGLA N'
<XML>
	<DATE_FR>2009-12-01T00:00:00.000</DATE_FR>
	<DATE_TO>2009-12-31T00:00:00.000</DATE_TO>
	<SORT>0</SORT>
	<USE_DATE>0</USE_DATE>
</XML>'*/


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'BestBefore246Ex.BestBefore246Params'