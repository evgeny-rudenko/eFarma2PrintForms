SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REPEX_MARGIN_CONTROL') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_MARGIN_CONTROL AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_MARGIN_CONTROL
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @MARGIN INT
DECLARE @IMPORTANT BIT
DECLARE @ALL_CONTRACTORS BIT
DECLARE @ALL_GOODS BIT
DECLARE @ALL_GOODS_GROUPS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@MARGIN = MARGIN,
	@IMPORTANT = IMPORTANT
FROM OPENXML(@HDOC, '/XML')
WITH (MARGIN INT 'MARGIN', IMPORTANT BIT 'IMPORTANT')

SELECT * INTO #CONTRACTORS FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTORS = 1

SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//ID_GOODS') WITH(ID_GOODS BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_GOODS = 1

SELECT * INTO #GOODS_GROUPS FROM OPENXML(@HDOC, '//ID_GOODS_GROUP') WITH(ID_GOODS_GROUP BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_GOODS_GROUPS = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT
	CONTRACTOR_NAME = CT.NAME,
	GOODS_CODE = G.CODE,
	GOODS_NAME = G.NAME,
	LOT_NAME = L.LOT_NAME,
	REMAIN = L.QUANTITY_ADD - L.QUANTITY_SUB,
	PRICE_SUP = L.PRICE_SUP,
	PRICE_SAL = L.PRICE_SAL,
	MARGIN = CASE WHEN L.PRICE_SUP = 0 THEN NULL ELSE (L.PRICE_SAL / L.PRICE_SUP - 1) * 100 END,
	MARGIN_EX = CASE WHEN L.PRICE_SUP = 0 THEN NULL ELSE (L.PRICE_SAL / L.PRICE_SUP - 1) * 100 - @MARGIN END
FROM LOT L
	INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
	INNER JOIN CONTRACTOR CT ON CT.ID_CONTRACTOR = S.ID_CONTRACTOR
	LEFT JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS = G.ID_GOODS
WHERE L.QUANTITY_REM > 0 AND (L.PRICE_SUP = 0 OR (L.PRICE_SAL / L.PRICE_SUP - 1) * 100 - @MARGIN > 0)
	AND (@ALL_CONTRACTORS = 1 OR (CT.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTORS)))
	AND (@ALL_GOODS = 1 OR (G.ID_GOODS IN (SELECT * FROM #GOODS)))
	AND (@ALL_GOODS_GROUPS = 1 OR (G2G.ID_GOODS_GROUP IN (SELECT * FROM #GOODS_GROUPS)))
	AND (@IMPORTANT = 0 OR G.IMPORTANT = 1)
GROUP BY CT.NAME, G.CODE, G.NAME, L.LOT_NAME, L.QUANTITY_ADD - L.QUANTITY_SUB, L.PRICE_SUP, L.PRICE_SAL,
	CASE WHEN L.PRICE_SUP = 0 THEN NULL ELSE (L.PRICE_SAL / L.PRICE_SUP - 1) * 100 END,
	CASE WHEN L.PRICE_SUP = 0 THEN NULL ELSE (L.PRICE_SAL / L.PRICE_SUP - 1) * 100 - @MARGIN END
ORDER BY G.NAME

DECLARE @GROUPS VARCHAR(4000)

IF (@ALL_GOODS_GROUPS = 1)
BEGIN
SELECT GOODS_GROUPS = 'по всем'
END
ELSE
BEGIN
SELECT 
	@GROUPS = ISNULL(@GROUPS + ', ' + G.NAME, G.NAME)
FROM (SELECT DISTINCT ID_GOODS_GROUP FROM #GOODS_GROUPS) T
	INNER JOIN GOODS_GROUP G ON G.ID_GOODS_GROUP = T.ID_GOODS_GROUP

SELECT GOODS_GROUPS = @GROUPS

END

RETURN 0

GO

/*
EXEC REPEX_MARGIN_CONTROL N'
<XML>
	<MARGIN>36</MARGIN>
	<IMPORTANT>0</IMPORTANT>
</XML>'*/

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'MarginControl.MarginControlParams'