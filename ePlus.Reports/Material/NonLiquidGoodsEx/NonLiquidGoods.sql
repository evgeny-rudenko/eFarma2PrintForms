SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_NON_LIQUID_GOODS') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_NON_LIQUID_GOODS AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_NON_LIQUID_GOODS
    @XMLPARAM NTEXT AS
    
DECLARE @HDOC INT
DECLARE @DATE_FROM DATETIME, @DATE_TO DATETIME, @ALL_STORES BIT, @SHOW_LOTS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT 
	@DATE_FROM = DATE_FROM,
	@DATE_TO = DATE_TO,
	@SHOW_LOTS = SHOW_LOTS
FROM OPENXML(@HDOC, 'XML', 2) WITH (
	DATE_FROM DATETIME,
	DATE_TO DATETIME,
	SHOW_LOTS BIT
)
    
SELECT ID_STORE = STORE INTO #STORES FROM OPENXML(@HDOC, '/XML/STORE') WITH(STORE BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT

SELECT DISTINCT
	ID_GOODS 
into #t
FROM LOT L WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES))) 
		AND ((EXISTS (SELECT *
			FROM LOT_MOVEMENT LM
			WHERE CODE_OP IN ('CHEQUE', 'INVOICE_OUT')
				AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO
				AND LM.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL)) AND ((SELECT SUM(LMM.QUANTITY_ADD - LMM.QUANTITY_SUB) FROM LOT_MOVEMENT LMM INNER JOIN LOT L1 ON L1.ID_LOT_GLOBAL = LMM.ID_LOT_GLOBAL WHERE L1.ID_GOODS = L.ID_GOODS AND L1.ID_STORE = L.ID_STORE AND (LMM.CODE_OP = 'CHEQUE' OR LMM.CODE_OP = 'ACT_R2B' OR LMM.CODE_OP = 'INVOICE_OUT')) = 0))

--select * from #t

SELECT DISTINCT
	ID_GOODS 
into #temp
FROM LOT L WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES))) 
	AND (EXISTS (SELECT *
		FROM LOT_MOVEMENT LM
		WHERE CODE_OP IN ('CHEQUE', 'INVOICE_OUT')
			AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO
			AND LM.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL))
	AND (L.ID_GOODS NOT IN (SELECT id_goods from #t))

--select * from #temp

SELECT DISTINCT
	L.ID_GOODS
into #temp_t
FROM LOT L
WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND ID_GOODS NOT IN (select ID_GOODS from #temp)

--select * from #temp_t

SELECT
	T.ID_GOODS,
	G_CODE = G.CODE,
	GOODS = CASE WHEN @SHOW_LOTS = 1 THEN G.NAME + ' ' + L.LOT_NAME ELSE G.NAME END,
	PRODUCER = P.NAME,
	STORE = S.NAME,
	QTY_REMAIN = L.QUANTITY_REM * CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY, SR.DENOMINATOR),
	PRICE_SUP = L.PRICE_SUP - L.PVAT_SUP,
	PRICE_SAL = L.PRICE_SAL
FROM #temp_t T
	INNER JOIN GOODS G ON G.ID_GOODS = T.ID_GOODS
	INNER JOIN LOT L ON L.ID_GOODS = T.ID_GOODS
	INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
	INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND L.QUANTITY_REM > 0
ORDER BY CASE WHEN @SHOW_LOTS = 1 THEN G.NAME + L.LOT_NAME ELSE G.NAME END


DECLARE @CONTRACTORS VARCHAR(4000)
set @CONTRACTORS=''
if ((SELECT COUNT(*) FROM #STORES)<>0)
	begin
		select
			@CONTRACTORS = @CONTRACTORS + ISNULL(NAME+', ', '')
			from
				(
					SELECT DISTINCT	C.NAME
					FROM CONTRACTOR C
						INNER JOIN STORE S ON S.ID_CONTRACTOR = C.ID_CONTRACTOR
					WHERE (@ALL_STORES = 1 OR (S.ID_STORE IN (SELECT ID_STORE FROM #STORES))) 
				) c
	end
   else 
   set @CONTRACTORS='(по всем)'
SELECT CONTRACTORS = @CONTRACTORS

RETURN 0
GO

/*
exec REPEX_NON_LIQUID_GOODS N'
<XML>
	<DATE_FROM>2009-05-21T11:13:02.453</DATE_FROM>
	<DATE_TO>2009-05-21T11:13:02.453</DATE_TO>
	<SHOW_LOTS>1</SHOW_LOTS>
	<STORE>166</STORE>
</XML>'*/


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID(N'dbo.FN_REPEX_NON_LIQUID_GOODS_PERIOD_HELPER', N'FN') IS NOT NULL 
DROP FUNCTION dbo.FN_REPEX_NON_LIQUID_GOODS_PERIOD_HELPER
GO

CREATE FUNCTION dbo.FN_REPEX_NON_LIQUID_GOODS_PERIOD_HELPER
    (@ID_GOODS BIGINT)
RETURNS VARCHAR(128)
AS
BEGIN

DECLARE @RESULT VARCHAR(128)

DECLARE @COUNT_GROUPS INT
SELECT @COUNT_GROUPS = COUNT(*) FROM GOODS_2_GROUP WHERE ID_GOODS = @ID_GOODS AND DATE_DELETED IS NULL

IF (@COUNT_GROUPS = 0) 
BEGIN
	SET @RESULT = 'Товар без группы'
END
ELSE IF (@COUNT_GROUPS = 1)
BEGIN
	SELECT @RESULT = NAME 
	FROM GOODS_GROUP GG
		INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP 
	WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL
END
ELSE
BEGIN
	SELECT @RESULT = NAME
	FROM GOODS_GROUP GG
		INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP
	WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL AND GG.ID_PARENT_GROUP IS NOT NULL
		AND GG.ID_GOODS_GROUP = (SELECT MAX(GG.ID_GOODS_GROUP) FROM GOODS_GROUP GG INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL)
END

IF (@RESULT IS NULL)
BEGIN
	SELECT @RESULT = MAX(NAME)
	FROM GOODS_GROUP GG
		INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP
	WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL
END

RETURN @RESULT

END
GO

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_NON_LIQUID_GOODS_PERIOD') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_NON_LIQUID_GOODS_PERIOD AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_NON_LIQUID_GOODS_PERIOD
    @XMLPARAM NTEXT AS
    
DECLARE @HDOC INT
DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ALL_STORES BIT
DECLARE @TIME INT
DECLARE @PERCENT INT
DECLARE @GROUPS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT 
	@DATE_FROM = DATE_FROM,
	@DATE_TO = DATE_TO,
	@TIME = TIME,
	@PERCENT = [PERCENT],
	@GROUPS = GROUPS
FROM OPENXML(@HDOC, 'XML', 2) WITH (
	DATE_FROM DATETIME,
	DATE_TO DATETIME,
	TIME INT,
	[PERCENT] INT,
	GROUPS BIT
)
    
SELECT ID_STORE = STORE INTO #STORES FROM OPENXML(@HDOC, '/XML/STORE') WITH(STORE BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES = 1

SELECT * INTO #docs
FROM OPENXML(@HDOC, '/XML/DOC') WITH(DOC NVARCHAR(20) '.')

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT

--select * from #docs

--select @time, @percent, @groups

SELECT DISTINCT
	ID_GOODS 
into #t
FROM LOT L WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES))) 
		AND ((EXISTS (SELECT *
			FROM LOT_MOVEMENT LM
			WHERE CODE_OP IN (SELECT DOC FROM #DOCS)
				AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO
				AND LM.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL)) AND ((SELECT SUM(LMM.QUANTITY_ADD - LMM.QUANTITY_SUB) FROM LOT_MOVEMENT LMM INNER JOIN LOT L1 ON L1.ID_LOT_GLOBAL = LMM.ID_LOT_GLOBAL WHERE L1.ID_GOODS = L.ID_GOODS AND L1.ID_STORE = L.ID_STORE AND (LMM.CODE_OP = 'CHEQUE' OR LMM.CODE_OP = 'ACT_R2B' OR LMM.CODE_OP = 'INVOICE_OUT')) = 0))


--select * from #t

SELECT DISTINCT
	ID_GOODS 
into #temp
FROM LOT L WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES))) 
	AND (EXISTS (SELECT *
		FROM LOT_MOVEMENT LM
		WHERE CODE_OP IN (SELECT DOC FROM #DOCS)
			AND DATE_OP BETWEEN @DATE_FROM AND @DATE_TO
			AND LM.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL))
	AND (L.ID_GOODS NOT IN (SELECT id_goods from #t))

--select * from #temp

SELECT DISTINCT
	L.ID_GOODS
into #temp_t
FROM LOT L
WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND ID_GOODS NOT IN (select ID_GOODS from #temp)

--select * from #temp_t

DECLARE @TODAY DATETIME
SET @TODAY = GETDATE()

SELECT
	--T.ID_GOODS,
	GOODS = G.NAME,
	GOODS_GROUP = dbo.FN_REPEX_NON_LIQUID_GOODS_PERIOD_HELPER(T.ID_GOODS),
	INCOMING_DATE = L.INVOICE_DATE,
	DAYS = DATEDIFF(day, L.INVOICE_DATE, @TODAY),
	QUANTITY_REM = L.QUANTITY_REM,
	QUANTITY_PER = L.QUANTITY_REM / (SELECT SUM(QUANTITY_ADD) FROM LOT_MOVEMENT WHERE ID_LOT_GLOBAL = L.ID_LOT_GLOBAL) * 100
	--LAST_DATE = (SELECT MAX(DATE_OP) FROM LOT_MOVEMENT WHERE ID_LOT_GLOBAL = L.ID_LOT_GLOBAL AND (DATE_OP BETWEEN @DATE_FROM AND @DATE_TO) AND CODE_OP IN (SELECT DOC FROM #DOCS))
into #temp_t2
FROM #temp_t T
	INNER JOIN GOODS G ON G.ID_GOODS = T.ID_GOODS
	INNER JOIN LOT L ON L.ID_GOODS = T.ID_GOODS
	INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
	INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND L.QUANTITY_REM > 0

--select * from #temp_t2


IF (@GROUPS = 1)
BEGIN

select
	GOODS_GROUP = CASE WHEN ISNULL(GOODS_GROUP, '') = '' THEN 'Товар без группы' ELSE GOODS_GROUP END,
	INCOMING_DATE = NULL,
	DAYS = AVG(DAYS),
	QUANTITY_REM = AVG(QUANTITY_REM),
	QUANTITY_PER = AVG(QUANTITY_PER)
from #temp_t2
group by goods_group
having avg(days) > @time and avg(QUANTITY_PER) > @percent
order by CASE WHEN ISNULL(GOODS_GROUP, '') = '' THEN 'Товар без группы' ELSE GOODS_GROUP END

END
ELSE
BEGIN

select
	GOODS_GROUP = GOODS,
	INCOMING_DATE = INCOMING_DATE,
	DAYS = DAYS,
	QUANTITY_REM = QUANTITY_REM,
	QUANTITY_PER = QUANTITY_PER
from #temp_t2
where quantity_per > @PERCENT and days > @TIME
order by goods

END

RETURN 0
GO

/*
exec REPEX_NON_LIQUID_GOODS_PERIOD N'
<XML>
	<DATE_FROM>2010-01-01T11:13:02.453</DATE_FROM>
	<DATE_TO>2010-03-01T11:13:02.453</DATE_TO>
	<STORE>166</STORE>
	<STORE>167</STORE>
	<DOC>MOVE</DOC>
	<DOC>INVOICE_OUT</DOC>
	<DOC>CHEQUE</DOC>
	<TIME>270</TIME>
	<PERCENT>40</PERCENT>
	<GROUPS>1</GROUPS>
</XML>'*/


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID(N'dbo.FN_REPEX_NON_LIQUID_GOODS_NO_PERIOD_HELPER', N'FN') IS NOT NULL 
DROP FUNCTION dbo.FN_REPEX_NON_LIQUID_GOODS_NO_PERIOD_HELPER
GO

CREATE FUNCTION dbo.FN_REPEX_NON_LIQUID_GOODS_NO_PERIOD_HELPER
    (@ID_GOODS BIGINT)
RETURNS VARCHAR(128)
AS
BEGIN

DECLARE @RESULT VARCHAR(128)

DECLARE @COUNT_GROUPS INT
SELECT @COUNT_GROUPS = COUNT(*) FROM GOODS_2_GROUP WHERE ID_GOODS = @ID_GOODS AND DATE_DELETED IS NULL

IF (@COUNT_GROUPS = 0) 
BEGIN
	SET @RESULT = 'Товар без группы'
END
ELSE IF (@COUNT_GROUPS = 1)
BEGIN
	SELECT @RESULT = NAME 
	FROM GOODS_GROUP GG
		INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP 
	WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL
END
ELSE
BEGIN
	SELECT @RESULT = NAME
	FROM GOODS_GROUP GG
		INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP
	WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL AND GG.ID_PARENT_GROUP IS NOT NULL
		AND GG.ID_GOODS_GROUP = (SELECT MAX(GG.ID_GOODS_GROUP) FROM GOODS_GROUP GG INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL)
END

IF (@RESULT IS NULL)
BEGIN
	SELECT @RESULT = MAX(NAME)
	FROM GOODS_GROUP GG
		INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP
	WHERE G2G.ID_GOODS = @ID_GOODS  AND GG.DATE_DELETED IS NULL
END

RETURN @RESULT

END
GO

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_NON_LIQUID_GOODS_NO_PERIOD') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_NON_LIQUID_GOODS_NO_PERIOD AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_NON_LIQUID_GOODS_NO_PERIOD
    @XMLPARAM NTEXT AS
    
DECLARE @HDOC INT
DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ALL_STORES BIT
DECLARE @TIME INT
DECLARE @PERCENT INT
DECLARE @GROUPS BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT 
	@DATE_FROM = DATE_FROM,
	@DATE_TO = DATE_TO,
	@TIME = TIME,
	@PERCENT = [PERCENT],
	@GROUPS = GROUPS
FROM OPENXML(@HDOC, 'XML', 2) WITH (
	DATE_FROM DATETIME,
	DATE_TO DATETIME,
	TIME INT,
	[PERCENT] INT,
	GROUPS BIT
)
    
SELECT ID_STORE = STORE INTO #STORES FROM OPENXML(@HDOC, '/XML/STORE') WITH(STORE BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES = 1

SELECT * INTO #docs
FROM OPENXML(@HDOC, '/XML/DOC') WITH(DOC NVARCHAR(20) '.')

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT

--select * from #docs

--select @time, @percent, @groups

SELECT DISTINCT
	ID_GOODS 
into #t
FROM LOT L 
	INNER JOIN LOT_MOVEMENT LM ON LM.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	--AND	LM.CODE_OP IN (SELECT DOC FROM #DOCS)

--select * from #t

DECLARE @TODAY DATETIME
SET @TODAY = GETDATE()

SELECT
	--T.ID_GOODS,
	GOODS = G.NAME,
	GOODS_GROUP = dbo.FN_REPEX_NON_LIQUID_GOODS_PERIOD_HELPER(T.ID_GOODS),
	INCOMING_DATE = L.INVOICE_DATE,
	DAYS = DATEDIFF(day, L.INVOICE_DATE, @TODAY),
	QUANTITY_REM = L.QUANTITY_REM,
	QUANTITY_PER = L.QUANTITY_REM / (SELECT SUM(QUANTITY_ADD) FROM LOT_MOVEMENT WHERE ID_LOT_GLOBAL = L.ID_LOT_GLOBAL) * 100,
	LAST_DATE = (SELECT MAX(DATE_OP) FROM LOT_MOVEMENT WHERE ID_LOT_GLOBAL = L.ID_LOT_GLOBAL AND (DATE_OP BETWEEN @DATE_FROM AND @DATE_TO) AND CODE_OP IN (SELECT DOC FROM #DOCS))
into #temp_t2
FROM #t T
	INNER JOIN GOODS G ON G.ID_GOODS = T.ID_GOODS
	INNER JOIN LOT L ON L.ID_GOODS = T.ID_GOODS
	INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
	INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
WHERE (@ALL_STORES = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND L.QUANTITY_REM > 0

--select * from #temp_t2

IF (@GROUPS = 1)
BEGIN

select
	GOODS_GROUP = CASE WHEN ISNULL(GOODS_GROUP, '') = '' THEN 'Товар без группы' ELSE GOODS_GROUP END,
	INCOMING_DATE = NULL,
	DAYS = AVG(DAYS),
	QUANTITY_REM = AVG(QUANTITY_REM),
	QUANTITY_PER = AVG(QUANTITY_PER)
from #temp_t2
group by goods_group
having avg(days) > @time and avg(QUANTITY_PER) > @percent
order by CASE WHEN ISNULL(GOODS_GROUP, '') = '' THEN 'Товар без группы' ELSE GOODS_GROUP END

END
ELSE
BEGIN

select
	GOODS_GROUP = GOODS,
	INCOMING_DATE = INCOMING_DATE,
	DAYS = DAYS,
	QUANTITY_REM = QUANTITY_REM,
	QUANTITY_PER = QUANTITY_PER,
	LAST_DATE = LAST_DATE
from #temp_t2
where quantity_per > @PERCENT and days > @TIME
order by goods

END

RETURN 0
GO

/*
exec REPEX_NON_LIQUID_GOODS_NO_PERIOD N'
<XML>
	<DATE_FROM>2010-01-01T11:13:02.453</DATE_FROM>
	<DATE_TO>2010-03-01T11:13:02.453</DATE_TO>
	<STORE>166</STORE>
	<STORE>167</STORE>
	<DOC>MOVE</DOC>
	<DOC>INVOICE_OUT</DOC>
	<DOC>CHEQUE</DOC>
	<TIME>50</TIME>
	<PERCENT>10</PERCENT>
	<GROUPS>1</GROUPS>
</XML>'*/



SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'NonLiquidGoodsEx.NonLiquidGoodsParams'