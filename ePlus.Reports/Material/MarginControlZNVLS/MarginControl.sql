SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID(N'dbo.FN_REPEX_MARGIN_CONTROL_ZNVLS_HELPER', N'FN') IS NOT NULL 
DROP FUNCTION dbo.FN_REPEX_MARGIN_CONTROL_ZNVLS_HELPER
GO

CREATE FUNCTION dbo.FN_REPEX_MARGIN_CONTROL_ZNVLS_HELPER
    (@ID_GOODS BIGINT)
RETURNS VARCHAR(4000)
AS
BEGIN

DECLARE @RESULT VARCHAR(4000)
SELECT 
    @RESULT = ISNULL(@RESULT + '; ' + NAME, ISNULL(NAME, ''))
FROM GOODS_GROUP GG
		INNER JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS_GROUP = GG.ID_GOODS_GROUP 
WHERE ID_GOODS = @ID_GOODS AND G2G.DATE_DELETED IS NULL AND GG.DATE_DELETED IS NULL
	AND ((G2G.ID_GOODS_GROUP IN (SELECT * FROM dbo.__gg)))

RETURN @RESULT

END
GO

IF OBJECT_ID('DBO.REPEX_MARGIN_CONTROL_ZNVLS') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_MARGIN_CONTROL_ZNVLS AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_MARGIN_CONTROL_ZNVLS
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @MARGIN INT
DECLARE @IMPORTANT BIT
DECLARE @ALL_CONTRACTORS BIT
DECLARE @ALL_GOODS BIT
DECLARE @ALL_GOODS_GROUPS BIT
DECLARE @ST INT
DECLARE @EMPTY BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@MARGIN = MARGIN,
	@IMPORTANT = IMPORTANT,
	@ST = ST,
	@EMPTY = EMPTY
FROM OPENXML(@HDOC, '/XML')
WITH (MARGIN INT 'MARGIN', IMPORTANT BIT 'IMPORTANT', ST INT 'ST', EMPTY BIT 'EMPTY')

SELECT * INTO #CONTRACTORS FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_CONTRACTORS = 1

--SELECT * INTO #ADPRICE FROM OPENXML(@HDOC, '//XML/ADPRICE') WITH(LOW MONEY '.', HIGH MONEY '.')

SELECT * INTO #ADPRICE FROM OPENXML(@HDOC,'//XML/ADPRICE', 2) WITH (
	LOW MONEY,
	HIGH MONEY,
	VALUE MONEY)

--select * from #adprice
--SELECT TOP 1 VALUE FROM #ADPRICE WHERE LOW < 9.1819 AND HIGH >= 9.1819

if exists (select * from INFORMATION_SCHEMA.TABLES where TABLE_SCHEMA = 'dbo' and TABLE_NAME='__gg')
begin 
    drop table dbo.__gg
end

create table dbo.__gg
(
	ID_GOODS_GROUP BIGINT
)

insert INTO dbo.__gg
select * FROM OPENXML(@HDOC, '//ID_GOODS_GROUP') WITH(ID_GOODS_GROUP BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_GOODS_GROUPS = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

create table #temp_t
(
	ACOD BIGINT,
	CONTRACTOR_NAME VARCHAR(100),
	SUPPLIER_NAME VARCHAR(100),
	INVOICE_NUM VARCHAR(300),
	INVOICE_DATE DATETIME,
	GOODS_CODE VARCHAR(16),
	GOODS_NAME VARCHAR(255),
	PRODUCER_NAME VARCHAR(100),
	INTERNAL_BARCODE VARCHAR(40),
	QUANTITY_REM MONEY,
	VAT_SAL MONEY,
	IMPORTANT CHAR(3),
	GROUP_NAME VARCHAR(4000),
	PRICE_PROD MONEY,
	PRICE_SUP MONEY,
	ADPRICE_SUP MONEY,
	MAX_PERC MONEY,
	PRICE_SAL MONEY,
	PRICE_SAL_MAX MONEY,
	VAT_RATE MONEY,
	
	_use_vat MONEY,
	_price_sup MONEY
)

insert into #temp_t
SELECT
	ACOD = CT.A_COD,
	CONTRACTOR_NAME = CT.NAME,
	SUPPLIER_NAME = SUP.NAME,
	INVOICE_NUM = ISNULL(L.INCOMING_NUM, L.INVOICE_NUM),
	INVOICE_DATE = ISNULL(L.INCOMING_DATE, L.INVOICE_DATE),
	GOODS_CODE = G.CODE,
	GOODS_NAME = G.NAME,
	PRODUCER_NAME = PR.NAME,
	INTERNAL_BARCODE = L.INTERNAL_BARCODE,
	QUANTITY_REM = L.QUANTITY_REM,
	VAT_SAL = L.VAT_SAL,
	IMPORTANT = CASE WHEN G.IMPORTANT = 1 THEN 'Да' ELSE 'Нет' END,
	GROUP_NAME = CASE WHEN @ALL_GOODS_GROUPS = 1 THEN NULL ELSE dbo.FN_REPEX_MARGIN_CONTROL_ZNVLS_HELPER(G.ID_GOODS) END,
	PRICE_PROD = L.PRICE_PROD,
	PRICE_SUP = L.PRICE_SUP - L.PVAT_SUP,
	ADPRICE_SUP = L.ADPRICE_SUP,
	MAX_PERC = (SELECT TOP 1 VALUE FROM #ADPRICE WHERE LOW < L.PRICE_PROD AND HIGH >= L.PRICE_PROD),
	PRICE_SAL = L.PRICE_SAL,
	PRICE_SAL_MAX = NULL,	
	VAT_RATE = TT.TAX_RATE,
	
	_use_vat = CT.USE_VAT,
	_price_sup = L.PRICE_SUP
FROM LOT L
	INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
	INNER JOIN CONTRACTOR CT ON CT.ID_CONTRACTOR = S.ID_CONTRACTOR
	INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = L.ID_SUPPLIER
	INNER JOIN PRODUCER PR ON PR.ID_PRODUCER = G.ID_PRODUCER
	LEFT JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS = G.ID_GOODS
	LEFT JOIN GOODS_GROUP GG ON GG.ID_GOODS_GROUP = G2G.ID_GOODS_GROUP
	LEFT JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = G.ID_TAX_TYPE
WHERE L.QUANTITY_REM > 0
	AND (@ALL_CONTRACTORS = 1 OR (CT.ID_CONTRACTOR IN (SELECT * FROM #CONTRACTORS)))
	AND (@ALL_GOODS_GROUPS = 1 OR (G2G.ID_GOODS_GROUP IN (SELECT * FROM dbo.__gg)))
	AND (@IMPORTANT = 0 OR G.IMPORTANT = 1)
	AND (@EMPTY = 1 OR PRICE_PROD <> 0)
	AND G2G.DATE_DELETED IS NULL AND GG.DATE_DELETED IS NULL
GROUP BY CT.A_COD, CT.NAME, SUP.NAME,
	ISNULL(L.INCOMING_NUM, L.INVOICE_NUM),
	ISNULL(L.INCOMING_DATE, L.INVOICE_DATE),
	G.CODE, G.NAME, PR.NAME, L.INTERNAL_BARCODE, L.QUANTITY_REM, L.VAT_SAL,
	CASE WHEN G.IMPORTANT = 1 THEN 'Да' ELSE 'Нет' END, G.ID_GOODS,
	L.PRICE_PROD, L.PRICE_SUP - L.PVAT_SUP, L.ADPRICE_SUP, L.PRICE_SAL,
	TT.TAX_RATE, CT.USE_VAT, L.PRICE_SUP
ORDER BY G.NAME

update #temp_t set PRICE_SAL_MAX = CASE WHEN _use_vat = 0 THEN round(_price_sup + (PRICE_PROD * MAX_PERC) / 100 * (1 + VAT_RATE / 100), 2, 1)
					ELSE round((PRICE_SUP + (PRICE_PROD * MAX_PERC) / 100) * (1 + VAT_RATE / 100), 2, 1) END

IF (@ST = 0)
BEGIN
	SELECT *
	FROM #temp_t WHERE PRICE_SAL > PRICE_SAL_MAX
END
ELSE IF (@ST = 1)
BEGIN
	SELECT * FROM #temp_t WHERE PRICE_SAL <= PRICE_SAL_MAX
END
ELSE
BEGIN
	SELECT * FROM #temp_t
END

drop table dbo.__gg

RETURN 0

GO

/*
exec DBO.REPEX_MARGIN_CONTROL_ZNVLS @xmlParam=N'
<XML>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<ID_GOODS_GROUP>7</ID_GOODS_GROUP>
	
	<ADPRICE>
		<LOW>0</LOW>
		<HIGH>10</HIGH>
		<VALUE>10</VALUE>
	</ADPRICE>
	<ADPRICE>
		<LOW>10</LOW>
		<HIGH>20</HIGH>
		<VALUE>15</VALUE>
	</ADPRICE>
	<ADPRICE>
		<LOW>10</LOW>
		<HIGH>50</HIGH>
		<VALUE>20</VALUE>
	</ADPRICE>
	
	<IMPORTANT>0</IMPORTANT>
	<ST>2</ST>
	<EMPTY>0</EMPTY>
</XML>'*/


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'MarginControlZNVLS.MarginControlParams'