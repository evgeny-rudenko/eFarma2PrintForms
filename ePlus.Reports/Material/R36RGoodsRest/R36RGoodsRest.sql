SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_R36RGoodsRest') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_R36RGoodsRest AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_R36RGoodsRest
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT
--DECLARE @TEXT NVARCHAR(4000)
DECLARE @DATE_OST DATETIME
DECLARE @IS_GROUPS BIT
DECLARE @ALL_GOODS BIT, @ALL_STORE BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE_OST = DATE_OST, @IS_GROUPS=IS_GROUPS
		FROM OPENXML(@HDOC, '/XML') 
	WITH(DATE_OST DATETIME 'DATE_OST', IS_GROUPS BIT 'IS_GROUPS')

	SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//ID_GOODS') 
	WITH(ID_GOODS BIGINT '.') WHERE ID_GOODS <> 0
	IF @@ROWCOUNT = 0 SET @ALL_GOODS = 1

	SELECT * INTO #STORE
	FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.') WHERE ID_STORE <> 0
	IF @@ROWCOUNT = 0 SET @ALL_STORE = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

--EXEC DBO.USP_RANGE_DAYS NULL, @DATE_OST OUT
EXEC DBO.USP_RANGE_NORM NULL, @DATE_OST OUT

SELECT 
    ISNULL(CNT.NAME, '') AS COMPANY,
    CNT.PHONE
FROM DBO.CONTRACTOR CNT
WHERE CNT.ID_CONTRACTOR = DBO.FN_CONST_CONTRACTOR_SELF()

IF (@IS_GROUPS = 1)
BEGIN

SELECT --L.ID_GOODS, L.ID_STORE,
	GOODS_NAME = MAX(GC.NAME),
	AMOUNT = SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES),
	SCALE_NAME = max(DBO.FN_SCALE_NAME_SHORT(L.ID_SCALING_RATIO)),
	PRICE_OPT = avg(L.PRICE_SUP)
--INTO #OST
FROM LOT L
	INNER JOIN LOT_MOVEMENT LM ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN GOODS G ON L.ID_GOODS=G.ID_GOODS
	INNER JOIN GOODS_CLASSIFIER_2_GOODS GC2G ON GC2G.id_goods = G.ID_GOODS_GLOBAL
	INNER JOIN GOODS_CLASSIFIER GC ON GC.ID_GOODS_CLASSIFIER = GC2G.ID_GOODS_CLASSIFIER
WHERE (@ALL_GOODS = 1 OR L.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)) 
AND  (@ALL_STORE = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM #STORE))
AND LM.DATE_OP <= @DATE_OST
--and (LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES)>0
GROUP BY GC.ID_GOODS_CLASSIFIER --L.ID_GOODS, L.ID_STORE --,g.name
having SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES)>0
order by 1

END
ELSE
BEGIN

SELECT --L.ID_GOODS, L.ID_STORE,
	GOODS_NAME = max(g.name),
	AMOUNT = SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES),
	SCALE_NAME = max(DBO.FN_SCALE_NAME_SHORT(L.ID_SCALING_RATIO)),
	PRICE_OPT = avg(L.PRICE_SUP)
--INTO #OST
FROM LOT L
	INNER JOIN LOT_MOVEMENT LM ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN GOODS G ON L.ID_GOODS=G.ID_GOODS
WHERE (@ALL_GOODS = 1 OR L.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)) 
AND  (@ALL_STORE = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM #STORE))
AND LM.DATE_OP <= @DATE_OST
--and (LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES)>0
GROUP BY L.ID_GOODS --, L.ID_STORE --,g.name
having SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES)>0
order by 1

end

RETURN 0
GO