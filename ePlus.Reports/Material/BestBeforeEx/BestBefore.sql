SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_BEST_BEFORE') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_BEST_BEFORE AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_BEST_BEFORE
	(@XMLPARAM NTEXT) AS 

DECLARE @HDOC INT
DECLARE @ID_STORE BIGINT
DECLARE @COUNT_STORE INT
DECLARE @COUNTSTORE INT
DECLARE @DATEFR DATETIME
DECLARE @DATETO DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @DATE_TO_4M DATETIME, @DATE_TO_3M DATETIME, @DATE_TO_2M DATETIME, @DATE_TO_1M DATETIME
DECLARE @BEFORE BIT, @ALL_STORE BIT
DECLARE @TEXT NVARCHAR(4000)
DECLARE @PARMDEFINITION NVARCHAR(500)
DECLARE @ORDER_BY varchar(512)

set @ORDER_BY = ''

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE_TO = DATE_TO, @BEFORE = BEFORE
	FROM OPENXML(@HDOC, '/XML') 
	WITH(DATE_TO DATETIME 'DATE_TO', BEFORE BIT 'BEFORE')

	SELECT * INTO #STORE FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.') WHERE ID_STORE <> 0
	IF (@@ROWCOUNT = 0) SET @ALL_STORE = 1 ELSE SET @ALL_STORE = 0

	SELECT TOP 1 @ORDER_BY = ORDER_BY
	FROM OPENXML(@HDOC, '/XML') 
	WITH(ORDER_BY varchar(512) 'ORDER_BY')
			
EXEC SP_XML_REMOVEDOCUMENT @HDOC
EXEC DBO.REP_RANGEDAY @DATEFR OUT, @DATETO OUT

SELECT @COUNTSTORE = COUNT(*) FROM #STORE

SET @DATE_TO = GETDATE()

SELECT @DATE_TO_4M = DATEADD(MONTH, 4, @DATE_TO), @DATE_TO_3M = DATEADD(MONTH, 3, @DATE_TO),
	@DATE_TO_2M = DATEADD(MONTH, 2, @DATE_TO), @DATE_TO_1M = DATEADD(MONTH, 1, @DATE_TO)

SET @TEXT =
 'SELECT L.ID_PARENT,
 ST.ID_STORE AS ID_STORE,
 ST.[NAME] AS STORE_NAME,
 max(G.CODE) as G_CODE,
 L.GOODS_NAME AS GOODS_NAME, 
 P.[NAME] AS PRODUCER_NAME,
 L.SCALE_NAME AS SHORT_NAME,
  MNEMOCODE = CASE L.ID_TABLE
   WHEN 2 THEN L.LOT_NAME
   ELSE (SELECT LOT_NAME FROM LOT WHERE ID_LOT_GLOBAL = L.ID_PARENT)
  END,
 ROUND(L.QUANTITY_REM * CONVERT(MONEY, L.NUMERATOR) / L.DENOMINATOR, 2) AS QUANTITY,
 L.QUANTITY_REM AS QUANTITY_REM,
 L.SERIES_NUMBER AS SERIES_NUMBER, 
 L.BEST_BEFORE AS BEST_BEFORE,

 MONTH3 =
 SUM(CASE WHEN L.BEST_BEFORE >= @DATE_TO_3M
  THEN ROUND(L.QUANTITY_REM * CONVERT(MONEY, L.NUMERATOR) / L.DENOMINATOR, 2) 
  ELSE CAST(0 AS MONEY)
 END),

 MONTH3_REM =
 SUM(CASE WHEN L.BEST_BEFORE >= @DATE_TO_3M
  THEN L.QUANTITY_REM 
  ELSE CAST(0 AS MONEY)
 END),

 MONTH2 =
 SUM(CASE WHEN L.BEST_BEFORE >= @DATE_TO_2M AND
   L.BEST_BEFORE < @DATE_TO_3M
  THEN ROUND(L.QUANTITY_REM * CONVERT(MONEY, L.NUMERATOR) / L.DENOMINATOR, 2)
  ELSE CAST(0 AS MONEY)
 END),

 MONTH2_REM =
 SUM(CASE WHEN L.BEST_BEFORE >= @DATE_TO_2M AND
   L.BEST_BEFORE < @DATE_TO_3M
  THEN L.QUANTITY_REM
  ELSE CAST(0 AS MONEY)
 END),

 MONTH1 =
 SUM(CASE WHEN L.BEST_BEFORE >= @DATE_TO_1M AND
   L.BEST_BEFORE < @DATE_TO_2M
  THEN ROUND(L.QUANTITY_REM * CONVERT(MONEY, L.NUMERATOR) / L.DENOMINATOR, 2)
  ELSE CAST(0 AS MONEY) 
 END),

 MONTH1_REM =
 SUM(CASE WHEN L.BEST_BEFORE >= @DATE_TO_1M AND
   L.BEST_BEFORE < @DATE_TO_2M
  THEN L.QUANTITY_REM
  ELSE CAST(0 AS MONEY) 
 END),

 MONTH0 =
 SUM(CASE WHEN L.BEST_BEFORE < @DATE_TO_1M
  THEN ROUND(L.QUANTITY_REM * CONVERT(MONEY, L.NUMERATOR) / L.DENOMINATOR, 2)
  ELSE CAST(0 AS MONEY) 
 END),

 MONTH0_REM =
 SUM(CASE WHEN L.BEST_BEFORE < @DATE_TO_1M
  THEN L.QUANTITY_REM
  ELSE CAST(0 AS MONEY) 
 END)
INTO #TEMP
FROM MV_LOT L
 LEFT JOIN DBO.PRODUCER P ON P.ID_PRODUCER = L.ID_PRODUCER
 left join goods G on (G.ID_GOODS = L.ID_GOODS)
 INNER JOIN STORE ST ON L.ID_STORE = ST.ID_STORE
 LEFT JOIN INVOICE I ON L.ID_TABLE = 2 AND I.ID_INVOICE_GLOBAL = L.ID_DOCUMENT
 LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
'

IF(@BEFORE = 1)
 BEGIN
   SET @TEXT = @TEXT+ ' WHERE L.BEST_BEFORE <= @DATE_TO_4M AND '
 END
ELSE
 BEGIN
   SET @TEXT = @TEXT+ '
WHERE L.BEST_BEFORE BETWEEN @DATE_TO AND @DATE_TO_4M AND'
 END

SET @TEXT = @TEXT + '
  L.QUANTITY_REM > 0 AND 
  (@ALL_STORE = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM #STORE))'

SET @TEXT = @TEXT + '
 GROUP BY L.ID_PARENT, L.GOODS_NAME, L.SCALE_NAME, L.LOT_NAME, ROUND(L.QUANTITY_REM * CONVERT(MONEY, L.NUMERATOR) / L.DENOMINATOR, 2), L.SERIES_NUMBER,
 L.BEST_BEFORE, ST.ID_STORE, ST.[NAME], P.[NAME], L.ID_TABLE, L.QUANTITY_REM '

SET @TEXT = @TEXT + '
	SELECT GOODS_NAME, max(G_CODE) as G_CODE, PRODUCER_NAME, SHORT_NAME,
	MNEMOCODE, SERIES_NUMBER, BEST_BEFORE,
	QUANTITY = SUM(QUANTITY), QUANTITY_REM = SUM(QUANTITY_REM),
	MONTH3 = SUM(MONTH3), MONTH2 = SUM(MONTH2), MONTH1 = SUM(MONTH1), MONTH0 = SUM(MONTH0),
	MONTH3_REM = SUM(MONTH3_REM), MONTH2_REM = SUM(MONTH2_REM), MONTH1_REM = SUM(MONTH1_REM), MONTH0_REM = SUM(MONTH0_REM)
FROM #TEMP
GROUP BY GOODS_NAME, PRODUCER_NAME, SHORT_NAME,
	MNEMOCODE, SERIES_NUMBER, BEST_BEFORE'


SET @PARMDEFINITION = N'@DATE_TO DATETIME, @COUNT_STORE INT, @DATE_TO_4M DATETIME, @DATE_TO_3M DATETIME,
	@DATE_TO_2M DATETIME, @DATE_TO_1M DATETIME, @ALL_STORE BIT'

set @TEXT = @TEXT + '
 ' + @ORDER_BY

EXEC SP_EXECUTESQL @TEXT, @PARMDEFINITION, @DATE_TO = @DATE_TO, @COUNT_STORE = @COUNTSTORE, @DATE_TO_4M = @DATE_TO_4M,
	@DATE_TO_3M = @DATE_TO_3M, @DATE_TO_2M = @DATE_TO_2M, @DATE_TO_1M = @DATE_TO_1M, @ALL_STORE = @ALL_STORE

--SELECT @TEXT

RETURN 0
GO

--EXEC REPEX_BEST_BEFORE @XMLPARAM = N'<XML></XML>'


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'BestBeforeEx.BestBeforeParams'