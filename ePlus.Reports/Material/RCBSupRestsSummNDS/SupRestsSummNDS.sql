SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_SUP_RESTS_SUMM_NDS') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_SUP_RESTS_SUMM_NDS AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_SUP_RESTS_SUMM_NDS
	@XMLPARAM NTEXT AS

DECLARE @HDOC INT
--DECLARE @TEXT NVARCHAR(4000)
DECLARE @DATE DATETIME
DECLARE @ALL_CONTRACTOR BIT, @ALL_STORE BIT, @CO BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE = DATE, @CO = CO
		FROM OPENXML(@HDOC, '/XML') 
	WITH(DATE DATETIME 'DATE', CO BIT 'CO')

	SELECT * INTO #CONTRACTOR FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
	WITH(ID_CONTRACTOR BIGINT '.') WHERE ID_CONTRACTOR <> 0
	IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1

	SELECT * INTO #STORE
	FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.') WHERE ID_STORE <> 0
	IF @@ROWCOUNT = 0 SET @ALL_STORE = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_DAYS NULL, @DATE OUT
EXEC DBO.USP_RANGE_NORM NULL, @DATE OUT
SELECT L.ID_GOODS, 
	L.ID_LOT_GLOBAL,
	AMOUNT_OST = SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES),
	L.PRICE_SUP, 
	L.VAT_SUP, 
	L.PVAT_SUP, 
	L.ID_SUPPLIER, 
	L.ID_DOCUMENT, 
	DOC_NUM = L.INCOMING_BILL_NUM, 
	DOC_DATE = L.INCOMING_BILL_DATE
INTO #OST
FROM LOT L
LEFT JOIN LOT_MOVEMENT LM ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
LEFT JOIN STORE S ON S.ID_STORE = L.ID_STORE
WHERE ((@CO = 1 AND (@ALL_CONTRACTOR = 1 OR S.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)))
	OR ((@CO <> 1 OR @CO IS NULL) AND S.ID_CONTRACTOR = 
			(SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)))
AND  (@ALL_STORE = 1 OR L.ID_STORE IN (SELECT ID_STORE FROM #STORE))
AND LM.DATE_OP <= @DATE
GROUP BY L.ID_GOODS, L.ID_STORE, L.PRICE_SUP, L.VAT_SUP, L.PVAT_SUP, 
	L.ID_LOT_GLOBAL, L.ID_SUPPLIER, L.ID_DOCUMENT, L.INCOMING_BILL_NUM,
	L.INCOMING_BILL_DATE

SELECT 
	OST.ID_SUPPLIER, 
	SUPPLIER_NAME = CASE WHEN ISNULL(C.FULL_NAME, '') = '' THEN C.[NAME] ELSE C.FULL_NAME END,--ÏÎÑÒÀÂÙÈÊ
	VAT_SUP = ISNULL(OST.VAT_SUP, 0),
	SUM_SUP_NDS = SUM(OST.PRICE_SUP*OST.AMOUNT_OST),
	SUM_SUP = SUM((OST.PRICE_SUP - OST.PVAT_SUP)*OST.AMOUNT_OST),
	PVAT_SUP = SUM(OST.PVAT_SUP*OST.AMOUNT_OST),
	--DOC_NAME = CASE WHEN OST.DOC_DATE IS NULL THEN '' ELSE DBO.REP_DATE(OST.DOC_DATE) END + ' ' + ISNULL(OST.DOC_NUM, ''), 
	OST.DOC_DATE, 
	OST.DOC_NUM
FROM #OST OST
INNER JOIN DBO.GOODS G ON G.ID_GOODS = OST.ID_GOODS
INNER JOIN DBO.CONTRACTOR C ON C.ID_CONTRACTOR= OST.ID_SUPPLIER
WHERE AMOUNT_OST > 0
GROUP BY OST.ID_SUPPLIER, C.FULL_NAME, C.[NAME], OST.DOC_DATE, OST.DOC_NUM, OST.VAT_SUP
ORDER BY CASE WHEN ISNULL(C.FULL_NAME, '') = '' THEN C.[NAME] ELSE C.FULL_NAME END, 
	OST.VAT_SUP, OST.DOC_DATE, OST.DOC_NUM
RETURN 0
GO