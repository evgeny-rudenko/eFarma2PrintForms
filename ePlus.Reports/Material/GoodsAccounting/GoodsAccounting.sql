SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_GOODS_ACCOUNTING') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_GOODS_ACCOUNTING AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_GOODS_ACCOUNTING
	(@XMLPARAM NTEXT) AS 

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ID_GOODS BIGINT
DECLARE @ID_STORE BIGINT
--DECLARE @ALL_STORES BIT
--DECLARE @ALL_SUPPLIERS BIT
DECLARE @ID_CONTRACTOR UNIQUEIDENTIFIER

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@ID_GOODS = ID_GOODS,
	@ID_STORE = ID_STORE
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	ID_GOODS BIGINT 'ID_GOODS',
	ID_STORE BIGINT 'ID_STORE')

/*
SELECT * INTO #STORES FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES = 1*/
/*
SELECT * INTO #SUPPLIERS FROM OPENXML(@HDOC, '//ID_SUPPLIER') WITH(ID_SUPPLIER BIGINT '.')
IF (@@ROWCOUNT = 0)
	SET @ALL_SUPPLIERS = 1*/
			
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT

--select @date_fr, @date_to, @id_goods, @id_store
--select * from #stores

SELECT @ID_CONTRACTOR = ID_CONTRACTOR_GLOBAL FROM REPLICATION_CONFIG WHERE IS_SELF = 1

SELECT
	STORE_NAME = ST.NAME,
	STORE_PLACE_NAME = SP.NAME,
	SERIES_NUM = S.SERIES_NUMBER,
	BEST_BEFORE = S.BEST_BEFORE,
	UNIT_NAME = CAST(SR.NUMERATOR AS VARCHAR(3)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(3)) + ' ' + U.SHORT_NAME,
	PRICE_SUP = L.PRICE_SUP,
	PRICE_SAL = L.PRICE_SAL,
	REMAIN = L.QUANTITY_ADD - L.QUANTITY_SUB
FROM LOT L
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	INNER JOIN CONTRACTOR CT ON CT.ID_CONTRACTOR = ST.ID_CONTRACTOR
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
	LEFT JOIN SERIES S ON S.ID_SERIES = L.ID_SERIES
	LEFT JOIN STORE_PLACE SP ON SP.ID_STORE_PLACE = L.ID_STORE_PLACE
WHERE L.ID_GOODS = @ID_GOODS
	--AND (@ALL_STORES = 1 OR (ST.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND ST.ID_STORE = @ID_STORE
	AND CT.ID_CONTRACTOR_GLOBAL = @ID_CONTRACTOR
	AND L.QUANTITY_ADD - L.QUANTITY_SUB > 0	
ORDER BY ST.NAME
 
SELECT
	DATE_OP = LM.DATE_OP,
	DOC_NAME = CASE WHEN TD.ID_TABLE_DATA = 3 THEN TD.DESCRIPTION + ' ' + AR2C.MNEMOCODE + '(' + CONVERT(VARCHAR, AR2C.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 8 THEN TD.DESCRIPTION + ' ' + M.MNEMOCODE + ' (' + CONVERT(VARCHAR, M.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 20 THEN TD.DESCRIPTION + ' ' + AD.MNEMOCODE + ' (' + CONVERT(VARCHAR, AD.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 19 THEN TD.DESCRIPTION + ' ' + CS.MNEMOCODE + ' (' + CONVERT(VARCHAR, CS.DATE_CLOSE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 7 THEN TD.DESCRIPTION + ' ' + CONVERT(VARCHAR, CH.ID_CHEQUE) + ' (' + CONVERT(VARCHAR, CH.DATE_CHEQUE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 6 THEN TD.DESCRIPTION + ' ' + ADIS.MNEMOCODE + ' (' + CONVERT(VARCHAR, ADIS.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 13 THEN TD.DESCRIPTION + ' ' + AR.MNEMOCODE + ' (' + CONVERT(VARCHAR, AR.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 24 THEN TD.DESCRIPTION + ' ' + ISV.DOC_NUM + ' (' + CONVERT(VARCHAR, ISV.DOC_DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 21 THEN TD.DESCRIPTION + ' ' + INVO.MNEMOCODE + ' (' + CONVERT(VARCHAR, INVO.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 12 THEN TD.DESCRIPTION + ' ' + ARB.MNEMOCODE + ' (' + CONVERT(VARCHAR, ARB.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 23 THEN TD.DESCRIPTION + ' ' + IVED.DOC_NUM + ' (' + CONVERT(VARCHAR, IVED.DOC_DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 22 THEN TD.DESCRIPTION + ' ' + BILL.DOC_NUM + ' (' + CONVERT(VARCHAR, BILL.DOC_DATE, 104)	+ ')'
					WHEN TD.ID_TABLE_DATA = 29 THEN TD.DESCRIPTION + ' ' + PROD.MNEMOCODE + ' (' + CONVERT(VARCHAR, PROD.DATE, 104) + ')'
					WHEN TD.ID_TABLE_DATA = 2 THEN TD.DESCRIPTION + ' ' + I.MNEMOCODE + ' (' + CONVERT(VARCHAR, I.DOCUMENT_DATE, 104) + ')'
				ELSE TD.DESCRIPTION + ' ' + L.LOT_NAME END,
	FROM_TO = CASE WHEN TD.ID_TABLE_DATA = 2 THEN (SELECT NAME FROM CONTRACTOR WHERE ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER)
					WHEN TD.ID_TABLE_DATA = 21 THEN (SELECT NAME FROM CONTRACTOR WHERE ID_CONTRACTOR = INVO.ID_CONTRACTOR_TO)
					WHEN TD.ID_TABLE_DATA = 8 THEN (SELECT NAME FROM STORE WHERE ID_STORE = (CASE WHEN M.ID_STORE_FROM = @ID_STORE THEN M.ID_STORE_TO ELSE M.ID_STORE_FROM END))
				ELSE NULL END,
	QUANTITY_ADD = case when LM.QUANTITY_ADD = 0 then null else LM.QUANTITY_ADD * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR) end,
	QUANTITY_SUB = case when LM.QUANTITY_SUB = 0 then null else LM.QUANTITY_SUB * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR) end,
	QUANTITY_REM = (SELECT SUM((lm1.QUANTITY_ADD - lm1.QUANTITY_SUB) * SR1.NUMERATOR / CONVERT(MONEY, SR1.DENOMINATOR))
						from lot_movement lm1 
							INNER JOIN LOT L1 ON L1.ID_LOT_GLOBAL = LM1.ID_LOT_GLOBAL
							INNER JOIN SCALING_RATIO SR1 ON SR1.ID_SCALING_RATIO = L1.ID_SCALING_RATIO
							where lm1.date_op <= lm.date_op and l1.id_lot_global = l.id_lot_global)
FROM LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN STORE S ON L.ID_STORE = S.ID_STORE
	INNER JOIN CONTRACTOR C ON S.ID_CONTRACTOR = C.ID_CONTRACTOR
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = LM.ID_TABLE

	LEFT JOIN MOVEMENT M ON M.ID_MOVEMENT_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN ACT_RETURN_TO_CONTRACTOR AR2C ON AR2C.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN ACT_DEDUCTION AD ON AD.ID_ACT_DEDUCTION_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN CHEQUE CH ON (CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL AND EXISTS (SELECT NULL FROM CHEQUE_ITEM CHI WHERE CHI.ID_CHEQUE_ITEM_GLOBAL = LM.ID_DOCUMENT_ITEM AND CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL))
	LEFT JOIN ACT_DISASSEMBLING ADIS ON ADIS.ID_ACT_DISASSEMBLING_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN DBO.ACT_REVALUATION2 AR ON AR.ID_ACT_REVALUATION2_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN DBO.INVENTORY_SVED ISV ON ISV.ID_INVENTORY_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN INVOICE_OUT INVO ON INVO.ID_INVOICE_OUT_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN DBO.ACT_RETURN_TO_BUYER ARB ON ARB.ID_ACT_RETURN_TO_BUYER_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN DBO.INVENTORY_VED IVED ON IVED.ID_INVENTORY_VED_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN BILL ON BILL.ID_BILL_GLOBAL = LM.ID_DOCUMENT
	LEFT JOIN PRODUCTION PROD ON PROD.ID_PRODUCTION_GLOBAL = LM.ID_DOCUMENT	
	LEFT JOIN INVOICE I ON I.ID_INVOICE_GLOBAL = LM.ID_DOCUMENT

WHERE L.ID_GOODS = @ID_GOODS
	AND LM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	--AND (@ALL_STORES = 1 OR (S.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND S.ID_STORE = @ID_STORE
	AND C.ID_CONTRACTOR_GLOBAL = @ID_CONTRACTOR
ORDER BY LM.DATE_OP

SELECT NAME FROM CONTRACTOR WHERE ID_CONTRACTOR_GLOBAL = @ID_CONTRACTOR

RETURN 0
GO

/* 
EXEC REPEX_GOODS_ACCOUNTING N'
<XML>
	<DATE_FR>2009-11-01T00:00:00.000</DATE_FR>
	<DATE_TO>2009-11-30T00:00:00.000</DATE_TO>
	<ID_GOODS>188881</ID_GOODS>
	<ID_STORE>156</ID_STORE>	
</XML>'*/

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'GoodsAccounting.GoodsAccountingParams'