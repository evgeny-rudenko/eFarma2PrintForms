SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.IMMUNOBIOLOGICAL_TRAFFIC_LOG') IS NULL EXEC('CREATE PROCEDURE DBO.IMMUNOBIOLOGICAL_TRAFFIC_LOG AS RETURN')
GO

ALTER PROCEDURE DBO.IMMUNOBIOLOGICAL_TRAFFIC_LOG
    @XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME

DECLARE @ALL_GOODS BIT
DECLARE @ALL_STORE BIT

    EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
    SELECT
	    @DATE_FR = DATE_FR,
	    @DATE_TO = DATE_TO
    FROM OPENXML(@HDOC, '/XML') WITH(
	    DATE_FR DATETIME 'DATE_FR',
	    DATE_TO DATETIME 'DATE_TO'
    )

    SELECT * INTO #GOODS FROM OPENXML(@HDOC, '//ID_GOODS') 
    WITH(ID_GOODS BIGINT '.')
    IF @@ROWCOUNT = 0 SET @ALL_GOODS = 1

    SELECT * INTO #STORE FROM OPENXML(@HDOC, '//ID_STORE') 
    WITH(ID_STORE BIGINT '.')
    IF @@ROWCOUNT = 0 SET @ALL_STORE = 1;

    EXEC SP_XML_REMOVEDOCUMENT @HDOC

    EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
    EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT

    CREATE TABLE #DOCS
    (
	    ID_GOODS BIGINT,
	    GOODS_NAME VARCHAR(400),
        QUANTITY MONEY,
	    DOC_DATE DATETIME,
	    UNIT VARCHAR(400),
        ID_DOCUMENT_GLOBAL uniqueidentifier,
        PRODUCER VARCHAR(1000),
        STORE VARCHAR(1000)
    )

    INSERT INTO #DOCS
    SELECT
	    ID_GOODS = DI.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.DOCUMENT_DATE,
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_INVOICE_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME
    FROM INVOICE D
	    INNER JOIN INVOICE_ITEM DI ON DI.ID_INVOICE_GLOBAL = D.ID_INVOICE_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE = S.ID_STORE
    WHERE DOCUMENT_DATE BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (DI.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    INSERT INTO #DOCS
    SELECT
	    ID_GOODS = DI.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.DOCUMENT_DATE,
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_IMPORT_REMAINS_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME
    FROM IMPORT_REMAINS D
	    INNER JOIN IMPORT_REMAINS_ITEM DI ON DI.ID_IMPORT_REMAINS_GLOBAL = D.ID_IMPORT_REMAINS_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE = S.ID_STORE
    WHERE DOCUMENT_DATE BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (DI.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    INSERT INTO #DOCS
    SELECT
	    ID_GOODS = DI.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.[DATE],
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_MOVEMENT_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME
    FROM MOVEMENT D
	    INNER JOIN MOVEMENT_ITEM DI ON DI.ID_MOVEMENT_GLOBAL = D.ID_MOVEMENT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT	
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE_TO = S.ID_STORE
    WHERE DATE BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE_TO IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (DI.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    INSERT INTO #DOCS
    SELECT
	    ID_GOODS = L.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.[DATE],
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME
    FROM INTERFIRM_MOVING_ACCEPTANCE_ACT D
	    INNER JOIN INTERFIRM_MOVING_ACCEPTANCE_ACT_ITEM DI ON DI.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL = D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL	
	    LEFT JOIN LOT L ON L.ID_LOT = DI.ID_LOT_TO
	    LEFT JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    LEFT JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT	
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE_TO_MAIN = S.ID_STORE
    WHERE DATE BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE_TO_MAIN IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (L.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    CREATE TABLE #DOCS2
    (
	    ID_GOODS BIGINT,
	    GOODS_NAME VARCHAR(400),
        QUANTITY MONEY,
	    DOC_DATE DATETIME,
	    UNIT VARCHAR(400),
        ID_DOCUMENT_GLOBAL uniqueidentifier,
        PRODUCER VARCHAR(1000),
        STORE VARCHAR(1000),
        ID_DOC_BASE_GLOBAL uniqueidentifier NULL,
        CONTRACTOR VARCHAR(1000)
    )

    INSERT INTO #DOCS2
    SELECT
	    ID_GOODS = DI.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.DATE_CHEQUE,
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_CHEQUE_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME,
        ID_DOC_BASE_GLOBAL = D.ID_DOCUMENT_BASE_GLOBAL,
        CONTRACTOR = NULL
    FROM CHEQUE D
	    INNER JOIN CHEQUE_ITEM DI ON D.ID_CHEQUE_GLOBAL = DI.ID_CHEQUE_GLOBAL
	    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = DI.ID_LOT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON L.ID_STORE = S.ID_STORE
    WHERE D.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (L.ID_STORE IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (DI.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    INSERT INTO #DOCS2
    SELECT
	    ID_GOODS = L.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.[DATE],
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_INVOICE_OUT_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME,
        ID_DOC_BASE_GLOBAL = D.ID_DOC_BASE_GLOBAL,
        CONTRACTOR = C.FULL_NAME
    FROM INVOICE_OUT D
	    INNER JOIN INVOICE_OUT_ITEM DI ON D.ID_INVOICE_OUT_GLOBAL = DI.ID_INVOICE_OUT_GLOBAL
	    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = DI.ID_LOT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE = S.ID_STORE
        LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = D.ID_CONTRACTOR_TO
    WHERE D.[DATE] BETWEEN @DATE_FR AND @DATE_TO
	    AND D.STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (L.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    INSERT INTO #DOCS2
    SELECT
	    ID_GOODS = DI.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.[DATE],
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME,
        NULL, --На самом деле это должно быть не NULL, но ACT_DEDUCTION у нас не сохраняет у себя данные о документе основании.
        NULL -- А это NULL
    FROM ACT_DEDUCTION D
	    INNER JOIN ACT_DEDUCTION_ITEM DI ON DI.ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL
	    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = DI.ID_LOT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO --
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT	
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE = S.ID_STORE
    WHERE D.[DATE] BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (DI.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    INSERT INTO #DOCS2
    SELECT
	    ID_GOODS = DI.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.[DATE],
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME,
        ID_DOC_BASE_GLOBAL = D.ID_DOCUMENT_BASE_GLOBAL,
        C.FULL_NAME
    FROM ACT_RETURN_TO_CONTRACTOR D
	    INNER JOIN ACT_RETURN_TO_CONTRACTOR_ITEM DI ON DI.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS	
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE = S.ID_STORE
        LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = D.ID_CONTRACTOR_TO
    WHERE D.[DATE] BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (DI.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

    INSERT INTO #DOCS2
    SELECT
	    ID_GOODS = DI.ID_GOODS,
	    GOODS_NAME = G.NAME + ' ' + CAST(SR.NUMERATOR AS VARCHAR(5)) + '/' + CAST(SR.DENOMINATOR AS VARCHAR(5)) + ' ' + U.NAME,
	    QUANTITY = DI.QUANTITY,
	    DOC_DATE = D.[DATE],
	    UNIT = U.NAME,
        ID_DOCUMENT_GLOBAL = D.ID_MOVEMENT_GLOBAL,
        PRODUCER = P.NAME,
        STORE = S.NAME,
        ID_DOC_BASE_GLOBAL = D.ID_DOC_BASE_GLOBAL,
        C.FULL_NAME
    FROM MOVEMENT D
	    INNER JOIN MOVEMENT_ITEM DI ON DI.ID_MOVEMENT_GLOBAL = D.ID_MOVEMENT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT	
        LEFT JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
        LEFT JOIN STORE S ON D.ID_STORE_TO = S.ID_STORE
        LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
    WHERE DATE BETWEEN @DATE_FR AND @DATE_TO
	    AND D.DOCUMENT_STATE = 'PROC'
	    AND (@ALL_STORE = 1 OR (D.ID_STORE_TO IN (SELECT ID_STORE FROM #STORE)))
	    AND (@ALL_GOODS = 1 OR (DI.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS)))
	    AND G.IMMUNOBIOLOGICAL = 1

--    --Закончили приготавление и теперь заливаем связки приходных и расходных документов в таблицу

    CREATE TABLE #RESULT_DOCS
    (
	    ID_GOODS BIGINT NULL,
	    GOODS_NAME VARCHAR(400) NULL,
        PRODUCER VARCHAR(1000) NULL,
        STORE VARCHAR(1000) NULL,
        QUANTITY_IN MONEY NULL,
	    DOC_DATE_IN DATETIME NULL,
	    UNIT_IN VARCHAR(400) NULL,
        ID_DOCUMENT_GLOBAL_IN uniqueidentifier NULL,
        QUANTITY_OUT MONEY NULL,
	    DOC_DATE_OUT DATETIME NULL,
	    UNIT_OUT VARCHAR(400) NULL,
        ID_DOCUMENT_GLOBAL_OUT uniqueidentifier NULL,
        CONTRAGENT_OUT VARCHAR(400) NULL
    )

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
	    DI.QUANTITY,
	    D.DATE_CHEQUE,
	    U.NAME,
        D.ID_CHEQUE_GLOBAL,
        NULL --Не знаем кому чек этот продан был
    FROM #DOCS BD
        INNER JOIN CHEQUE D ON D.ID_DOCUMENT_BASE_GLOBAL = BD.ID_DOCUMENT_GLOBAL
	    INNER JOIN CHEQUE_ITEM DI ON D.ID_CHEQUE_GLOBAL = DI.ID_CHEQUE_GLOBAL
	    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = DI.ID_LOT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
	    DI.QUANTITY,
	    D.[DATE],
	    U.NAME,
        D.ID_INVOICE_OUT_GLOBAL,
        C.FULL_NAME
    FROM #DOCS BD
        INNER JOIN INVOICE_OUT D ON D.ID_DOC_BASE_GLOBAL = BD.ID_DOCUMENT_GLOBAL
	    INNER JOIN INVOICE_OUT_ITEM DI ON D.ID_INVOICE_OUT_GLOBAL = DI.ID_INVOICE_OUT_GLOBAL
	    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = DI.ID_LOT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = D.ID_CONTRACTOR_TO

    --INSERT INTO #RESULT_DOCS --поидее делать этот инсерт нужно, но бесполезно, акты списания у нас крива работают.
    --SELECT
    --    BD.ID_GOODS,
    --    BD.GOODS_NAME,
    --    BD.PRODUCER,
    --    BD.STORE,
    --    BD.QUANTITY,
    --    BD.DOC_DATE,
    --    BD.UNIT,
    --    BD.ID_DOCUMENT_GLOBAL,
	   -- DI.QUANTITY,
	   -- D.[DATE],
	   -- U.NAME,
    --    D.ID_DOC_BASE_GLOBAL,
    --    NULL -- Акт списания, списываем в никуда
    --FROM #DOCS BD
    --    INNER JOIN ACT_DEDUCTION D
	   -- INNER JOIN ACT_DEDUCTION_ITEM DI ON DI.ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL
	   -- INNER JOIN LOT L ON L.ID_LOT_GLOBAL = DI.ID_LOT_GLOBAL
	   -- INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	   -- INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	   -- INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
	    DI.QUANTITY,
	    D.[DATE],
	    U.NAME,
        D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL,
        C.FULL_NAME
    FROM #DOCS BD
        INNER JOIN ACT_RETURN_TO_CONTRACTOR D ON BD.ID_DOCUMENT_GLOBAL = D.ID_DOCUMENT_BASE_GLOBAL
	    INNER JOIN ACT_RETURN_TO_CONTRACTOR_ITEM DI ON DI.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL
	    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = DI.ID_LOT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = D.ID_CONTRACTOR_TO

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
	    DI.QUANTITY,
	    D.[DATE],
	    U.NAME,
        D.ID_MOVEMENT_GLOBAL,
        C.FULL_NAME
    FROM #DOCS BD
        INNER JOIN MOVEMENT D ON D.ID_DOC_BASE_GLOBAL = BD.ID_DOCUMENT_GLOBAL
	    INNER JOIN MOVEMENT_ITEM DI ON D.ID_MOVEMENT_GLOBAL = DI.ID_MOVEMENT_GLOBAL
	    INNER JOIN LOT L ON L.ID_LOT = DI.ID_LOT_FROM
	    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
        LEFT JOIN STORE S ON D.ID_STORE_FROM = S.ID_STORE
        LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR

    --Теперь собираем приходы к расходам

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        DI.QUANTITY,
	    D.DOCUMENT_DATE,
	    U.NAME,
        D.ID_INVOICE_GLOBAL,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
        BD.CONTRACTOR
    FROM #DOCS2 BD
        INNER JOIN INVOICE D ON D.ID_INVOICE_GLOBAL = BD.ID_DOC_BASE_GLOBAL
	    INNER JOIN INVOICE_ITEM DI ON DI.ID_INVOICE_GLOBAL = D.ID_INVOICE_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        DI.QUANTITY,
	    D.DOCUMENT_DATE,
	    U.NAME,
        D.ID_IMPORT_REMAINS_GLOBAL,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
        BD.CONTRACTOR
    FROM #DOCS2 BD
        INNER JOIN IMPORT_REMAINS D ON D.ID_IMPORT_REMAINS_GLOBAL = BD.ID_DOC_BASE_GLOBAL
	    INNER JOIN IMPORT_REMAINS_ITEM DI ON DI.ID_IMPORT_REMAINS_GLOBAL = D.ID_IMPORT_REMAINS_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        DI.QUANTITY,
	    D.[DATE],
	    U.NAME,
        D.ID_MOVEMENT_GLOBAL,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
        BD.CONTRACTOR
    FROM #DOCS2 BD
        INNER JOIN MOVEMENT D ON D.ID_MOVEMENT_GLOBAL = BD.ID_DOC_BASE_GLOBAL
	    INNER JOIN MOVEMENT_ITEM DI ON DI.ID_MOVEMENT_GLOBAL = D.ID_MOVEMENT_GLOBAL
	    INNER JOIN GOODS G ON G.ID_GOODS = DI.ID_GOODS
	    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = DI.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        DI.QUANTITY,
	    D.[DATE],
	    U.NAME,
        D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
        BD.CONTRACTOR
    FROM #DOCS2 BD
        INNER JOIN INTERFIRM_MOVING_ACCEPTANCE_ACT D ON D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL = BD.ID_DOC_BASE_GLOBAL
	    INNER JOIN INTERFIRM_MOVING_ACCEPTANCE_ACT_ITEM DI ON DI.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL = D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL
	    LEFT JOIN LOT L ON L.ID_LOT = DI.ID_LOT_TO
	    LEFT JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	    LEFT JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
	    NULL,
	    NULL,
	    NULL,
        NULL,
        NULL
    FROM #DOCS BD
    WHERE NOT EXISTS(SELECT NULL FROM #RESULT_DOCS WHERE ID_DOCUMENT_GLOBAL_IN = BD.ID_DOCUMENT_GLOBAL)

    INSERT INTO #RESULT_DOCS
    SELECT
        BD.ID_GOODS,
        BD.GOODS_NAME,
        BD.PRODUCER,
        BD.STORE,
        NULL,
	    NULL,
	    NULL,
        NULL,
        BD.QUANTITY,
        BD.DOC_DATE,
        BD.UNIT,
        BD.ID_DOCUMENT_GLOBAL,
        BD.CONTRACTOR
    FROM #DOCS2 BD
    WHERE NOT EXISTS(SELECT NULL FROM #RESULT_DOCS WHERE ID_DOCUMENT_GLOBAL_OUT = BD.ID_DOCUMENT_GLOBAL)

    SELECT DISTINCT
        ID_GOODS,
	    GOODS_NAME,
        PRODUCER,
        STORE,
        QUANTITY_IN,
	    DOC_DATE_IN,
	    UNIT_IN,
        ID_DOCUMENT_GLOBAL_IN,
        QUANTITY_OUT,
	    DOC_DATE_OUT,
	    UNIT_OUT,
        ID_DOCUMENT_GLOBAL_OUT,
        CONTRAGENT_OUT
    FROM #RESULT_DOCS
    

    SELECT SELF_NAME = NAME FROM CONTRACTOR WHERE ID_CONTRACTOR = DBO.FN_CONST_CONTRACTOR_SELF()

RETURN
GO