SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_REVALUATION_REGISTRY') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_REVALUATION_REGISTRY AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_REVALUATION_REGISTRY
    @XMLPARAM NTEXT AS
    
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @MARK SMALLINT
DECLARE @DETAILED BIT
DECLARE @ALL_STORE BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@DETAILED = DETAILED, 
	@MARK = MARK	
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	DETAILED BIT 'DETAILED', 
	MARK SMALLINT 'MARK'
)
    
SELECT * INTO #STORES FROM OPENXML(@HDOC, '/XML/ID_STORE') WITH(ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_STORE = 1

--select * from #stores
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT 
	AR.ID_ACT_REVALUATION2_GLOBAL, 
	SUMM = SUM(L_NEW.PRICE_SAL - L.PRICE_SAL) 
INTO #SUMMS
FROM ACT_REVALUATION2 AR
INNER JOIN ACT_REVALUATION2_ITEM ARI ON ARI.ID_ACT_REVALUATION2_GLOBAL = AR.ID_ACT_REVALUATION2_GLOBAL
INNER JOIN LOT L ON ARI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
INNER JOIN GOODS G ON L.ID_GOODS = G.ID_GOODS
INNER JOIN LOT L_NEW ON L_NEW.ID_DOCUMENT = ARI.ID_ACT_REVALUATION2_GLOBAL 
                        AND L_NEW.ID_DOCUMENT_ITEM = ARI.ID_ACT_REVALUATION2_ITEM_GLOBAL
LEFT JOIN SERIES S ON L.ID_SERIES = S.ID_SERIES
LEFT JOIN STORE ST ON ST.ID_STORE = L_NEW.ID_STORE
WHERE 
/*дата*/
	(AR.[DATE] BETWEEN @DATE_FR AND @DATE_TO)
	AND 
/*склад*/
	(@ALL_STORE = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
/*Не удаленные*/	
	AND AR.DOCUMENT_STATE <> 'DEL'	
GROUP BY AR.ID_ACT_REVALUATION2_GLOBAL 	

SELECT 
	DOC_NUM = AR.MNEMOCODE, 
	GOOD_NAME = G.NAME, 
	SERIES = S.SERIES_NUMBER, 
	QUANTITY = ARI.QUANTITY, 
	PRICE_SUP = L_NEW.PRICE_SUP, 
	LAST_PRICE_SAL = L.PRICE_SAL, 
	NEW_PRICE_SAL = L_NEW.PRICE_SAL, 
	DELTA = L_NEW.PRICE_SAL - L.PRICE_SAL
INTO #TEMP_T
FROM ACT_REVALUATION2 AR
INNER JOIN ACT_REVALUATION2_ITEM ARI ON ARI.ID_ACT_REVALUATION2_GLOBAL = AR.ID_ACT_REVALUATION2_GLOBAL
INNER JOIN LOT L ON ARI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
INNER JOIN GOODS G ON L.ID_GOODS = G.ID_GOODS
INNER JOIN LOT L_NEW ON L_NEW.ID_DOCUMENT = ARI.ID_ACT_REVALUATION2_GLOBAL 
                        AND L_NEW.ID_DOCUMENT_ITEM = ARI.ID_ACT_REVALUATION2_ITEM_GLOBAL
LEFT JOIN SERIES S ON L.ID_SERIES = S.ID_SERIES
LEFT JOIN STORE ST ON ST.ID_STORE = L_NEW.ID_STORE
INNER JOIN #SUMMS SM ON AR.ID_ACT_REVALUATION2_GLOBAL = SM.ID_ACT_REVALUATION2_GLOBAL
WHERE 
/*дата*/
	(AR.[DATE] BETWEEN @DATE_FR AND @DATE_TO)
	AND 
/*склад*/
	(@ALL_STORE = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND
/*Уценка/Наценка*/
	((@MARK = 0 AND SM.SUMM < 0) OR 
	(@MARK = 1 AND SM.SUMM >= 0) OR
	(@MARK = 2))
/*Не удаленные*/	
	AND AR.DOCUMENT_STATE <> 'DEL'	
ORDER BY AR.MNEMOCODE, G.NAME, S.SERIES_NUMBER, L_NEW.PRICE_SUP, L.PRICE_SAL, 
	L_NEW.PRICE_SAL
	
IF (@DETAILED = 0)	
BEGIN
	SELECT DISTINCT 
		DOC_NUM, 
		PRICE_SUP = SUM(PRICE_SUP*QUANTITY), 
		LAST_PRICE_SAL = SUM(LAST_PRICE_SAL*QUANTITY), 
		NEW_PRICE_SAL = SUM(NEW_PRICE_SAL*QUANTITY), 
		DELTA = SUM(DELTA*QUANTITY)
	FROM #TEMP_T
	GROUP BY DOC_NUM
END
ELSE
BEGIN
	SELECT * FROM #TEMP_T
END

RETURN 
GO

/*
exec REPEX_REVALUATION_REGISTRY @xmlParam=N
'<XML><DATE_FR>2010-01-01T00:00:00.000</DATE_FR>
<DATE_TO>2010-07-28T15:28:43.390</DATE_TO>
<MARK>1</MARK><DETAILED>1</DETAILED></XML>'
*/