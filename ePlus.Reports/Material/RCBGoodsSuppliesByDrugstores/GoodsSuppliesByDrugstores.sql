SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_GOODS_SUPPLIES_BY_DRUGSTORES') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_GOODS_SUPPLIES_BY_DRUGSTORES AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_GOODS_SUPPLIES_BY_DRUGSTORES
    @XMLPARAM NTEXT AS
	DECLARE @HDOC INT
	DECLARE @DATE_FR DATETIME
	DECLARE @DATE_TO DATETIME	
	DECLARE @CO BIT
	DECLARE @BY_GROUPS BIT
	DECLARE @SUP_DETAILS BIT
	
	DECLARE @ALL_STORES BIT
	DECLARE @ALL_GOODS BIT
	DECLARE @ALL_CONTRACTORS BIT
	DECLARE @ALL_GROUPS BIT
	
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,	
	@CO = CO, 
	@BY_GROUPS = BY_GROUPS, 
	@SUP_DETAILS = SUP_DETAILS
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO', 
	CO BIT 'CO', 
	BY_GROUPS BIT 'BY_GROUPS', 
	SUP_DETAILS BIT 'SUP_DETAILS'
)

SELECT * INTO #ID_STORES FROM OPENXML(@HDOC, '/XML/ID_STORE') WITH(ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_STORES = 1

SELECT * INTO #ID_GOODS FROM OPENXML(@HDOC, '/XML/ID_GOODS') WITH(ID_GOODS BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_GOODS = 1

SELECT * INTO #ID_CONTRACTORS FROM OPENXML(@HDOC, '/XML/ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_CONTRACTORS = 1

SELECT * INTO #GUID_GROUPS FROM OPENXML(@HDOC, '/XML/GUID_GROUP') WITH(GUID_GROUP UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_GROUPS = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

CREATE TABLE #GOODS (
	ID_GOODS UNIQUEIDENTIFIER, 
	ID_GOODS_CLASSIFIER UNIQUEIDENTIFIER, 
	GROUP_NAME VARCHAR(100), 
	GOODS_NAME VARCHAR(400), 
	CODE VARCHAR(16), 
	ID_SUPPLIER BIGINT, 
	SUPPLIER_NAME VARCHAR(100), 
	ID_STORE BIGINT, 
	STORE_NAME VARCHAR(100), 
	ID_CONTRACTOR BIGINT, 
	DRUGSTORE VARCHAR(1000), 
	PAY_SUMM MONEY, 
	QUANTITY MONEY
)
BEGIN
	INSERT INTO #GOODS
        ( ID_GOODS ,
          ID_GOODS_CLASSIFIER ,
		  GROUP_NAME ,
          GOODS_NAME ,
          CODE ,
          ID_SUPPLIER ,
          SUPPLIER_NAME ,
          ID_STORE ,
          STORE_NAME ,
          ID_CONTRACTOR ,
          DRUGSTORE ,
          PAY_SUMM ,
          QUANTITY
        )
	SELECT 
		G.ID_GOODS_GLOBAL, 
		GC2G.ID_GOODS_CLASSIFIER, 
		GC2G.GROUP_NAME, 
		G.NAME + CASE WHEN ISNULL(P.NAME, '') = '' THEN '' ELSE ' (' + P.NAME + ')' END, 
		G.CODE, 
		ID_SUPPLIER = SUP.ID_CONTRACTOR, 
		SUPPLIER_NAME = SUP.NAME, 
		I.ID_STORE, 
		S.NAME, /**/
		C.ID_CONTRACTOR, 
		ISNULL(C.FULL_NAME, C.NAME), 
		PAY_SUMM = SUM(II.SUPPLIER_SUM_VAT), 
		QUANTITY = SUM(II.QUANTITY * 
			CASE WHEN SR.ID_SCALING_RATIO IS NULL THEN 1 ELSE CONVERT(MONEY, SR.NUMERATOR) / CONVERT(MONEY,SR.DENOMINATOR) END)
	--INTO #GOODS
	FROM INVOICE_ITEM II
INNER JOIN INVOICE I ON II.ID_INVOICE = I.ID_INVOICE
INNER JOIN GOODS G ON II.ID_GOODS = G.ID_GOODS
INNER JOIN STORE S ON I.ID_STORE = S.ID_STORE
INNER JOIN CONTRACTOR C ON S.ID_CONTRACTOR = C.ID_CONTRACTOR
LEFT JOIN CONTRACTOR SUP ON I.ID_CONTRACTOR_SUPPLIER = SUP.ID_CONTRACTOR
LEFT JOIN SCALING_RATIO SR ON II.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
LEFT JOIN PRODUCER P ON G.ID_PRODUCER = P.ID_PRODUCER
LEFT JOIN (
		SELECT 
			GC2G.ID_GOODS, 
			GC2G.ID_GOODS_CLASSIFIER, 
			GROUP_NAME = GC.NAME
		FROM GOODS_CLASSIFIER_2_GOODS GC2G
		INNER JOIN GOODS_CLASSIFIER GC ON GC2G.ID_GOODS_CLASSIFIER = GC.ID_GOODS_CLASSIFIER
		WHERE GC.DATE_DELETED IS NULL AND GC2G.DATE_DELETED IS NULL
	) GC2G ON GC2G.ID_GOODS = G.ID_GOODS_GLOBAL
	WHERE I.DOCUMENT_STATE = 'PROC'
	-- FILTERS
	AND I.DOCUMENT_DATE BETWEEN @DATE_FR AND @DATE_TO
	AND ((@CO = 1 AND (@ALL_CONTRACTORS = 1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #ID_CONTRACTORS)))
		OR ((@CO <> 1 OR @CO IS NULL) AND C.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)))
	AND (@ALL_STORES = 1 OR S.ID_STORE IN (SELECT ID_STORE FROM #ID_STORES))
	AND (@ALL_GOODS = 1 OR G.ID_GOODS IN (SELECT ID_GOODS FROM #ID_GOODS))
	
	GROUP BY 
		G.ID_GOODS_GLOBAL, 
		G.NAME + CASE WHEN ISNULL(P.NAME, '') = '' THEN '' ELSE ' (' + P.NAME + ')' END, 
		G.CODE, 
		I.ID_STORE, 
		S.NAME, /**/
		C.ID_CONTRACTOR, 
		ISNULL(C.FULL_NAME, C.NAME), 
		SUP.ID_CONTRACTOR, 
		SUP.NAME, 
		GC2G.ID_GOODS_CLASSIFIER, 
		GC2G.GROUP_NAME
END

IF @BY_GROUPS = 1
BEGIN
	IF @ALL_GROUPS = 1
	BEGIN
		SELECT * FROM
		(
		SELECT 
			CODE = LEFT(CONVERT(VARCHAR(19), MIN(CONVERT(MONEY, G.CODE))), LEN(CONVERT(VARCHAR(19), MIN(CONVERT(MONEY, G.CODE))))-3), 
			NAME = G.GROUP_NAME + ' (группа)', 
			G.ID_SUPPLIER, 
			G.SUPPLIER_NAME, 
			G.ID_CONTRACTOR, 
			G.DRUGSTORE, 
			G.ID_STORE, 
			G.STORE_NAME, 
			ID = G.ID_GOODS_CLASSIFIER, 
			PAY_SUMM = SUM(G.PAY_SUMM), 
			QUANTITY = SUM(G.QUANTITY)
		FROM #GOODS G
		WHERE G.ID_GOODS_CLASSIFIER IS NOT NULL
		GROUP BY G.ID_GOODS_CLASSIFIER, G.GROUP_NAME, G.ID_SUPPLIER, 
			G.SUPPLIER_NAME, G.ID_CONTRACTOR, G.DRUGSTORE, G.ID_STORE, G.STORE_NAME
		UNION ALL
		SELECT 
			G.CODE, 
			G.GOODS_NAME, 
			G.ID_SUPPLIER, 
			G.SUPPLIER_NAME, 
			G.ID_CONTRACTOR, 
			G.DRUGSTORE, 
			G.ID_STORE, 
			G.STORE_NAME, 
			G.ID_GOODS, 
			G.PAY_SUMM, 
			G.QUANTITY
		FROM #GOODS G
		WHERE G.ID_GOODS_CLASSIFIER IS NULL
		) A
		ORDER BY A.NAME, A.SUPPLIER_NAME
	END
	ELSE
	BEGIN
		SELECT 
			CODE = LEFT(CONVERT(VARCHAR(19), MIN(CONVERT(MONEY, G.CODE))), LEN(CONVERT(VARCHAR(19), MIN(CONVERT(MONEY, G.CODE))))-3), 
			NAME = G.GROUP_NAME + ' (группа)', 
			G.ID_SUPPLIER, 
			G.SUPPLIER_NAME, 
			G.ID_CONTRACTOR, 
			G.DRUGSTORE, 
			G.ID_STORE, 
			G.STORE_NAME, 
			ID = G.ID_GOODS_CLASSIFIER, 
			PAY_SUMM = SUM(G.PAY_SUMM), 
			QUANTITY = SUM(G.QUANTITY)
		FROM #GOODS G
		WHERE G.ID_GOODS_CLASSIFIER IS NOT NULL
			AND G.ID_GOODS_CLASSIFIER IN (SELECT GUID_GROUP FROM #GUID_GROUPS)
		GROUP BY G.ID_GOODS_CLASSIFIER, G.GROUP_NAME, G.ID_SUPPLIER, 
			G.SUPPLIER_NAME, G.ID_CONTRACTOR, G.DRUGSTORE, G.ID_STORE, G.STORE_NAME
		ORDER BY G.GROUP_NAME + ' (группа)', G.SUPPLIER_NAME
	END
END
ELSE
BEGIN
	SELECT 
		G.CODE, 
		NAME = G.GOODS_NAME, 
		G.ID_SUPPLIER, 
		G.SUPPLIER_NAME, 
		G.ID_CONTRACTOR, 
		G.DRUGSTORE, 
		G.ID_STORE, 
		G.STORE_NAME, 
		ID = G.ID_GOODS, 
		G.PAY_SUMM, 
		G.QUANTITY
	FROM #GOODS G
	ORDER BY G.GOODS_NAME, G.SUPPLIER_NAME
END

RETURN
GO

/*
exec REPEX_GOODS_SUPPLIES_BY_DRUGSTORES @xmlParam=N'<XML><DATE_FR>2000-10-26T11:05:35.265</DATE_FR><DATE_TO>2010-11-08T11:05:35.265</DATE_TO><BY_GROUPS>0</BY_GROUPS><FROM_IO>0</FROM_IO><CO>1</CO></XML>'
*/