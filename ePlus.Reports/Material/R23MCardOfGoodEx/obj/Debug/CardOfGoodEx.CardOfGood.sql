

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID(N'DBO.REPEX_CARD_OF_GOOD') IS NULL) EXEC (N'CREATE PROCEDURE DBO.REPEX_CARD_OF_GOOD AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_CARD_OF_GOOD
    @XMLPARAM NTEXT AS

DECLARE @SORT_DOC BIT
DECLARE @NOAU BIT

DECLARE @ID_GOODS BIGINT
DECLARE @SERIES_NUMBER VARCHAR (2048)

DECLARE @SELF uniqueidentifier

SELECT TOP 1 @SELF = C.ID_CONTRACTOR_GLOBAL
    FROM ENTERPRISE_BRANCH EB(NOLOCK)
        INNER JOIN CONTRACTOR C(NOLOCK) ON C.ID_CONTRACTOR = EB.ID_CONTRACTOR
    WHERE EB.IS_SELF = 1


DECLARE @HDOC INT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@SORT_DOC = SORT_DOC,
	@ID_GOODS = ID_GOODS,
	@SERIES_NUMBER = SERIES_NUMBER,
	@NOAU = NOAU
FROM OPENXML(@HDOC, '/XML', 2) WITH(
	SORT_DOC BIT 'SORT_DOC',
	ID_GOODS BIGINT 'ID_GOODS',
	SERIES_NUMBER VARCHAR(2048) 'SERIES_NUMBER',
	NOAU BIT 'NOAU'
)

EXEC SP_XML_REMOVEDOCUMENT @HDOC

-----------------------------------


DECLARE @RESULT_TAB TABLE
(
    DOC_NUM VARCHAR(254), 
	DOC_DATE DATETIME,
	DOC_TYPE VARCHAR(100),
	DOC_IN_OUT INT,
	DOC_ORDER INT,
    CONTRACTOR_FROM VARCHAR(254),
    STORE_FROM VARCHAR(254),
	CONTRACTOR_TO VARCHAR(254),
    STORE_TO VARCHAR(254),
	UNIT_NAME VARCHAR(254),	
	QUANTITY MONEY
)
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DOCUMENT_DATE,
	DOC_TYPE = 'Приходная накладная',
	DOC_IN_OUT = 1,
    DOC_ORDER = 1,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = NULL,
	CONTRACTOR_TO = C_TO.name,
    STORE_TO = ST_TO.name,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM INVOICE_ITEM II(NOLOCK)
    INNER JOIN INVOICE I(NOLOCK) ON I.ID_INVOICE_GLOBAL = II.ID_INVOICE_GLOBAL
    INNER JOIN LOT L ON L.ID_DOCUMENT = I.ID_INVOICE_GLOBAL and L.ID_DOCUMENT_ITEM = II.ID_INVOICE_ITEM_GLOBAL
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = I.id_contractor_supplier
	INNER JOIN STORE ST_TO ON I.id_store = ST_TO.id_store
	INNER JOIN CONTRACTOR C_TO ON C_TO.id_contractor = ST_TO.id_contractor
WHERE I.DOCUMENT_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_INVOICE_GLOBAL, I.MNEMOCODE , I.DOCUMENT_DATE,
	C_FROM.name, C_TO.name, ST_TO.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DATE,
	DOC_TYPE = 'Акт возврата поставщику',
	DOC_IN_OUT = -1,
    DOC_ORDER = 2,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = ST_FROM.name,
	CONTRACTOR_TO = C_TO.name,
    STORE_TO = NULL,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM ACT_RETURN_TO_CONTRACTOR_ITEM II(NOLOCK)
    INNER JOIN ACT_RETURN_TO_CONTRACTOR I(NOLOCK) ON I.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = II.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL
    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN CONTRACTOR C_TO ON C_TO.id_contractor = I.id_contractor_to	
	INNER JOIN STORE ST_FROM ON I.id_store = ST_FROM.id_store
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = ST_FROM.id_contractor
WHERE I.DOCUMENT_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL, I.MNEMOCODE , I.DATE,
	C_FROM.name, C_TO.name, ST_FROM.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DATE_CHEQUE,
	DOC_TYPE = 'Кассовый чек',
	DOC_IN_OUT = -1,
    DOC_ORDER = 3,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = ST_FROM.name,
	CONTRACTOR_TO = NULL,
    STORE_TO = NULL,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM CHEQUE_ITEM II(NOLOCK)
    INNER JOIN CHEQUE I(NOLOCK) ON I.ID_CHEQUE_GLOBAL = II.ID_CHEQUE_GLOBAL
    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN STORE ST_FROM ON L.id_store = ST_FROM.id_store
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = ST_FROM.id_contractor
WHERE I.DOCUMENT_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_CHEQUE_GLOBAL, I.MNEMOCODE , I.DATE_CHEQUE,
	C_FROM.name, ST_FROM.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DATE,
	DOC_TYPE = 'Перемещение товара',
	DOC_IN_OUT = 0,
    DOC_ORDER = 4,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = ST_FROM.name,
	CONTRACTOR_TO = C_TO.name,
    STORE_TO = ST_TO.name,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM MOVEMENT_ITEM II(NOLOCK)
    INNER JOIN MOVEMENT I(NOLOCK) ON I.ID_MOVEMENT_GLOBAL = II.ID_MOVEMENT_GLOBAL
    INNER JOIN LOT L ON L.ID_LOT = II.ID_LOT_FROM
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN STORE ST_FROM ON I.id_store_from = ST_FROM.id_store
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = ST_FROM.id_contractor
	INNER JOIN STORE ST_TO ON I.id_store_to = ST_TO.id_store
	INNER JOIN CONTRACTOR C_TO ON C_TO.id_contractor = ST_TO.id_contractor
WHERE I.DOCUMENT_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR ( not ((@SELF = C_TO.ID_CONTRACTOR_GLOBAL) AND (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL))))
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_MOVEMENT_GLOBAL, I.MNEMOCODE , I.DATE,
	C_FROM.name, ST_FROM.name, C_TO.name, ST_TO.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DATE,
	DOC_TYPE = 'Акт возврата от покупателя',
	DOC_IN_OUT = 1,
    DOC_ORDER = 5,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = NULL,
	CONTRACTOR_TO = C_TO.name,
    STORE_TO = ST_TO.name,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM ACT_RETURN_TO_BUYER_ITEM II(NOLOCK)
    INNER JOIN ACT_RETURN_TO_BUYER I(NOLOCK) ON I.ID_ACT_RETURN_TO_BUYER_GLOBAL = II.ID_ACT_RETURN_TO_BUYER_GLOBAL
    INNER JOIN LOT L ON L.ID_DOCUMENT = I.ID_ACT_RETURN_TO_BUYER_GLOBAL and L.ID_DOCUMENT_ITEM = II.ID_ACT_RETURN_TO_BUYER_ITEM_GLOBAL
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = I.id_contractor_from
	INNER JOIN STORE ST_TO ON I.id_store_to = ST_TO.id_store
	INNER JOIN CONTRACTOR C_TO ON C_TO.id_contractor = ST_TO.id_contractor
WHERE I.DOCUMENT_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_ACT_RETURN_TO_BUYER_GLOBAL, I.MNEMOCODE , I.DATE,
	C_FROM.name, C_TO.name, ST_TO.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DATE,
	DOC_TYPE = 'Акт списания',
	DOC_IN_OUT = -1,
    DOC_ORDER = 6,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = ST_FROM.name,
	CONTRACTOR_TO = NULL,
    STORE_TO = NULL,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM ACT_DEDUCTION_ITEM II(NOLOCK)
    INNER JOIN ACT_DEDUCTION I(NOLOCK) ON I.ID_ACT_DEDUCTION_GLOBAL = II.ID_ACT_DEDUCTION_GLOBAL
    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN STORE ST_FROM ON I.id_store = ST_FROM.id_store
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = ST_FROM.id_contractor
WHERE I.DOCUMENT_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_ACT_DEDUCTION_GLOBAL, I.MNEMOCODE , I.DATE,
	C_FROM.name, ST_FROM.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DATE,
	DOC_TYPE = 'Расходная накладная',
	DOC_IN_OUT = -1,
    DOC_ORDER = 7,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = ST_FROM.name,
	CONTRACTOR_TO = C_TO.name,
    STORE_TO = NULL,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM INVOICE_OUT_ITEM II(NOLOCK)
    INNER JOIN INVOICE_OUT I(NOLOCK) ON I.ID_INVOICE_OUT_GLOBAL = II.ID_INVOICE_OUT_GLOBAL
    INNER JOIN LOT L ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN CONTRACTOR C_TO ON C_TO.id_contractor = I.id_contractor_to	
	INNER JOIN STORE ST_FROM ON I.id_store = ST_FROM.id_store
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = ST_FROM.id_contractor
WHERE I.STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_INVOICE_OUT_GLOBAL, I.MNEMOCODE , I.DATE,
	C_FROM.name, C_TO.name, ST_FROM.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.DOC_NUM, LEN(I.DOC_NUM) - CHARINDEX('/', I.DOC_NUM)),
	DOC_DATE = I.DOC_DATE,
	DOC_TYPE = 'Счет',
	DOC_IN_OUT = -1,
    DOC_ORDER = 8,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = ST_FROM.name,
	CONTRACTOR_TO = C_TO.name,
    STORE_TO = NULL,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM BILL_ITEM II(NOLOCK)
    INNER JOIN BILL I(NOLOCK) ON I.ID_BILL_GLOBAL = II.ID_BILL_GLOBAL
    INNER JOIN LOT L ON L.ID_LOT = II.ID_LOT
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN CONTRACTOR C_TO ON C_TO.id_contractor = I.id_contractor	
	INNER JOIN STORE ST_FROM ON I.id_store = ST_FROM.id_store
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = ST_FROM.id_contractor
WHERE I.DOC_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_BILL_GLOBAL, I.DOC_NUM , I.DOC_DATE,
	C_FROM.name, C_TO.name, ST_FROM.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.DOC_NUM, LEN(I.DOC_NUM) - CHARINDEX('/', I.DOC_NUM)),
	DOC_DATE = I.DOC_DATE,
	DOC_TYPE = 'Инвентаризация',
	DOC_IN_OUT = 0,
    DOC_ORDER = 9,
	CONTRACTOR_FROM = C_FROM.name,
    STORE_FROM = ST_FROM.name,
	CONTRACTOR_TO = NULL,
    STORE_TO = NULL,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM INVENTORY_VED_ITEM II(NOLOCK)
	INNER JOIN INVENTORY_VED I(NOLOCK) ON (I.ID_INVENTORY_VED_GLOBAL = II.ID_INVENTORY_VED_GLOBAL)
	INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL)
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN STORE ST_FROM ON I.id_store = ST_FROM.id_store
	INNER JOIN CONTRACTOR C_FROM ON C_FROM.id_contractor = ST_FROM.id_contractor
WHERE I.DOC_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_INVENTORY_VED_GLOBAL, I.DOC_NUM , I.DOC_DATE,
	C_FROM.name, ST_FROM.name, U.name
-----------------------

INSERT INTO @RESULT_TAB
SELECT
    DOC_NUM = RIGHT(I.MNEMOCODE, LEN(I.MNEMOCODE) - CHARINDEX('/', I.MNEMOCODE)),
	DOC_DATE = I.DOCUMENT_DATE,
	DOC_TYPE = 'Ввод остатков',
	DOC_IN_OUT = 1,
    DOC_ORDER = 10,
	CONTRACTOR_FROM = NULL,
    STORE_FROM = NULL,
	CONTRACTOR_TO = C_TO.name,
    STORE_TO = ST_TO.name,
	UNIT_NAME = U.name,	
	QUANTITY = SUM( II.QUANTITY * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR)
FROM IMPORT_REMAINS_ITEM II(NOLOCK)
    INNER JOIN IMPORT_REMAINS I(NOLOCK) ON I.ID_IMPORT_REMAINS_GLOBAL = II.ID_IMPORT_REMAINS_GLOBAL
    INNER JOIN LOT L ON L.ID_DOCUMENT = I.ID_IMPORT_REMAINS_GLOBAL and L.ID_DOCUMENT_ITEM = II.ID_IMPORT_REMAINS_ITEM_GLOBAL
    INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN SERIES S ON L.id_series = S.id_series
	INNER JOIN SCALING_RATIO SR ON SR.id_scaling_ratio = L.id_scaling_ratio
    INNER JOIN UNIT U ON SR.id_unit = U.id_unit
	--
	INNER JOIN STORE ST_TO ON I.id_store = ST_TO.id_store
	INNER JOIN CONTRACTOR C_TO ON C_TO.id_contractor = ST_TO.id_contractor
WHERE I.DOCUMENT_STATE = 'PROC'
	AND G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
	AND ( (@NOAU = 1) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL) )
GROUP BY
	G.id_goods, S.SERIES_NUMBER,  
	II.ID_IMPORT_REMAINS_GLOBAL, I.MNEMOCODE , I.DOCUMENT_DATE,
	C_TO.name, ST_TO.name, U.name
-----------------------

--select * from table_data

select 
    DOC_NUM,
	DOCUMENT_DATE = CONVERT(VARCHAR(10), DOC_DATE, 104),
	DOC_TYPE,
	DOC_IN_OUT,
    DOC_ORDER,
	CONTRACTOR_FROM,
    STORE_FROM,
	CONTRACTOR_TO,
    STORE_TO,
	UNIT_NAME,
	QUANTITY
from @RESULT_TAB
ORDER BY 
	CASE 
		WHEN @SORT_DOC = 0 THEN NULL 
		WHEN @SORT_DOC > 1 THEN -1*DOC_IN_OUT
		WHEN @SORT_DOC > 0 THEN DOC_ORDER
	END, DOC_DATE

--По дате документа
--По типу документа
--По приходу/расходу
-----------------------------------

SELECT TOP 1
	GOOD_NAME = G.NAME, 
	PROD_NAME = PROD.NAME, 
	SERIES_NUMBER = S.SERIES_NUMBER, 
	BEST_BEFORE = CONVERT(VARCHAR(10), S.BEST_BEFORE, 104), 
	INVOICE_PRICE = L.PRICE_SUP, 
	PROGRAM_NAME = TP.PROGRAM_NAME,
	STORED = 
		(
		SELECT 
			SUM(LL.QUANTITY_REM)
		FROM LOT LL 		
		INNER JOIN STORE ST_TEMP ON (LL.ID_STORE = ST_TEMP.ID_STORE)
		INNER JOIN CONTRACTOR C_TEMP ON (C_TEMP.ID_CONTRACTOR = ST_TEMP.ID_CONTRACTOR)
		INNER JOIN SERIES S_TEMP ON (S_TEMP.ID_SERIES = LL.ID_SERIES)
		WHERE 
			LL.id_goods = @ID_GOODS
			AND S_TEMP.SERIES_NUMBER = @SERIES_NUMBER
			AND ( (@NOAU = 1) OR (@SELF = C_TEMP.ID_CONTRACTOR_GLOBAL))
		),
	RESERVED = 
		(
		SELECT 
			SUM(LL.QUANTITY_RES) 
		FROM LOT LL 
		INNER JOIN STORE ST_TEMP ON (LL.ID_STORE = ST_TEMP.ID_STORE)
		INNER JOIN CONTRACTOR C_TEMP ON (C_TEMP.ID_CONTRACTOR = ST_TEMP.ID_CONTRACTOR)
		INNER JOIN SERIES S_TEMP ON (S_TEMP.ID_SERIES = LL.ID_SERIES)
		WHERE 
			LL.id_goods = @ID_GOODS
			AND S_TEMP.SERIES_NUMBER = @SERIES_NUMBER
			AND ( (@NOAU = 1) OR (@SELF = C_TEMP.ID_CONTRACTOR_GLOBAL))
		),
	REG_CERT = ISNULL(RS.organ, '') + ISNULL(' '+RS.name, '') + ISNULL(' от '+CONVERT(VARCHAR(10), RS.date, 104), '')
FROM LOT L
	INNER JOIN GOODS G ON (L.ID_GOODS = G.ID_GOODS)
	INNER JOIN PRODUCER PROD ON (G.ID_PRODUCER = PROD.ID_PRODUCER)
	INNER JOIN SERIES S ON (S.ID_SERIES = L.ID_SERIES)
	LEFT JOIN CONTRACTS CON ON (CON.ID_CONTRACTS_GLOBAL = L.ID_CONTRACTS_GLOBAL)
	LEFT JOIN TASK_PROGRAM TP ON (TP.ID_TASK_PROGRAM_GLOBAL = CON.ID_TASK_PROGRAM_GLOBAL)
	LEFT JOIN REG_CERT RS on (L.id_reg_cert_global = RS.id_reg_cert_global)
WHERE 
	G.id_goods = @ID_GOODS
	AND S.SERIES_NUMBER = @SERIES_NUMBER
GROUP BY
	G.NAME, 
	PROD.NAME, 
	S.SERIES_NUMBER, 
	CONVERT(VARCHAR(10), S.BEST_BEFORE, 104), 
	L.PRICE_SUP, 
	TP.PROGRAM_NAME,
	ISNULL(RS.organ, '') + ISNULL(' '+RS.name, '') + ISNULL(' от '+CONVERT(VARCHAR(10), RS.date, 104), '')

-----------------------------------

RETURN 0
GO

/*
exec REPEX_CARD_OF_GOOD N'<XML>
  <DOC_STATES>
    <DOC_STATE>PROC</DOC_STATE>
  </DOC_STATES>
  <SERIES>90330</SERIES>
  <SORT_DOC>0</SORT_DOC>
  <NOAU>0</NOAU>
</XML>'*/