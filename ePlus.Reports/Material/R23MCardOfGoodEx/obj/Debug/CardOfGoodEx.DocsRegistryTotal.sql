

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID(N'DBO.REPEX_CARD_OF_GOOD') IS NULL) EXEC (N'CREATE PROCEDURE DBO.REPEX_CARD_OF_GOOD AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_CARD_OF_GOOD
    @XMLPARAM NTEXT AS

DECLARE @SORT_DOC BIT
DECLARE @NOAU BIT
DECLARE @SERIES BIGINT

DECLARE @SELF uniqueidentifier

SELECT TOP 1 @SELF = C.ID_CONTRACTOR_GLOBAL
    FROM ENTERPRISE_BRANCH EB(NOLOCK)
        INNER JOIN CONTRACTOR C(NOLOCK) ON C.ID_CONTRACTOR = EB.ID_CONTRACTOR
    WHERE EB.IS_SELF = 1


DECLARE @HDOC INT
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT * INTO #DOC_STATES
FROM OPENXML(@HDOC, '//XML/DOC_STATES/DOC_STATE', 2) WITH(DOC_STATE VARCHAR(4) '.')

SELECT
	@SORT_DOC = SORT_DOC,
	@SERIES = SERIES,
	@NOAU = NOAU
FROM OPENXML(@HDOC, '/XML', 2) WITH(
	SORT_DOC BIT 'SORT_DOC', --1 - по типу документа, 0 - по дате
	SERIES BIGINT 'SERIES',
	NOAU BIT 'NOAU'
)

EXEC SP_XML_REMOVEDOCUMENT @HDOC

DECLARE @DOCUMENTS TABLE
(
	DOC_DATE DATETIME,
	DOC_TYPE_NAME VARCHAR(50),
	DOC_NUM VARCHAR(50),
	[FROM] VARCHAR(210),
	[TO] VARCHAR(210),
	DOC_STATE VARCHAR(20),
	SUM_SAL MONEY,
	SUP_SUM MONEY,
	SUP_VAT MONEY,
	BASE_DOC VARCHAR(100),
	VAT_10 MONEY,
	VAT_18 MONEY,
	UNIT_NAME VARCHAR(100),
	QUANTITY MONEY
)

BEGIN	
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DOCUMENT_DATE,
		DOC_TYPE_NAME = 'Приходная накладная',
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.[NAME],
		[TO] = CASE WHEN @NOAU = 1 THEN C_TO.NAME + ' (' + S_TO.NAME + ')' ELSE C_TO.NAME END,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_RETAIL,
		SUP_SUM = D.SUM_SUPPLIER,
		SUP_VAT = D.SVAT_SUPPLIER,
		BASE_DOC = D.INCOMING_NUMBER + CASE WHEN D.INCOMING_DATE IS NULL THEN '' ELSE ' от ' + CONVERT(VARCHAR, D.INCOMING_DATE, 104) END,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.ID_DOCUMENT = D.ID_INVOICE_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.ID_DOCUMENT = D.ID_INVOICE_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM INVOICE D
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = D.ID_CONTRACTOR_SUPPLIER
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
		INNER JOIN INVOICE_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_INVOICE_GLOBAL = D.ID_INVOICE_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_INVOICE_GLOBAL AND LM.ID_TABLE = 2)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL )
	WHERE 
		L.ID_SERIES = @SERIES AND GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR(@SELF = C_TO.ID_CONTRACTOR_GLOBAL) )
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт возврата поставщику',
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.TOTAL,
		SUP_SUM = (SELECT SUM(I.PRICE_VAT * I.QUANTITY) FROM ACT_RETURN_TO_CONTRACTOR_ITEM I WHERE I.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL),
		SUP_VAT = (SELECT SUM((I.PRICE_VAT - I.PRICE) * I.QUANTITY) FROM ACT_RETURN_TO_CONTRACTOR_ITEM I WHERE I.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL),
		BASE_DOC = D.BASE_DOCUMENT_NAME,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.ID_DOCUMENT = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.ID_DOCUMENT = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM ACT_RETURN_TO_CONTRACTOR D
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR_TO
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN ACT_RETURN_TO_CONTRACTOR_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL AND LM.ID_TABLE = 3)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE 
		L.ID_SERIES = @SERIES AND GOOD_ITEM.ID_GOODS=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR(@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT DISTINCT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт разукомплектации',            
		DOC_NUM = D.MNEMOCODE,		
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = (SELECT SUM(PRICE_VAT_FROM * QUANTITY_FROM) FROM ACT_DISASSEMBLING_ITEM WHERE ID_ACT_DISASSEMBLING_GLOBAL = D.ID_ACT_DISASSEMBLING_GLOBAL),
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY_FROM) FROM LOT L INNER JOIN ACT_DISASSEMBLING_ITEM DI ON DI.ID_LOT_FROM = L.ID_LOT WHERE DI.ID_ACT_DISASSEMBLING_GLOBAL = D.ID_ACT_DISASSEMBLING_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY_FROM) FROM LOT L INNER JOIN ACT_DISASSEMBLING_ITEM DI ON DI.ID_LOT_FROM = L.ID_LOT WHERE DI.ID_ACT_DISASSEMBLING_GLOBAL = D.ID_ACT_DISASSEMBLING_GLOBAL),
		BASE_DOC = D.BASE_DOCUMENT_NAME,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.QUANTITY_ADD > 0 AND LM.ID_DOCUMENT = D.ID_ACT_DISASSEMBLING_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.QUANTITY_ADD > 0 AND LM.ID_DOCUMENT = D.ID_ACT_DISASSEMBLING_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM ACT_DISASSEMBLING D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN ACT_DISASSEMBLING_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_ACT_DISASSEMBLING_GLOBAL = D.ID_ACT_DISASSEMBLING_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_ACT_DISASSEMBLING_GLOBAL AND LM.ID_TABLE = 6)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND ((L.ID_LOT = GOOD_ITEM.ID_LOT_FROM)or(L.ID_LOT = GOOD_ITEM.ID_LOT_TO)))
	WHERE 
		L.ID_SERIES = @SERIES AND-- GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR(@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DATE_CHEQUE,
		DOC_TYPE_NAME = 'Чек продажи',            
		DOC_NUM = CONVERT(VARCHAR(30), D.ID_CHEQUE),
		[FROM] = C_FROM.NAME,
		[TO] = NULL,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUMM,
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL),
		VAT_10 = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND L.VAT_SUP = 10),
		VAT_18 = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND L.VAT_SUP = 18),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM CHEQUE D
		INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = D.ID_CASH_SESSION_GLOBAL
		INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = CR.ID_CONTRACTOR
		INNER JOIN CHEQUE_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_CHEQUE_GLOBAL AND LM.ID_TABLE = 7)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE D.CHEQUE_TYPE = 'SALE' AND
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR(@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DATE_CHEQUE,
		DOC_TYPE_NAME = 'Чек возврата',            
		DOC_NUM = CONVERT(VARCHAR(30), D.ID_CHEQUE),
		[FROM] = NULL,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUMM,
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL),
		VAT_10 = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND L.VAT_SUP = 10),
		VAT_18 = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN CHEQUE_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL AND L.VAT_SUP = 18),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM CHEQUE D
		INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = D.ID_CASH_SESSION_GLOBAL
		INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = CR.ID_CONTRACTOR
		INNER JOIN CHEQUE_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_CHEQUE_GLOBAL = D.ID_CHEQUE_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_CHEQUE_GLOBAL AND LM.ID_TABLE = 7)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE D.CHEQUE_TYPE = 'RETURN' AND
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL) )
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT DISTINCT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Перемещение товара',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = CASE WHEN @NOAU = 1 THEN C_TO.NAME + ' (' + S_TO.NAME + ')' ELSE C_TO.NAME END,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.TOTAL_SALE,
		SUP_SUM = D.TOTAL_SUPPLIER_VAT,
		SUP_VAT = D.TOTAL_SUPPLIER_VAT - D.TOTAL_SUPPLIER,
		BASE_DOC = D.BASE_DOCUMENT_NAME,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND D.ID_STORE_TO = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_MOVEMENT_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND D.ID_STORE_TO = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_MOVEMENT_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM MOVEMENT D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE_FROM
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE_TO
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
		INNER JOIN MOVEMENT_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_MOVEMENT_GLOBAL = D.ID_MOVEMENT_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_MOVEMENT_GLOBAL AND LM.ID_TABLE = 8)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND ((L.ID_LOT = GOOD_ITEM.ID_LOT_FROM)or(L.ID_LOT = GOOD_ITEM.ID_LOT_TO)))
	WHERE 
		L.ID_SERIES = @SERIES AND (((SELECT ID_SERIES FROM LOT WHERE GOOD_ITEM.ID_LOT_TO = LOT.ID_LOT) = @SERIES) OR ((SELECT ID_SERIES FROM LOT WHERE GOOD_ITEM.ID_LOT_FROM = LOT.ID_LOT) = @SERIES)) AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR ( not ((@SELF = C_TO.ID_CONTRACTOR_GLOBAL) AND (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL))))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт возврата от покупателя',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = C_FROM.NAME,
		[TO] = CASE WHEN @NOAU = 1 THEN C_TO.NAME + ' (' + S_TO.NAME + ')' ELSE C_TO.NAME END,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.TOTAL_WITH_VAT,
		SUP_SUM = D.TOTAL_WITH_VAT_SUPPLIER,
		SUP_VAT = D.TOTAL_WITH_VAT_SUPPLIER - D.TOTAL_SUPPLIER,
		BASE_DOC = CASE WHEN D.ID_TABLE_DATA_DOCUMENT_BASE = 21 THEN 'Расходная накладная ' + (SELECT MNEMOCODE + ' от ' + CONVERT(VARCHAR, [DATE], 104) FROM INVOICE_OUT WHERE ID_INVOICE_OUT = D.ID_DOCUMENT_BASE) WHEN D.ID_TABLE_DATA_DOCUMENT_BASE = 7 THEN 'Чек ' + (SELECT MNEMOCODE + ' от ' + CONVERT(VARCHAR, DATE_CHEQUE, 104) FROM CHEQUE WHERE ID_CHEQUE = D.ID_DOCUMENT_BASE) END,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.ID_DOCUMENT = D.ID_ACT_RETURN_TO_BUYER_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.ID_DOCUMENT = D.ID_ACT_RETURN_TO_BUYER_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM ACT_RETURN_TO_BUYER D
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = D.ID_CONTRACTOR_FROM
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE_TO
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
		INNER JOIN ACT_RETURN_TO_BUYER_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_ACT_RETURN_TO_BUYER_GLOBAL = D.ID_ACT_RETURN_TO_BUYER_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_ACT_RETURN_TO_BUYER_GLOBAL AND LM.ID_TABLE = 12)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE 
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт переоценки',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,		
		[TO] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = D.SUM_SUP,
		SUP_VAT = D.SVAT_SUP,
		BASE_DOC = D.BASE_DOC_TEXT,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.QUANTITY_ADD > 0 AND LM.ID_DOCUMENT = D.ID_ACT_REVALUATION2_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.QUANTITY_ADD > 0 AND LM.ID_DOCUMENT = D.ID_ACT_REVALUATION2_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM ACT_REVALUATION2 D
        INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
        INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
        INNER JOIN ACT_REVALUATION2_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_ACT_REVALUATION2_GLOBAL = D.ID_ACT_REVALUATION2_GLOBAL)
        INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_ACT_REVALUATION2_GLOBAL AND LM.ID_TABLE = 13)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE 
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт списания',            
		DOC_NUM = D.MNEMOCODE,            
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = NULL,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.RETAIL_SUM_VAT,
		SUP_SUM = (SELECT SUM(PRICE_SUP * QUANTITY) FROM ACT_DEDUCTION_ITEM WHERE ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM LOT L INNER JOIN ACT_DEDUCTION_ITEM DI ON DI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL WHERE DI.ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL),
		BASE_DOC = D.BASE_DOCUMENT_NAME,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.ID_DOCUMENT = D.ID_ACT_DEDUCTION_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.ID_DOCUMENT = D.ID_ACT_DEDUCTION_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM ACT_DEDUCTION D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN ACT_DEDUCTION_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_ACT_DEDUCTION_GLOBAL = D.ID_ACT_DEDUCTION_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_ACT_DEDUCTION_GLOBAL AND LM.ID_TABLE = 20)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE 
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Расходная накладная',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = C_TO.NAME,
		DOC_STATE = D.STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = D.SUM_SUP,
		SUP_VAT = D.SUM_SUP - D.SVAT_SUP,
		BASE_DOC = D.BASE_DOCUMENT_NAME,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.ID_DOCUMENT = D.ID_INVOICE_OUT_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.ID_DOCUMENT = D.ID_INVOICE_OUT_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM INVOICE_OUT D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR_TO
		INNER JOIN INVOICE_OUT_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_INVOICE_OUT_GLOBAL = D.ID_INVOICE_OUT_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_INVOICE_OUT_GLOBAL AND LM.ID_TABLE = 21)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE 
		L.ID_SERIES = @SERIES AND 
		D.STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		--AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Счет',            
		DOC_NUM = D.DOC_NUM,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = C_TO.NAME,
		DOC_STATE = D.DOC_STATE,
		SUM_SAL = (SELECT SUM(QUANTITY * PRICE_SAL) FROM BILL_ITEM WHERE ID_BILL_GLOBAL = D.ID_BILL_GLOBAL),
		SUP_SUM = (SELECT SUM(L.PRICE_SUP * DI.QUANTITY) FROM BILL_ITEM DI INNER JOIN LOT L ON L.ID_LOT = DI.ID_LOT WHERE DI.ID_BILL_GLOBAL = D.ID_BILL_GLOBAL),
		SUP_VAT = (SELECT SUM(L.PVAT_SUP * DI.QUANTITY) FROM BILL_ITEM DI INNER JOIN LOT L ON L.ID_LOT = DI.ID_LOT WHERE DI.ID_BILL_GLOBAL = D.ID_BILL_GLOBAL),
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.ID_DOCUMENT = D.ID_BILL_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.ID_DOCUMENT = D.ID_BILL_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM BILL D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = D.ID_CONTRACTOR
		INNER JOIN BILL_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_BILL_GLOBAL = D.ID_BILL_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_BILL_GLOBAL AND LM.ID_TABLE = 22)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT = GOOD_ITEM.ID_LOT)
	WHERE 
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) )
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DOC_DATE,
		DOC_TYPE_NAME = 'Инвентаризация',
		DOC_NUM = D.DOC_NUM,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = NULL,
		DOC_STATE = D.DOC_STATE,
		SUM_SAL = D.SUM_SAL,
		SUP_SUM = D.SUM_SUP,
		SUP_VAT = D.SVAT_SUP,
		VAT_10 = (SELECT SUM(PVAT_SUP * QUANTITY) FROM INVENTORY_VED_ITEM WHERE VAT_SUP = 10 AND ID_INVENTORY_VED_GLOBAL = D.ID_INVENTORY_VED_GLOBAL),
		VAT_18 = (SELECT SUM(PVAT_SUP * QUANTITY) FROM INVENTORY_VED_ITEM WHERE VAT_SUP = 18 AND ID_INVENTORY_VED_GLOBAL = D.ID_INVENTORY_VED_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM INVENTORY_VED D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN INVENTORY_VED_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_INVENTORY_VED_GLOBAL = D.ID_INVENTORY_VED_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_INVENTORY_VED_GLOBAL AND LM.ID_TABLE = 23)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_LOT_GLOBAL = GOOD_ITEM.ID_LOT_GLOBAL)
	WHERE
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOC_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL
	)
	SELECT 
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Документ ''Производство''',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = NULL,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_SAL
	FROM PRODUCTION D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN PRODUCTION_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_PRODUCTION_GLOBAL = D.ID_PRODUCTION_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_PRODUCTION_GLOBAL AND LM.ID_TABLE = 29)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND (SELECT ID_GOODS_GLOBAL from GOODS WHERE GOODS.ID_GOODS=L.ID_GOODS) = GOOD_ITEM.ID_GOODS_GLOBAL)
	WHERE
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C_FROM.ID_CONTRACTOR_GLOBAL))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT 
		DOC_DATE = D.DOCUMENT_DATE,
		DOC_TYPE_NAME = 'Ввод остатков',
		DOC_NUM = D.MNEMOCODE,
		[FROM] = NULL,
		[TO] = C.NAME,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_RETAIL,
		SUP_SUM = D.SUM_SUPPLIER,
		SUP_VAT = D.SVAT_SUPPLIER,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND LM.ID_DOCUMENT = D.ID_IMPORT_REMAINS_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND LM.ID_DOCUMENT = D.ID_IMPORT_REMAINS_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM IMPORT_REMAINS D
		INNER JOIN STORE S ON S.ID_STORE = D.ID_STORE
		INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
		INNER JOIN IMPORT_REMAINS_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_IMPORT_REMAINS_GLOBAL = D.ID_IMPORT_REMAINS_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_IMPORT_REMAINS_GLOBAL AND LM.ID_TABLE = 30)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND L.ID_GOODS = GOOD_ITEM.ID_GOODS)
	WHERE
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR (@SELF = C.ID_CONTRACTOR_GLOBAL))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT DISTINCT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Перемещение между подразделениями',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = CASE WHEN @NOAU = 1 THEN C_TO.NAME + ' (' + S_TO.NAME + ')' ELSE C_TO.NAME END,		
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_RETAIL,
		SUP_SUM = D.SUM_SUPPLIER,
		SUP_VAT = D.SVAT_SUPPLIER,
		BASE_DOC = NULL,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND D.ID_STORE_FROM_TRANSIT = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND D.ID_STORE_FROM_TRANSIT = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM INTERFIRM_MOVING D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE_FROM_MAIN
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE_FROM_TRANSIT
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
		INNER JOIN INTERFIRM_MOVING_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_INTERFIRM_MOVING_GLOBAL = D.ID_INTERFIRM_MOVING_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_GLOBAL AND LM.ID_TABLE = 37)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND ((L.ID_LOT = GOOD_ITEM.ID_LOT_FROM)or(L.ID_LOT = GOOD_ITEM.ID_LOT_TO)))
	WHERE 
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR ((@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL)))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT DISTINCT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт приёмки по перемещёнию',            
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = CASE WHEN @NOAU = 1 THEN C_TO.NAME + ' (' + S_TO.NAME + ')' ELSE C_TO.NAME END,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_RETAIL,
		SUP_SUM = D.SUM_SUPPLIER,
		SUP_VAT = D.SVAT_SUPPLIER,
		BASE_DOC = NULL,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND D.ID_STORE_TO_MAIN = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND D.ID_STORE_TO_MAIN = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM INTERFIRM_MOVING_ACCEPTANCE_ACT D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE_FROM_TRANSIT
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE_TO_MAIN
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
		INNER JOIN INTERFIRM_MOVING_ACCEPTANCE_ACT_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL = D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL AND LM.ID_TABLE = 38)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND ((L.ID_LOT = GOOD_ITEM.ID_LOT_FROM)or(L.ID_LOT = GOOD_ITEM.ID_LOT_TO)))
	WHERE
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR ((@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL)))
END

BEGIN
	INSERT INTO @DOCUMENTS
	(
		DOC_DATE,
		DOC_TYPE_NAME,
		DOC_NUM,
		[FROM],
		[TO],
		DOC_STATE,
		SUM_SAL,
		SUP_SUM,
		SUP_VAT,
		BASE_DOC,
		VAT_10,
		VAT_18,
		UNIT_NAME,
		QUANTITY
	)
	SELECT DISTINCT
		DOC_DATE = D.DATE,
		DOC_TYPE_NAME = 'Акт отказа по перемещению',         
		DOC_NUM = D.MNEMOCODE,
		[FROM] = CASE WHEN @NOAU = 1 THEN C_FROM.NAME + ' (' + S_FROM.NAME + ')' ELSE C_FROM.NAME END,
		[TO] = CASE WHEN @NOAU = 1 THEN C_TO.NAME + ' (' + S_TO.NAME + ')' ELSE C_TO.NAME END,
		DOC_STATE = D.DOCUMENT_STATE,
		SUM_SAL = D.SUM_RETAIL,
		SUP_SUM = D.SUM_SUPPLIER,
		SUP_VAT = D.SVAT_SUPPLIER,
		BASE_DOC = NULL,
		VAT_10 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 10 AND D.ID_STORE_FROM_MAIN = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL),
		VAT_18 = (SELECT SUM(LM.SVAT_SUP) FROM LOT_MOVEMENT LM INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL WHERE L.VAT_SUP = 18 AND D.ID_STORE_FROM_MAIN = L.ID_STORE AND LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL),
		UNIT_NAME = (SELECT NAME FROM UNIT UN1 INNER JOIN SCALING_RATIO SC_R ON UN1.ID_UNIT = SC_R.ID_UNIT WHERE SC_R.ID_SCALING_RATIO = L.ID_SCALING_RATIO),
		QUANTITY = GOOD_ITEM.QUANTITY
	FROM INTERFIRM_MOVING_REFUSAL_ACT D
		INNER JOIN STORE S_FROM ON S_FROM.ID_STORE = D.ID_STORE_FROM_TRANSIT
		INNER JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = S_FROM.ID_CONTRACTOR
		INNER JOIN STORE S_TO ON S_TO.ID_STORE = D.ID_STORE_FROM_MAIN
		INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
		INNER JOIN INTERFIRM_MOVING_REFUSAL_ACT_ITEM GOOD_ITEM ON (GOOD_ITEM.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL = D.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL)
		INNER JOIN LOT_MOVEMENT LM ON (LM.ID_DOCUMENT = D.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL AND LM.ID_TABLE = 39)
		INNER JOIN LOT L ON (L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL AND ((L.ID_LOT = GOOD_ITEM.ID_LOT_FROM)or(L.ID_LOT = GOOD_ITEM.ID_LOT_TO)))
	WHERE
		L.ID_SERIES = @SERIES AND --GOOD_ITEM.ID_SERIES=@SERIES AND
		D.DOCUMENT_STATE IN (SELECT DOC_STATE FROM #DOC_STATES)
		AND ( (@NOAU = 1) OR ((@SELF = C_FROM.ID_CONTRACTOR_GLOBAL) OR (@SELF = C_TO.ID_CONTRACTOR_GLOBAL)))
END

-----------------------------------

SELECT
	DOC_DATE,
	DOC_TYPE_NAME,
	DOC_NUM,
	[FROM],
	[TO],
	DOC_STATE = CASE WHEN DOC_STATE = 'SAVE' THEN 'Сохранён'
					WHEN DOC_STATE = 'PROC' THEN 'Отработан'
					WHEN DOC_STATE = 'DEL' THEN 'Удалён' 
					ELSE NULL END,
	SUM_SAL,
	SUP_SUM,
	SUP_VAT,
	BASE_DOC,
	VAT_10,
	VAT_18,
	UNIT_NAME,
	QUANTITY
FROM @DOCUMENTS
ORDER BY CASE WHEN @SORT_DOC = 0 THEN NULL ELSE DOC_TYPE_NAME END, DOC_DATE

-----------------------------------

SELECT DISTINCT
	GOOD_NAME = GOODS.NAME, 
	PROD_NAME = PRODUCER.NAME, 
	SERIES_NUMBER = SERIES.SERIES_NUMBER, 
	BEST_BEFORE = SERIES.BEST_BEFORE, 
	INVOICE_PRICE = INVOICE_ITEM.SUPPLIER_PRICE_VAT, 
	PROGRAM_NAME = TASK_PROGRAM.PROGRAM_NAME,
	STORED = 
		(
		SELECT 
			SUM(LL.QUANTITY_REM)
		FROM LOT LL 		
		LEFT JOIN STORE S_TEMP ON (LL.ID_STORE = S_TEMP.ID_STORE)
		LEFT JOIN CONTRACTOR C_TEMP ON (C_TEMP.ID_CONTRACTOR = S_TEMP.ID_CONTRACTOR)
		WHERE 
			L.ID_SERIES=LL.ID_SERIES
			AND ( (@NOAU = 1) OR (@SELF = C_TEMP.ID_CONTRACTOR_GLOBAL))
		),
	RESERVED = 
		(
		SELECT 
			SUM(LL.QUANTITY_RES) 
		FROM LOT LL 
		LEFT JOIN STORE S_TEMP ON (LL.ID_STORE = S_TEMP.ID_STORE)
		LEFT JOIN CONTRACTOR C_TEMP ON (C_TEMP.ID_CONTRACTOR = S_TEMP.ID_CONTRACTOR)
		WHERE 
			L.ID_SERIES=LL.ID_SERIES
			AND ( (@NOAU = 1) OR (@SELF = C_TEMP.ID_CONTRACTOR_GLOBAL))
		)
FROM LOT L
	INNER JOIN GOODS ON (L.ID_GOODS = GOODS.ID_GOODS)
	INNER JOIN PRODUCER ON (GOODS.ID_PRODUCER = PRODUCER.ID_PRODUCER)
	INNER JOIN SERIES ON (SERIES.ID_SERIES = L.ID_SERIES)
	LEFT JOIN INVOICE ON (L.INVOICE_NUM = INVOICE.MNEMOCODE)
	LEFT JOIN INVOICE_ITEM ON (INVOICE_ITEM.ID_INVOICE_GLOBAL = INVOICE.ID_INVOICE_GLOBAL)
	LEFT JOIN CONTRACTS ON (CONTRACTS.ID_CONTRACTS_GLOBAL = INVOICE.ID_CONTRACTS_GLOBAL)
	LEFT JOIN TASK_PROGRAM ON (TASK_PROGRAM.ID_TASK_PROGRAM_GLOBAL = CONTRACTS.ID_TASK_PROGRAM_GLOBAL)
WHERE L.ID_SERIES = @SERIES AND SERIES.ID_SERIES=L.ID_SERIES AND INVOICE_ITEM.ID_SERIES=L.ID_SERIES
	
-----------------------------------

RETURN 0
GO

/*
exec REPEX_CARD_OF_GOOD N'<XML>
  <DOC_STATES>
    <DOC_STATE>PROC</DOC_STATE>
  </DOC_STATES>
  <SERIES>90330</SERIES>
  <SORT_DOC>0</SORT_DOC>
  <NOAU>0</NOAU>
</XML>'*/