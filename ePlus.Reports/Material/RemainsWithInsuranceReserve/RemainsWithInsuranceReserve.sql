SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_REMAINS_WITH_INS_RESERVE') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_REMAINS_WITH_INS_RESERVE AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_REMAINS_WITH_INS_RESERVE
    @XMLPARAM NTEXT AS
	DECLARE @HDOC INT
	DECLARE @CO BIT
	DECLARE @TYPE VARCHAR(4)
	DECLARE @RESTS_ONLY BIT
	DECLARE @ALL_STORES BIT
	DECLARE @ALL_GOODS BIT
	DECLARE @CONTRACTORS VARCHAR(2048)
	
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@CO = CO, 
	@TYPE = TYPE, 
	@RESTS_ONLY = RESTS_ONLY
FROM OPENXML(@HDOC, '/XML') WITH(
	CO BIT 'CO', 
	TYPE VARCHAR(4) 'TYPE', 
	RESTS_ONLY BIT 'RESTS_ONLY'
)

SELECT * INTO #ID_STORES FROM OPENXML(@HDOC, '/XML/ID_STORE') WITH(ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_STORES = 1

SELECT * INTO #ID_GOODS FROM OPENXML(@HDOC, '/XML/ID_GOODS') WITH(ID_GOODS BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_GOODS = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC	

SELECT * 
INTO #TEMP
FROM (
SELECT
    G.ID_GOODS AS ID_GOODS,
    G.NAME AS GOODS_NAME,
    QUANTITY = SUM(ISNULL(SR.QUANTITY_REMAINS,0)),
    INS_RESERVE = ISNULL(AP.QUANTITY_MIN, 0), 
    SR.ID_STORE, 
    SR.ID_CONTRACTOR
FROM DBO.GOODS G WITH(NOLOCK)
INNER JOIN PRODUCER P WITH(NOLOCK) ON P.ID_PRODUCER = G.ID_PRODUCER
INNER JOIN COUNTRY C WITH(NOLOCK) ON C.ID_COUNTRY = P.ID_COUNTRY
LEFT JOIN UNIT U WITH(NOLOCK) ON U.ID_UNIT = G.ID_UNIT_DEFAULT
INNER JOIN (
    SELECT
        STORE.ID_STORE,
        STORE.ID_CONTRACTOR,
        L.ID_GOODS,
        QUANTITY_REMAINS = (L.QUANTITY_ADD - L.QUANTITY_SUB) * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR
    FROM LOT L
    INNER JOIN STORE ON STORE.ID_STORE = L.ID_STORE
    INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
    WHERE STORE.DATE_DELETED IS NULL
  UNION ALL
    SELECT
        STORE.ID_STORE, 
        STORE.ID_CONTRACTOR, 
        II.ID_GOODS, 
        0
    FROM INVOICE_ITEM II
		INNER JOIN INVOICE I ON I.ID_INVOICE_GLOBAL = II.ID_INVOICE_GLOBAL
		INNER JOIN STORE ON STORE.ID_STORE = I.ID_STORE
		INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = II.ID_SCALING_RATIO  
    WHERE I.DOCUMENT_STATE = 'SAVE' AND ON_THE_WAY=1
		AND STORE.DATE_DELETED IS NULL    
    ) SR ON SR.ID_GOODS = G.ID_GOODS
LEFT JOIN ASSORTMENT_PLAN AP ON AP.ID_GOODS = G.ID_GOODS AND AP.ID_CONTRACTOR = SR.ID_CONTRACTOR
	AND AP.DATE_DELETED IS NULL
WHERE 
	(SR.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1) OR @CO = 1)
	AND (SR.ID_STORE IN (SELECT ID_STORE FROM #ID_STORES) OR @ALL_STORES = 1)
	AND (G.ID_GOODS IN (SELECT ID_GOODS FROM #ID_GOODS) OR @ALL_GOODS = 1 
		OR (@TYPE = 'LESS' AND @RESTS_ONLY = 1))
GROUP BY
    G.ID_GOODS,
    G.NAME,
    ISNULL(AP.QUANTITY_MIN, 0),  
    SR.ID_STORE, 
    SR.ID_CONTRACTOR
HAVING ISNULL(AP.QUANTITY_MIN, 0) > 0
) A

IF @CO = 1
BEGIN
	IF @TYPE = 'WITH'
		SELECT T.*, STORE_NAME = S.NAME FROM #TEMP T
		INNER JOIN STORE S ON T.ID_STORE = S.ID_STORE
		ORDER BY S.NAME, T.GOODS_NAME
	ELSE
	BEGIN
		SELECT 
			T1.ID_GOODS,
			QUANTITY = SUM(T1.QUANTITY)
		INTO #QNT
		FROM #TEMP T1
		GROUP BY T1.ID_GOODS, T1.GOODS_NAME, T1.INS_RESERVE
	
		SELECT 
			T.ID_GOODS ,
			T.GOODS_NAME ,
			T.QUANTITY ,
			T.INS_RESERVE ,
			T.ID_STORE ,
			T.ID_CONTRACTOR, 
			STORE_NAME = S.NAME 
		FROM #TEMP T
		INNER JOIN STORE S ON T.ID_STORE = S.ID_STORE
		LEFT JOIN 
			#QNT Q ON Q.ID_GOODS = T.ID_GOODS
		WHERE ((T.QUANTITY > 0 AND @RESTS_ONLY = 1) OR @RESTS_ONLY = 0)
			AND (Q.QUANTITY < T.INS_RESERVE)
		ORDER BY S.NAME, T.GOODS_NAME
	
		DROP TABLE #QNT
	END
END
ELSE
BEGIN
	IF @TYPE = 'WITH'
		SELECT 
			T.ID_GOODS, 
			T.GOODS_NAME, 
			QUANTITY = SUM(T.QUANTITY), 
			T.INS_RESERVE, 
			ID_STORE = NULL, 
			ID_CONTRACTOR = NULL, 
			STORE_NAME = ''
		FROM #TEMP T
		GROUP BY T.ID_GOODS, T.GOODS_NAME, T.INS_RESERVE
		ORDER BY T.GOODS_NAME
	ELSE
		SELECT 
			T.ID_GOODS, 
			T.GOODS_NAME, 
			QUANTITY = SUM(T.QUANTITY), 
			T.INS_RESERVE, 
			ID_STORE = NULL, 
			ID_CONTRACTOR = NULL, 
			STORE_NAME = ''
		FROM #TEMP T
		GROUP BY T.ID_GOODS, T.GOODS_NAME, T.INS_RESERVE
		HAVING (((SUM(T.QUANTITY)) > 0 AND @RESTS_ONLY = 1) OR @RESTS_ONLY = 0)
			AND ((SUM(T.QUANTITY)) < T.INS_RESERVE)
		ORDER BY T.GOODS_NAME
END

DECLARE @ID_CONTRACTOR BIGINT
DECLARE [GS$CURSOR] CURSOR LOCAL FAST_FORWARD
		FOR SELECT DISTINCT
			[GS].ID_CONTRACTOR 
		FROM #TEMP GS
		ORDER BY GS.ID_CONTRACTOR
OPEN [GS$CURSOR]
WHILE (1=1)
BEGIN
	FETCH NEXT FROM [GS$CURSOR] INTO @ID_CONTRACTOR
	IF @@fetch_status=-1 
      BREAK
	IF @@fetch_status=-2
      CONTINUE
    SET @CONTRACTORS = ''
    SELECT 
		@CONTRACTORS = 
			CASE WHEN (@CONTRACTORS IS NULL OR @CONTRACTORS = '') THEN  
				C.NAME
			ELSE 
				@CONTRACTORS + ', ' + C.NAME
			END
	FROM (SELECT DISTINCT ID_CONTRACTOR FROM #TEMP) T
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR
	ORDER BY T.ID_CONTRACTOR
END
	CLOSE [GS$CURSOR]
	DEALLOCATE [GS$CURSOR]
SELECT CONTRACTORS = @CONTRACTORS

--DROP TABLE #TEMP

RETURN
GO

--EXEC dbo.REPEX_REMAINS_WITH_INS_RESERVE @XMLPARAM = N'<XML><CO>1</CO><TYPE>WITH</TYPE><RESTS_ONLY>1</RESTS_ONLY></XML>' 
