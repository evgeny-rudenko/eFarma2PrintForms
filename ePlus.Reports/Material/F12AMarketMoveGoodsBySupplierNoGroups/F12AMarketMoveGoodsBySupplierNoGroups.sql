SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.REPEX_F12A_MARKET_MOVE_GOODS_BY_SUPPLIER_NO_GROUPS') IS NULL) EXEC ('CREATE PROCEDURE DBO.REPEX_F12A_MARKET_MOVE_GOODS_BY_SUPPLIER_NO_GROUPS AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_F12A_MARKET_MOVE_GOODS_BY_SUPPLIER_NO_GROUPS
     @XMLPARAM NVARCHAR(max) AS

DECLARE @HDOC INT

DECLARE @DATE_FROM DATETIME, @DATE_TO DATETIME
DECLARE @ALL_TYPE_OUT BIT, @ALL_GOODS_GROUP BIT, @ALL_GOODS BIT, @ALL_STORES BIT, @ALL_SUPPLIERS BIT
DECLARE @SELECTED_GOODS_GROUP BIT, @SELECTED_GOODS BIT, @SELECTED_STORES BIT, @SELECTED_SUPPLIERS BIT
DECLARE @SHOW_PROD BIT, @SHOW_EMPTY_GROUP BIT, @SHOW_GROUPSUM BIT

DECLARE @IN1_INVOICE BIT, @IN2_MOVE_CO BIT, @IN3_MOVE_INSIDE BIT, @IN4_MOVE_OUTSIDE BIT
DECLARE @OUT1_CHEQUE BIT, @OUT2_MOVE_CO BIT, @OUT3_MOVE_INSIDE BIT, @OUT4_MOVE_OUTSIDE BIT, @OUT5_INVOICE_OUT BIT

DECLARE @ID_CONTRACTOR_CO BIGINT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
SELECT TOP 1  
	@DATE_FROM = DATE_FROM,
	@DATE_TO = DATE_TO,
	@SELECTED_GOODS_GROUP = SELECTED_GOODS_GROUP,
	@SELECTED_GOODS = SELECTED_GOODS,
	@SELECTED_STORES = SELECTED_STORES,
	@SELECTED_SUPPLIERS = SELECTED_SUPPLIERS,
	@SHOW_PROD = SHOW_PROD,
	@SHOW_EMPTY_GROUP = SHOW_EMPTY_GROUP,
	@SHOW_GROUPSUM = SHOW_GROUPSUM,
	
	@IN1_INVOICE = IN1_INVOICE,
	@IN2_MOVE_CO = IN2_MOVE_CO,
	@IN3_MOVE_INSIDE = IN3_MOVE_INSIDE,
	@IN4_MOVE_OUTSIDE = IN4_MOVE_OUTSIDE,
	
	@OUT1_CHEQUE = OUT1_CHEQUE,
	@OUT2_MOVE_CO = OUT2_MOVE_CO,
	@OUT3_MOVE_INSIDE = OUT3_MOVE_INSIDE,
	@OUT4_MOVE_OUTSIDE = OUT4_MOVE_OUTSIDE,
	@OUT5_INVOICE_OUT = OUT5_INVOICE_OUT
FROM OPENXML(@HDOC, '/XML')	WITH
(
	DATE_FROM DATETIME 'DATE_FROM',
	DATE_TO DATETIME 'DATE_TO',
	SELECTED_GOODS_GROUP BIT 'SELECTED_GOODS_GROUP',
	SELECTED_GOODS BIT 'SELECTED_GOODS',
	SELECTED_STORES BIT 'SELECTED_STORES',
	SELECTED_SUPPLIERS BIT 'SELECTED_SUPPLIERS',
	SHOW_PROD BIT 'SHOW_PROD',
	SHOW_EMPTY_GROUP BIT 'SHOW_EMPTY_GROUP',
	SHOW_GROUPSUM BIT 'SHOW_GROUPSUM',
	
	IN1_INVOICE BIT 'IN1_INVOICE',
	IN2_MOVE_CO BIT 'IN2_MOVE_CO',
	IN3_MOVE_INSIDE BIT 'IN3_MOVE_INSIDE',
	IN4_MOVE_OUTSIDE BIT 'IN4_MOVE_OUTSIDE',
	
	OUT1_CHEQUE BIT 'OUT1_CHEQUE',
	OUT2_MOVE_CO BIT 'OUT2_MOVE_CO',
	OUT3_MOVE_INSIDE BIT 'OUT3_MOVE_INSIDE',
	OUT4_MOVE_OUTSIDE BIT 'OUT4_MOVE_OUTSIDE',
	OUT5_INVOICE_OUT BIT 'OUT5_INVOICE_OUT'
)

SET @ALL_GOODS_GROUP = 0
SELECT * INTO #GOODS_GROUP
FROM OPENXML(@HDOC, '//ID_GOODS_GROUP')WITH(ID_GOODS_GROUP BIGINT '.') WHERE ISNULL(ID_GOODS_GROUP, 0) <> 0
IF (@@ROWCOUNT = 0)
	SET @ALL_GOODS_GROUP = 1
	
SET @ALL_GOODS = 0
SELECT * INTO #GOODS
FROM OPENXML(@HDOC, '//ID_GOODS')WITH(ID_GOODS BIGINT '.') WHERE ISNULL(ID_GOODS, 0) <> 0
IF (@@ROWCOUNT = 0)
	SET @ALL_GOODS = 1

SET @ALL_STORES = 0
SELECT * INTO #STORES
FROM OPENXML(@HDOC, '//ID_STORE')WITH(ID_STORE BIGINT '.') WHERE ISNULL(ID_STORE, 0) <> 0
IF (@@ROWCOUNT = 0)
	SET @ALL_STORES = 1
	
SET @ALL_SUPPLIERS = 0
SELECT * INTO #SUPPLIERS
FROM OPENXML(@HDOC, '//ID_SUPPLIER')WITH(ID_SUPPLIER BIGINT '.') WHERE ISNULL(ID_SUPPLIER, 0) <> 0
IF (@@ROWCOUNT = 0)
	SET @ALL_SUPPLIERS = 1

SET @ID_CONTRACTOR_CO = 
	(
		SELECT TOP 1 ID_CONTRACTOR FROM CONTRACTOR   
		WHERE  
			1 = 1
			AND ID_CONTRACTOR_GLOBAL IN   
				(
					SELECT ID_CONTRACTOR_GLOBAL FROM REPLICATION_CONFIG  
					WHERE 
						(EXPORT_MODEL = 'CENTER' AND IS_SELF = 0)  
						OR 
						(IS_SELF = 1 AND NOT EXISTS (SELECT 1 FROM REPLICATION_CONFIG T WHERE T.IS_SELF = 0 AND T.EXPORT_MODEL = 'CENTER'))  
				)  
	)

EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT

SELECT DISTINCT G.ID_GOODS 
INTO #GOODS_FILTER
FROM GOODS G
LEFT JOIN GOODS_2_GROUP G2G ON G2G.ID_GOODS = G.ID_GOODS AND G2G.DATE_DELETED IS NULL
WHERE 
	1 = 1
	--AND (@ALL_GOODS_KIND = 1 OR (@SELECTED_GOODS_KIND = 1 AND ISNULL(G.ID_GOODS_KIND, '') IN (SELECT ID_GOODS_KIND FROM #GOODS_KIND)) OR (@SELECTED_GOODS_KIND = 0 AND NOT ISNULL(G.ID_GOODS_KIND, '') IN (SELECT ID_GOODS_KIND FROM #GOODS_KIND)))
	AND
	(
		(@ALL_GOODS = 1 AND @ALL_GOODS_GROUP = 1)
		OR
		(
			(
				(@ALL_GOODS = 1 AND @ALL_GOODS_GROUP = 0)
				OR
				(@SELECTED_GOODS = 1 AND (ISNULL(G.ID_GOODS, '') IN (SELECT TMP.ID_GOODS FROM #GOODS TMP)))
				OR
				(@SELECTED_GOODS = 0 AND (NOT ISNULL(G.ID_GOODS, '') IN (SELECT TMP.ID_GOODS FROM #GOODS TMP)))
			)
			AND
			(
				(@ALL_GOODS = 0 AND @ALL_GOODS_GROUP = 1)
				OR
				(@SELECTED_GOODS_GROUP = 1 AND (ISNULL(G2G.ID_GOODS_GROUP, '') IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP)))
				OR
				(@SELECTED_GOODS_GROUP = 0 AND (NOT ISNULL(G2G.ID_GOODS_GROUP, '') IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP)))
			)
		)
		OR
		(
		  (@ALL_GOODS = 0 AND @ALL_GOODS_GROUP = 0)
		  AND
		  (
			(
			  (@SELECTED_GOODS = 1) AND (@SELECTED_GOODS_GROUP = 1) AND ((ISNULL(G.ID_GOODS, '') IN (SELECT TMP.ID_GOODS FROM #GOODS TMP)) OR (ISNULL(G2G.ID_GOODS_GROUP, '') IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP)))
			)
			OR
			(
			  (@SELECTED_GOODS = 0) AND (@SELECTED_GOODS_GROUP = 0) AND (NOT ISNULL(G.ID_GOODS, '') IN (SELECT TMP.ID_GOODS FROM #GOODS TMP)) AND (NOT ISNULL(G2G.ID_GOODS_GROUP, '') IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP))
			)
			OR
			(
			  (@SELECTED_GOODS = 1) AND (@SELECTED_GOODS_GROUP = 0) AND (ISNULL(G.ID_GOODS, '') IN (SELECT TMP.ID_GOODS FROM #GOODS TMP)) AND (NOT ISNULL(G2G.ID_GOODS_GROUP, '') IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP))
			)
			OR
			(
			  (@SELECTED_GOODS = 0) AND (@SELECTED_GOODS_GROUP = 1) AND (NOT ISNULL(G.ID_GOODS, '') IN (SELECT TMP.ID_GOODS FROM #GOODS TMP)) AND (ISNULL(G2G.ID_GOODS_GROUP, '') IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP))
			)
		  )
		)	
	)

IF(@SELECTED_GOODS = 0)
BEGIN
	DELETE FROM #GOODS_FILTER
	WHERE ID_GOODS IN (SELECT TMP.ID_GOODS FROM #GOODS TMP)
END	

IF(@SELECTED_GOODS_GROUP = 0)
BEGIN
	DELETE FROM #GOODS_FILTER
	WHERE ID_GOODS IN
	(
		SELECT DISTINCT G2G.ID_GOODS FROM GOODS_2_GROUP G2G
		WHERE 
			1 = 1
			AND G2G.ID_GOODS_GROUP IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP)
			AND G2G.DATE_DELETED IS NULL
	)
END	

SELECT
	ID_GOODS_GROUP = -1,
	GOODS_GROUP_NAME = '-',
	ID_GOODS= G.ID_GOODS,
	GOODS_CODE = G.CODE,
	GOODS_NAME = G.NAME + CASE WHEN @SHOW_PROD = 1 THEN ISNULL('<S>'+PROD.NAME, '') ELSE '' END,
	PRODUCER_NAME = PROD.NAME,
	ID_SUPPLIER = L.ID_SUPPLIER,
	SUPPLIER_NAME = C.NAME,
	IN_QUANTITY = SUM(CASE WHEN LM.OP = 'ADD' THEN ROUND(LM.QUANTITY_ADD * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR, 2) ELSE 0 END),
	IN_SUP_SUM = SUM(CASE WHEN LM.OP = 'ADD' THEN ROUND(LM.QUANTITY_ADD * L.PRICE_SUP, 2) ELSE 0 END),
	IN_SAL_SUM = SUM(CASE WHEN LM.OP = 'ADD' THEN ROUND(LM.QUANTITY_ADD * L.PRICE_SAL, 2) ELSE 0 END),	
	OUT_QUANTITY = SUM(CASE WHEN LM.OP = 'SUB' THEN ROUND(LM.QUANTITY_SUB * CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR, 2) ELSE 0 END),
	OUT_SUP_SUM = SUM(CASE WHEN LM.OP = 'SUB'  THEN ROUND(LM.QUANTITY_SUB * L.PRICE_SUP, 2) ELSE 0 END),
	OUT_SAL_SUM = SUM(CASE WHEN LM.OP = 'SUB'  THEN ROUND(LM.QUANTITY_SUB * L.PRICE_SAL, 2) ELSE 0 END)
INTO #TEMP_RESULT
FROM GOODS G
LEFT JOIN GOODS_2_GROUP G2G on G.ID_GOODS = G2G.ID_GOODS AND G2G.DATE_DELETED IS NULL
LEFT JOIN GOODS_GROUP GG on GG.ID_GOODS_GROUP = G2G.ID_GOODS_GROUP AND GG.DATE_DELETED IS NULL
LEFT JOIN PRODUCER PROD on PROD.ID_PRODUCER = G.ID_PRODUCER
INNER JOIN LOT L on L.ID_GOODS = G.ID_GOODS
INNER JOIN CONTRACTOR C on C.ID_CONTRACTOR = L.ID_SUPPLIER
INNER JOIN LOT_MOVEMENT LM on 
	1 = 1
	AND LM.ID_TABLE IN (2, 8, 19, 21, 37)
	AND LM.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
	AND LM.DATE_OP BETWEEN @DATE_FROM and @DATE_TO	
INNER JOIN SCALING_RATIO SR on L.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
--
LEFT JOIN INTERFIRM_MOVING MOVE_1 ON LM.ID_TABLE = 37 AND LM.ID_DOCUMENT = MOVE_1.ID_INTERFIRM_MOVING_GLOBAL
LEFT JOIN MOVEMENT MOVE_2 ON LM.ID_TABLE = 8 AND LM.ID_DOCUMENT = MOVE_2.ID_MOVEMENT_GLOBAL
LEFT JOIN STORE STORE_FROM ON STORE_FROM.ID_STORE = ISNULL(MOVE_1.ID_STORE_FROM_MAIN, MOVE_2.ID_STORE_FROM)
LEFT JOIN STORE STORE_TO ON STORE_TO.ID_STORE = ISNULL(MOVE_1.ID_STORE_TO_MAIN, MOVE_2.ID_STORE_TO)
--
WHERE 
	1 = 1
	-- AND (@SHOW_EMPTY_GROUP = 1 OR not GG.ID_GOODS_GROUP is null)
	AND (@ALL_STORES = 1 OR (@SELECTED_STORES = 1 AND L.ID_STORE IN (SELECT ID_STORE FROM #STORES)) OR (@SELECTED_STORES = 0 AND NOT L.ID_STORE IN (SELECT ID_STORE FROM #STORES)))
	AND (@ALL_SUPPLIERS = 1 OR (@SELECTED_SUPPLIERS = 1 AND L.ID_SUPPLIER IN (SELECT ID_SUPPLIER FROM #SUPPLIERS)) OR (@SELECTED_SUPPLIERS = 0 AND NOT L.ID_SUPPLIER IN (SELECT ID_SUPPLIER FROM #SUPPLIERS)))
	AND G.ID_GOODS IN (SELECT ID_GOODS FROM #GOODS_FILTER)
	AND (@ALL_GOODS_GROUP = 1 OR (@SELECTED_GOODS_GROUP = 1 AND GG.ID_GOODS_GROUP IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP)) OR (@SELECTED_GOODS_GROUP = 0 AND NOT GG.ID_GOODS_GROUP IN (SELECT TMP.ID_GOODS_GROUP FROM #GOODS_GROUP TMP)))
	AND
	( 
		(@IN1_INVOICE = 1 AND LM.OP = 'ADD' AND LM.CODE_OP = 'INVOICE')
		OR
		(@IN2_MOVE_CO = 1 AND LM.OP = 'ADD' AND LM.CODE_OP = 'MOVE' AND STORE_FROM.ID_CONTRACTOR = @ID_CONTRACTOR_CO AND STORE_FROM.ID_CONTRACTOR <> STORE_TO.ID_CONTRACTOR)
		OR
		(@IN3_MOVE_INSIDE = 1 AND LM.OP = 'ADD' AND LM.CODE_OP = 'MOVE' AND STORE_FROM.ID_CONTRACTOR = STORE_TO.ID_CONTRACTOR)
		OR
		(@IN4_MOVE_OUTSIDE = 1 AND LM.OP = 'ADD' AND LM.CODE_OP = 'MOVE' AND STORE_FROM.ID_CONTRACTOR <> @ID_CONTRACTOR_CO AND STORE_FROM.ID_CONTRACTOR <> STORE_TO.ID_CONTRACTOR)
		OR
		(@OUT1_CHEQUE = 1 AND LM.OP = 'SUB' AND LM.CODE_OP = 'CHEQUE')
		OR
		(@OUT2_MOVE_CO = 1 AND LM.OP = 'SUB' AND LM.CODE_OP = 'MOVE' AND STORE_TO.ID_CONTRACTOR = @ID_CONTRACTOR_CO AND STORE_FROM.ID_CONTRACTOR <> STORE_TO.ID_CONTRACTOR)
		OR
		(@OUT3_MOVE_INSIDE = 1 AND LM.OP = 'SUB' AND LM.CODE_OP = 'MOVE' AND STORE_FROM.ID_CONTRACTOR = STORE_TO.ID_CONTRACTOR)
		OR
		(@OUT4_MOVE_OUTSIDE = 1 AND LM.OP = 'SUB' AND LM.CODE_OP = 'MOVE' AND STORE_TO.ID_CONTRACTOR <> @ID_CONTRACTOR_CO AND STORE_FROM.ID_CONTRACTOR <> STORE_TO.ID_CONTRACTOR)
		OR
		(@OUT5_INVOICE_OUT = 1 AND LM.OP = 'SUB' AND LM.CODE_OP = 'INVOICE_OUT')
	)	
GROUP BY
	-- GG.ID_GOODS_GROUP,
	-- GG.NAME,
	G.ID_GOODS,
	G.CODE,
	G.NAME,
	PROD.NAME,
	L.ID_SUPPLIER,
	C.NAME

SELECT 
	RES.*
FROM #TEMP_RESULT RES
ORDER BY GOODS_GROUP_NAME, GOODS_NAME, PRODUCER_NAME, SUPPLIER_NAME

SELECT
	COUNT_GROUP = (SELECT COUNT(*) FROM (SELECT DISTINCT T1.ID_GOODS_GROUP FROM #TEMP_RESULT T1) as T2)

RETURN 0
GO


/*
exec REPEX_F12A_MARKET_MOVE_GOODS_BY_SUPPLIER_NO_GROUPS @xmlParam=N'<XML><DATE_FROM>2014-04-01T13:54:49.031</DATE_FROM><DATE_TO>2014-04-10T13:54:49.031</DATE_TO><SELECTED_GOODS_GROUP>1</SELECTED_GOODS_GROUP><SELECTED_GOODS>1</SELECTED_GOODS><SELECTED_STORES>1</SELECTED_STORES><SHOW_PROD>1</SHOW_PROD><SHOW_EMPTY_GROUP>1</SHOW_EMPTY_GROUP></XML>'*/