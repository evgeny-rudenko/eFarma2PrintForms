SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.TORG29_ROZ_EX') IS NULL) EXEC('CREATE PROCEDURE DBO.TORG29_ROZ_EX AS RETURN')
GO

ALTER PROCEDURE DBO.TORG29_ROZ_EX
    @XMLPARAM NTEXT
AS

DECLARE @STORE VARCHAR(4000)
DECLARE @LEN INT
DECLARE @PRICE_BEGIN MONEY
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE /*@NO_DETAIL BIT, */@SORT_DOC BIT, @SHOW_ADD BIT, @SHOW_SUB BIT, @REFRESH_DOC_MOV BIT
DECLARE @NOAU BIT, @CO BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FR = DATE_FR,
        @DATE_TO = DATE_TO,
--        @NO_DETAIL = NO_DETAIL,
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD,
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV,
		@NOAU = NOAU,
		@CO = CO
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO',
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC',
        SHOW_ADD BIT 'SHOW_ADD',
        SHOW_SUB BIT 'SHOW_SUB',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV',
		NOAU BIT 'NOAU',
		CO BIT 'CO'
    )
    --  ŒÕ“–¿√≈Õ“€
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM CONTRACTOR C(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')) TAB ON TAB.ID_CONTRACTOR = C.ID_CONTRACTOR
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND C.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
    -- — À¿ƒ€
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE
	WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- ÔÂÂÒ˜ËÚ‡Ú¸ DOC_MOVEMENT ÔÓ ‚ÒÂÏ ‰ÓÍÛÏÂÌÚ‡Ï
    -- print 'ÔÂÂÒ˜ÂÚ'
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- ÓÚÌÓÏËÓ‚‡Ú¸ ‰‡Ú˚
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

-- ≈—À» Õ≈ ” ¿«¿Õ — À¿ƒ, “Œ »“Œ√» ¬€¡»–¿ﬁ“—ﬂ œŒ ¬—≈Ã — À¿ƒ¿Ã
IF NOT EXISTS(SELECT TOP 1 1 FROM #STORE) BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)
    SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
    FROM STORE S(NOLOCK) INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)

-- Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ, —”ÃÃ€ (œ–»’Œƒ/–¿—’Œƒ)
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)

DECLARE @ORDER VARCHAR(128)
IF @SHOW_ADD = 1 BEGIN
    -- Œ¡Ÿ»… œ–»’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
    SELECT
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        ID_CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
        CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
		INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('π Õœ:'+ I.INCOMING_NUMBER,'') ELSE '' END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
		SUM_SUP = SUM(DM.SUM_SUP),
		SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),--SUM(DM.SUM_ACC),
		DIFF = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - DM.SUM_SUP) --SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_FROM
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_FROM
    WHERE (CODE_OP='ADD' OR (CODE_OP='DIS' AND DM.ID_TABLE=19 AND SIGN_OP=-1))--DM.CODE_OP='ADD' AND DM.ID_TABLE<>19
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
	AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_from not in (select id_store from #store where id_contractor = dm.id_contractor_to))
    GROUP BY DM.ID_DOCUMENT, 
			 DM.ID_TABLE, 
			 TD.DESCRIPTION, 
			 DM.DATE_OP, 
			 AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
             CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
			 CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('π Õœ:'+ I.INCOMING_NUMBER,'') ELSE '' END
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE NULL END, 
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TD.DESCRIPTION END,
		CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
		DM.DATE_OP

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_STORE_MOVEMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
        DATE_OP = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
		INCOMING_NUMBER = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
        DIFF = CAST(NULL AS MONEY)
END

IF @SHOW_SUB = 1 BEGIN
    -- Œ¡Ÿ»… –¿—’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
	SELECT 
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        ID_CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
        CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        AMOUNT_SUB = SUM(DM.QUANTITY),
        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE=19 THEN DM.SUM_ACC * DM.SIGN_OP
						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE<>19 THEN DM.SUM_ACC
						   ELSE 0 END),
		SUM_SUP = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_SUP * DM.SIGN_OP * -1
						   END),													--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_ACC * DM.SIGN_OP * -1
						   END),													--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END), 
		DIFF = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_ACC * DM.SIGN_OP * -1 END - 
				   CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_SUP * DM.SIGN_OP * -1 END)	
	INTO #T				
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_TO
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_TO
    WHERE (CODE_OP IN ('SUB', 'DIS') OR (DM.ID_TABLE=19 AND CODE_OP<>'ADD')) --(CODE_OP IN ('SUB', 'DIS') OR DM.ID_TABLE=19)
		AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
		AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
		AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_to not in (select id_store from #store where id_contractor = dm.id_contractor_from))
    GROUP BY DM.ID_DOCUMENT, 
		     DM.ID_TABLE, 
             TD.DESCRIPTION, 
             DM.DATE_OP, 
             AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP

	SELECT * FROM #T
	ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DATE_OP ELSE NULL END, 
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TABLE_NAME END, 
		CONTRACTOR_TO, DATE_OP

	SELECT SUM_DIS = SUM(SUM_DIS) FROM #T

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_STORE_MOVEMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
        DATE_OP = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_SUB = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
        DIFF = CAST(NULL AS MONEY)
        
        SELECT SUM_DIS = NULL
END

-- Œ—“¿“Œ  Õ¿  ŒÕ≈÷, —”ÃÃ€ (œ–»’Œƒ/–¿—’Œƒ)
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)

DECLARE @STORES VARCHAR(1024), @CONTRACTORS VARCHAR(1024)
EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT COMPANY = @CONTRACTORS, STORE = @STORES

SELECT S_SUM_ACC = NULL

RETURN 0
GO

/*
exec TORG29_ROZ_EX N'
<XML>
	<DATE_FR>2009-12-01T00:00:00.000</DATE_FR>
	<DATE_TO>2009-12-07T00:00:00.000</DATE_TO>
	<NO_DETAIL>0</NO_DETAIL>
	<SHOW_ADD>1</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<SORT_DOC>1</SORT_DOC>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
	<NOAU>0</NOAU>
	<CO>1</CO>
</XML>'*/

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.TORG29_ROZ_EX_SERVICE') IS NULL) EXEC('CREATE PROCEDURE DBO.TORG29_ROZ_EX_SERVICE AS RETURN')
GO

ALTER PROCEDURE DBO.TORG29_ROZ_EX_SERVICE
    @XMLPARAM NTEXT
AS

DECLARE @STORE VARCHAR(4000)
DECLARE @LEN INT
DECLARE @PRICE_BEGIN MONEY
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE /*@NO_DETAIL BIT, */@SORT_DOC BIT, @SHOW_ADD BIT, @SHOW_SUB BIT, @REFRESH_DOC_MOV BIT
DECLARE @NOAU BIT, @CO BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FR = DATE_FR,
        @DATE_TO = DATE_TO,
--        @NO_DETAIL = NO_DETAIL,
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD,
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV,
		@NOAU = NOAU,
		@CO = CO
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO',
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC',
        SHOW_ADD BIT 'SHOW_ADD',
        SHOW_SUB BIT 'SHOW_SUB',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV',
		NOAU BIT 'NOAU',
		CO BIT 'CO'
    )
    --  ŒÕ“–¿√≈Õ“€
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM CONTRACTOR C(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')) TAB ON TAB.ID_CONTRACTOR = C.ID_CONTRACTOR
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND C.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
    -- — À¿ƒ€
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE
	WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
EXEC SP_XML_REMOVEDOCUMENT @HDOC


IF @REFRESH_DOC_MOV = 1 BEGIN
    -- ÔÂÂÒ˜ËÚ‡Ú¸ DOC_MOVEMENT ÔÓ ‚ÒÂÏ ‰ÓÍÛÏÂÌÚ‡Ï
    -- print 'ÔÂÂÒ˜ÂÚ'
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- ÓÚÌÓÏËÓ‚‡Ú¸ ‰‡Ú˚
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

-- ≈—À» Õ≈ ” ¿«¿Õ — À¿ƒ, “Œ »“Œ√» ¬€¡»–¿ﬁ“—ﬂ œŒ ¬—≈Ã — À¿ƒ¿Ã
IF NOT EXISTS(SELECT TOP 1 1 FROM #STORE) BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)
    SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
    FROM STORE S(NOLOCK) INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)

-- Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ, —”ÃÃ€ (œ–»’Œƒ/–¿—’Œƒ)
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND (DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))

DECLARE @ORDER VARCHAR(128)
IF @SHOW_ADD = 1 BEGIN
    -- Œ¡Ÿ»… œ–»’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
    SELECT
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        ID_CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
        CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
		INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('π Õœ:'+ I.INCOMING_NUMBER,'') ELSE '' END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
		SUM_SUP = SUM(DM.SUM_SUP),
		SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),--SUM(DM.SUM_ACC),
		DIFF = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - DM.SUM_SUP) --SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_FROM
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_FROM
    WHERE (CODE_OP='ADD' OR (CODE_OP='DIS' AND DM.ID_TABLE=19 AND SIGN_OP=-1))--DM.CODE_OP='ADD' AND DM.ID_TABLE<>19
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
	AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_from not in (select id_store from #store where id_contractor = dm.id_contractor_to))
    GROUP BY DM.ID_DOCUMENT, 
			 DM.ID_TABLE, 
			 TD.DESCRIPTION, 
			 DM.DATE_OP, 
			 AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
             CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
			 CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('π Õœ:'+ I.INCOMING_NUMBER,'') ELSE '' END
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE NULL END, 
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TD.DESCRIPTION END,
		CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
		DM.DATE_OP

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_STORE_MOVEMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
        DATE_OP = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
		INCOMING_NUMBER = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
        DIFF = CAST(NULL AS MONEY)
END

IF @SHOW_SUB = 1 BEGIN
    -- Œ¡Ÿ»… –¿—’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
	SELECT 
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = CASE WHEN DM.ID_STORE IS NULL THEN 99 ELSE DM.ID_TABLE END,
        TABLE_NAME = CASE WHEN DM.ID_STORE IS NULL THEN '”ÒÎÛ„‡' ELSE TD.DESCRIPTION END,
        ID_CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
        CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        DOC_NAME = CASE WHEN DM.ID_STORE IS NULL THEN '”ÒÎÛ„‡' ELSE ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END END,
		DATE_OP = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        AMOUNT_SUB = SUM(DM.QUANTITY),
        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE=19 THEN DM.SUM_ACC * DM.SIGN_OP
						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE<>19 THEN DM.SUM_ACC
						   ELSE 0 END),
		SUM_SUP = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_SUP * DM.SIGN_OP * -1
						   END),													--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_ACC * DM.SIGN_OP * -1
						   END),													--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END), 
		DIFF = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_ACC * DM.SIGN_OP * -1 END - 
				   CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_SUP * DM.SIGN_OP * -1 END)	
	INTO #T				
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_TO
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_TO
    WHERE (CODE_OP IN ('SUB', 'DIS') OR (DM.ID_TABLE=19 AND DM.ID_STORE IS NULL OR CODE_OP<>'ADD'))
		AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
		AND (DM.ID_STORE IS NULL OR DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))
		AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_to not in (select id_store from #store where id_contractor = dm.id_contractor_from))
    GROUP BY DM.ID_DOCUMENT, 
		     CASE WHEN DM.ID_STORE IS NULL THEN 99 ELSE DM.ID_TABLE END,
             CASE WHEN DM.ID_STORE IS NULL THEN '”ÒÎÛ„‡' ELSE TD.DESCRIPTION END,
             DM.DATE_OP, 
             AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 CASE WHEN DM.ID_STORE IS NULL THEN '”ÒÎÛ„‡' ELSE ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END END
    --ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP
	ORDER BY CASE WHEN DM.ID_STORE IS NULL THEN 99 ELSE DM.ID_TABLE END, DM.DATE_OP
	
	SELECT * FROM #T
	ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DATE_OP ELSE NULL END, 
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TABLE_NAME END, 
		CONTRACTOR_TO, DATE_OP

	SELECT SUM_DIS = SUM(SUM_DIS) FROM #T

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_STORE_MOVEMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
        DATE_OP = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_SUB = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
        DIFF = CAST(NULL AS MONEY)
        
	SELECT SUM_DIS = NULL
END

-- Œ—“¿“Œ  Õ¿  ŒÕ≈÷, —”ÃÃ€ (œ–»’Œƒ/–¿—’Œƒ)
    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND (DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))

DECLARE @STORES VARCHAR(1024), @CONTRACTORS VARCHAR(1024)
EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT COMPANY = @CONTRACTORS, STORE = @STORES

IF(@SHOW_SUB = 1)
BEGIN
SELECT S_SUM_ACC = SUM(SUM_ACC) FROM #T WHERE ID_TABLE = 99
END ELSE
BEGIN
SELECT S_SUM_ACC = NULL
END

RETURN 0
GO

/*
exec TORG29_ROZ_EX_SERVICE N'
<XML>
	<DATE_FR>2010-01-01T00:00:00.000</DATE_FR>
	<DATE_TO>2010-06-01T00:00:00.000</DATE_TO>
	<NO_DETAIL>0</NO_DETAIL>
	<SHOW_ADD>1</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<SORT_DOC>1</SORT_DOC>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
	<NOAU>0</NOAU>
	<CO>1</CO>
</XML>'*/