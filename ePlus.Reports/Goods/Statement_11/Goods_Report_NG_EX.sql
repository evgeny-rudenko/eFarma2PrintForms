SET NOCOUNT ON 
SET QUOTED_IDENTIFIER OFF
GO
---------------------------------------------------------------------------
IF (OBJECT_ID('DBO.REP_GOODS_REPORTS_NG_EX') IS NULL ) EXEC ('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX AS SELECT NULL')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX
         @XMLPARAM NTEXT
AS

--DECLARE @NO_DETAIL BIT --, @ALL_STORE BIT
DECLARE @DATE_FR DATETIME, 
        @DATE_TO DATETIME
DECLARE @SORT_DOC BIT, 
        @SHOW_ADD BIT, 
        @SHOW_SUB BIT, 
        @REFRESH_DOC_MOV BIT
DECLARE @NOAU BIT, @CO BIT
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1 
        @DATE_FR = DATE_FR, 
        @DATE_TO = DATE_TO,
        --@NO_DETAIL = NO_DETAIL, 
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD, 
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV,
		@NOAU = NOAU,
		@CO = CO
    FROM OPENXML(@HDOC, '/XML') 
    WITH(
        DATE_FR DATETIME 'DATE_FR', 
        DATE_TO DATETIME 'DATE_TO', 
--        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC', 
        SHOW_ADD BIT 'SHOW_ADD', 
        SHOW_SUB BIT 'SHOW_SUB', 
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV',
		NOAU BIT 'NOAU',
		CO BIT 'CO')

    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬  ŒÕ“–¿√≈Õ“Œ¬ */
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM 
        (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
        WITH(ID_CONTRACTOR BIGINT '.')) TAB
    INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = TAB.ID_CONTRACTOR
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND C.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
    
    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ — À¿ƒŒ¬ */
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM
    	(SELECT * FROM OPENXML(@HDOC, '//ID_STORE') 
        WITH(ID_STORE BIGINT '.')) TAB
    INNER JOIN STORE S ON S.ID_STORE = TAB.ID_STORE
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
		
EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- ÔÂÂÒ˜ËÚ‡Ú¸ DOC_MOVEMENT ÔÓ ‚ÒÂÏ ‰ÓÍÛÏÂÌÚ‡Ï
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- ÓÚÌÓÏËÓ‚‡Ú¸ ‰‡Ú˚
EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

-- ≈—À» Õ≈ ” ¿«¿Õ — À¿ƒ, “Œ »“Œ√» ¬€¡»–¿ﬁ“—ﬂ œŒ ¬—≈Ã — À¿ƒ¿Ã
IF (SELECT COUNT(*) FROM #STORE) = 0 BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)

	SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
	FROM STORE S
	INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)


--select * from #store

-- Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ
    SELECT
	    VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	    SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
	    SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),

	    SUM_ACC0 = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),--SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
	    SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		DELTA = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP)- SUM(DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
	GROUP BY DM.VAT_RATE

DECLARE @ORDER VARCHAR(128)
IF(@SHOW_ADD = 1) BEGIN
	-- Œ¡Ÿ»… œ–»’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã

	SET @SQL = '
        SELECT
            DM.ID_DOCUMENT, 
            DOC_NAME = (SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
                        WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE),  
            DM.DATE_OP, 
			INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL(''π Õœ:''+ I.INCOMING_NUMBER,'''') ELSE '''' END,
            ALD.DOC_NUM,
            VAT_RATE = ''Õƒ— '' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + ''%'',      
            SUM_SUP0 = SUM(DM.SUM_SUP - DM.SVAT_SUP),
            SVAT_SUP = SUM(DM.SVAT_SUP),
            SUM_SUP = SUM(DM.SUM_SUP),        
            SUM_ACC0 = SUM(DM.SUM_ACC - DM.SVAT_ACC),
            SVAT_ACC = SUM(DM.SVAT_ACC),
            SUM_ACC = SUM(DM.SUM_ACC),
            DELTA = SUM(DM.SUM_ACC) - SUM(DM.SUM_SUP)
        FROM DOC_MOVEMENT DM
            INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
            LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
			LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
        WHERE DM.CODE_OP = ''ADD''
            AND DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
			AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_from not in (select id_store from #store where id_contractor = dm.id_contractor_to))
        GROUP BY DM.ID_DOCUMENT, DM.ID_STORE, DM.DATE_OP, CASE WHEN DM.ID_TABLE = 2 THEN ISNULL(''π Õœ:''+ I.INCOMING_NUMBER,'''') ELSE '''' END, ALD.DOC_NUM, DM.VAT_RATE
        ORDER BY #ORDER'

    SET @ORDER = 'DOC_NAME ASC, DOC_NUM ASC, DATE_OP ASC'
    IF(@SORT_DOC = 0) SET @ORDER = 'DATE_OP ASC, DOC_NAME ASC, DOC_NUM ASC'

    SET @SQL = REPLACE(@SQL, '#ORDER', @ORDER)

	EXEC SP_EXECUTESQL @SQL, N'@DATE_FR DATETIME, @DATE_TO DATETIME, @NOAU BIT',
        @DATE_FR = @DATE_FR, @DATE_TO = @DATE_TO, @NOAU = @NOAU
END

ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END

IF(@SHOW_SUB = 1) BEGIN
	-- Œ¡Ÿ»… –¿—’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
	SET @SQL = '
        SELECT 
            DM.ID_DOCUMENT, 
            DOC_NAME = (SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
                        WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE), 
            DM.DATE_OP, 
            ALD.DOC_NUM,
            VAT_RATE = ''Õƒ— '' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + ''%'',
        
            SUM_SUP0 = SUM(DM.SUM_SUP - DM.SVAT_SUP),
            SVAT_SUP = SUM(DM.SVAT_SUP),
            SUM_SUP = SUM(DM.SUM_SUP),
        
            SUM_ACC0 = SUM(DM.SUM_ACC - DM.SVAT_ACC),
            SVAT_ACC = SUM(DM.SVAT_ACC),
            SUM_ACC = SUM(DM.SUM_ACC),

            DELTA = SUM(DM.SUM_ACC) - SUM(DM.SUM_SUP)
        FROM DOC_MOVEMENT DM
            INNER JOIN #STORE S ON S.ID_STORE = DM.ID_STORE
            LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
        WHERE DM.CODE_OP = ''SUB''
            AND DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
			AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_to not in (select id_store from #store where id_contractor = dm.id_contractor_from))
        GROUP BY DM.ID_DOCUMENT, DM.ID_STORE, DM.DATE_OP, ALD.DOC_NUM, DM.VAT_RATE
        ORDER BY #ORDER'

    SET @ORDER = 'DOC_NAME ASC, DOC_NUM ASC, DATE_OP ASC'
    IF(@SORT_DOC = 0) SET @ORDER = 'DATE_OP ASC, DOC_NAME ASC, DOC_NUM ASC'

    SET @SQL = REPLACE(@SQL, '#ORDER', @ORDER)

    -- print @SQL     -- ÓÚÎ‡‰Í‡

	EXEC SP_EXECUTESQL @SQL, N'@DATE_FR DATETIME, @DATE_TO DATETIME, @NOAU BIT',
        @DATE_FR = @DATE_FR, @DATE_TO = @DATE_TO, @NOAU = @NOAU
END

ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END

DECLARE @STORES VARCHAR(1024)
DECLARE @CONTRACTORS VARCHAR(1024)

EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT @CONTRACTORS, @STORES

-- Œ—“¿“Œ  Õ¿  ŒÕ≈÷
    SELECT
	    VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	    SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
	    SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),

	    SUM_ACC0 = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(SVAT_ACC * SIGN_OP), --SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
	    SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		DELTA = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
	GROUP BY DM.VAT_RATE
	
select
    VAT_RATE = NULL,
    SUM_ACC0 = NULL,
    SVAT_ACC = NULL,
    SUM_ACC = NULL

RETURN 0
GO

/*
exec REP_GOODS_REPORTS_NG_EX N'
<XML>
	<DATE_FR>2009-12-10T15:26:59.167</DATE_FR>
	<DATE_TO>2009-12-10T15:26:59.167</DATE_TO>
	<!--<NO_DETAIL>0</NO_DETAIL>-->
	<SHOW_ADD>1</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<SORT_DOC>1</SORT_DOC>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>	
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
	<NOAU>1</NOAU>
	<CO>0</CO>
</XML>'*/


SET NOCOUNT ON 
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.REP_GOODS_REPORTS_NG_EX_SERVICE') IS NULL ) EXEC ('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX_SERVICE AS SELECT NULL')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NG_EX_SERVICE
         @XMLPARAM NTEXT
AS

--DECLARE @NO_DETAIL BIT --, @ALL_STORE BIT
DECLARE @DATE_FR DATETIME, 
        @DATE_TO DATETIME
DECLARE @SORT_DOC BIT, 
        @SHOW_ADD BIT, 
        @SHOW_SUB BIT, 
        @REFRESH_DOC_MOV BIT
DECLARE @NOAU BIT, @CO BIT

DECLARE @HDOC INT, @SQL NVARCHAR(4000)
EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1 
        @DATE_FR = DATE_FR, 
        @DATE_TO = DATE_TO,
        --@NO_DETAIL = NO_DETAIL, 
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD, 
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV,
		@NOAU = NOAU,
		@CO = CO
    FROM OPENXML(@HDOC, '/XML') 
    WITH(
        DATE_FR DATETIME 'DATE_FR', 
        DATE_TO DATETIME 'DATE_TO', 
--        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC', 
        SHOW_ADD BIT 'SHOW_ADD', 
        SHOW_SUB BIT 'SHOW_SUB', 
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV',
		NOAU BIT 'NOAU',
		CO BIT 'CO')

    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬  ŒÕ“–¿√≈Õ“Œ¬ */
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM 
        (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
        WITH(ID_CONTRACTOR BIGINT '.')) TAB
    INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = TAB.ID_CONTRACTOR
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND C.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
    
    /* “¿¡À»÷¿ »ƒ≈Õ“»‘» ¿“Œ–Œ¬ — À¿ƒŒ¬ */
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM
    	(SELECT * FROM OPENXML(@HDOC, '//ID_STORE') 
        WITH(ID_STORE BIGINT '.')) TAB
    INNER JOIN STORE S ON S.ID_STORE = TAB.ID_STORE
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)
		
EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- ÔÂÂÒ˜ËÚ‡Ú¸ DOC_MOVEMENT ÔÓ ‚ÒÂÏ ‰ÓÍÛÏÂÌÚ‡Ï
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- ÓÚÌÓÏËÓ‚‡Ú¸ ‰‡Ú˚
EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

--select @date_fr, @date_to
--select * from #store

-- ≈—À» Õ≈ ” ¿«¿Õ — À¿ƒ, “Œ »“Œ√» ¬€¡»–¿ﬁ“—ﬂ œŒ ¬—≈Ã — À¿ƒ¿Ã
IF (SELECT COUNT(*) FROM #STORE) = 0 BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)

	SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
	FROM STORE S
	INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)

-- Œ—“¿“Œ  Õ¿ Õ¿◊¿ÀŒ
SELECT
    VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
    SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
    SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
    SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),

    SUM_ACC0 = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),--SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
    SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
    SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
	DELTA = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP)- SUM(DM.SUM_SUP * DM.SIGN_OP)
FROM DOC_MOVEMENT DM
WHERE DATE_OP < @DATE_FR
AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
GROUP BY DM.VAT_RATE

DECLARE @ORDER VARCHAR(128)

IF(@SHOW_ADD = 1) BEGIN
-- Œ¡Ÿ»… œ–»’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
SELECT
	ID_DOCUMENT = R1.ID_DOCUMENT,
	DOC_NAME = MAX(DOC_NAME), 
	DATE_OP = R1.DATE_OP,
	INCOMING_NUMBER = MAX(R1.INCOMING_NUMBER),
	DOC_NUM = R1.DOC_NUM,
	VAT_RATE = R1.VAT_RATE,
	SUM_SUP = SUM(R1.SUM_SUP),
	SUM_ACC = SUM(R1.SUM_ACC),
    SUM_SUP0 = SUM(R1.SUM_SUP0),
	SUM_ACC0 = SUM(R1.SUM_ACC0),
    SVAT_SUP = SUM(R1.SVAT_SUP),    
    SVAT_ACC = SUM(R1.SVAT_ACC),
    DELTA = SUM(R1.DELTA), EX into #add
FROM
(
SELECT 
	DM.ID_DOCUMENT, 
	DOC_NAME = ISNULL((SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
		WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE), ' ‡ÒÒÓ‚‡ˇ ÒÏÂÌ‡'), 
	DM.DATE_OP,
	INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('π Õœ:'+ I.INCOMING_NUMBER,'') ELSE '' END,
	ALD.DOC_NUM,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	SUM_SUP = DM.SUM_SUP,
	SUM_ACC = DM.SUM_ACC,
    SUM_SUP0 = DM.SUM_SUP - DM.SVAT_SUP,
	SUM_ACC0 = DM.SUM_ACC - DM.SVAT_ACC,
    SVAT_SUP = DM.SVAT_SUP,    
    SVAT_ACC = DM.SVAT_ACC,
    DELTA = DM.SUM_ACC - DM.SUM_SUP,
	EX = 0
FROM DOC_MOVEMENT DM
    LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
WHERE DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
    AND DM.CODE_OP = 'ADD' and DM.ID_STORE IS NOT NULL and DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
	AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_from not in (select id_store from #store where id_contractor = dm.id_contractor_to))

UNION ALL

SELECT
	ID_DOCUMENT = CS.ID_CASH_SESSION_GLOBAL,
	DOC_NAME = '”ÒÎÛ„‡',
	DATE_OP = CS.DATE_CLOSE,
	INCOMING_NUMBER = '',
	DOC_NUM = CS.MNEMOCODE,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, TT.TAX_RATE)) + '%',
	SUM_SUP = 0,
	SUM_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	SUM_SUP0 = 0,
	SUM_ACC0 = (S4S.PRICE_SAL - S4S.PRICE_SAL * TT.TAX_RATE / (100+ISNULL(TT.TAX_RATE,0)))* S4S.QUANTITY * CH_I.QUANTITY,
	SVAT_SUP = 0,
	SVAT_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY * TT.TAX_RATE / (100+ISNULL(TT.TAX_RATE,0)),
	DELTA = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	EX = 1
FROM CHEQUE_ITEM CH_I
	INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
	INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	INNER JOIN SERVICE_4_SALE_ITEM S4S ON S4S.ID_SERVICE_4_SALE = CH_I.ID_LOT_GLOBAL
	INNER JOIN SERVICE S ON S.ID_SERVICE = S4S.ID_SERVICE
	INNER JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = S.ID_TAX_TYPE
WHERE CH.CHEQUE_TYPE = 'RETURN' AND CS.DATE_CLOSE BETWEEN @DATE_FR AND @DATE_TO
) AS R1
GROUP BY R1.ID_DOCUMENT, R1.DATE_OP, R1.DOC_NUM, R1.VAT_RATE, R1.EX
ORDER BY CASE WHEN @SORT_DOC = 1 THEN MAX(R1.DOC_NAME) else CAST(R1.DATE_OP AS VARCHAR(20)) end,
		CASE WHEN @SORT_DOC = 1 then R1.DOC_NUM else MAX(R1.DOC_NAME) end,
		CASE WHEN @SORT_DOC = 1 then CAST(R1.DATE_OP AS VARCHAR(20)) else R1.DOC_NUM end,
		R1.VAT_RATE

select * from #add
END
ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END

-- Œ¡Ÿ»… –¿—’Œƒ œŒ ƒŒ ”Ã≈Õ“¿Ã
IF(@SHOW_SUB = 1) BEGIN
SELECT
	ID_DOCUMENT = R1.ID_DOCUMENT,
	DOC_NAME = MAX(DOC_NAME), 
	DATE_OP = R1.DATE_OP,
	DOC_NUM = R1.DOC_NUM,
	VAT_RATE = R1.VAT_RATE,
	SUM_SUP = SUM(R1.SUM_SUP),
	SUM_ACC = SUM(R1.SUM_ACC),
    SUM_SUP0 = SUM(R1.SUM_SUP0),
	SUM_ACC0 = SUM(R1.SUM_ACC0),
    SVAT_SUP = SUM(R1.SVAT_SUP),    
    SVAT_ACC = SUM(R1.SVAT_ACC),
    DELTA = SUM(R1.DELTA), EX into #sub
FROM
(
SELECT 
	DM.ID_DOCUMENT, 
	DOC_NAME = ISNULL((SELECT TOP 1 [DESCRIPTION_EXT] FROM FN_DOC_MOVEMENT_DESCRIPTION() DMD
		WHERE DM.ID_DOCUMENT = DMD.ID_DOCUMENT AND DM.ID_STORE = DMD.ID_STORE), ' ‡ÒÒÓ‚‡ˇ ÒÏÂÌ‡'), 
	DM.DATE_OP,
	ALD.DOC_NUM,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
	SUM_SUP = DM.SUM_SUP,
	SUM_ACC = DM.SUM_ACC,
    SUM_SUP0 = DM.SUM_SUP - DM.SVAT_SUP,
	SUM_ACC0 = DM.SUM_ACC - DM.SVAT_ACC,
    SVAT_SUP = DM.SVAT_SUP,    
    SVAT_ACC = DM.SVAT_ACC,
    DELTA = DM.SUM_ACC - DM.SUM_SUP,
	EX = 0
FROM DOC_MOVEMENT DM
    LEFT JOIN ALL_DOCUMENT ALD ON DM.ID_DOCUMENT = ALD.ID_DOCUMENT_GLOBAL
WHERE DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
    AND DM.CODE_OP = 'SUB' and DM.ID_STORE IS NOT NULL and DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
	AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_to not in (select id_store from #store where id_contractor = dm.id_contractor_from))

UNION ALL

SELECT
	ID_DOCUMENT = CS.ID_CASH_SESSION_GLOBAL,
	DOC_NAME = '”ÒÎÛ„‡',
	DATE_OP = CS.DATE_CLOSE,
	DOC_NUM = CS.MNEMOCODE,
	VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, TT.TAX_RATE)) + '%',
	SUM_SUP = 0,
	SUM_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	SUM_SUP0 = 0,
	SUM_ACC0 = (S4S.PRICE_SAL - S4S.PRICE_SAL * TT.TAX_RATE / (100+ISNULL(TT.TAX_RATE,0)))* S4S.QUANTITY * CH_I.QUANTITY,
	SVAT_SUP = 0,
	SVAT_ACC = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY * TT.TAX_RATE / (100+ISNULL(TT.TAX_RATE,0)),
	DELTA = S4S.PRICE_SAL * S4S.QUANTITY * CH_I.QUANTITY,
	EX = 1
FROM CHEQUE_ITEM CH_I
	INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CH_I.ID_CHEQUE_GLOBAL
	INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	INNER JOIN SERVICE_4_SALE_ITEM S4S ON S4S.ID_SERVICE_4_SALE = CH_I.ID_LOT_GLOBAL
	INNER JOIN SERVICE S ON S.ID_SERVICE = S4S.ID_SERVICE
	INNER JOIN TAX_TYPE TT ON TT.ID_TAX_TYPE = S.ID_TAX_TYPE
WHERE CH.CHEQUE_TYPE = 'SALE' AND CS.DATE_CLOSE BETWEEN @DATE_FR AND @DATE_TO
) AS R1
GROUP BY R1.ID_DOCUMENT, R1.DATE_OP, R1.DOC_NUM, R1.VAT_RATE, R1.EX
ORDER BY CASE WHEN @SORT_DOC = 1 THEN MAX(R1.DOC_NAME) else CAST(R1.DATE_OP AS VARCHAR(20)) end,
		CASE WHEN @SORT_DOC = 1 then R1.DOC_NUM else MAX(R1.DOC_NAME) end,
		CASE WHEN @SORT_DOC = 1 then CAST(R1.DATE_OP AS VARCHAR(20)) else R1.DOC_NUM end,
		R1.VAT_RATE
		
select * from #sub
END
ELSE BEGIN
    SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
END


DECLARE @STORES VARCHAR(1024)
DECLARE @CONTRACTORS VARCHAR(1024)

EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT @CONTRACTORS, @STORES

-- Œ—“¿“Œ  Õ¿  ŒÕ≈÷
SELECT
    VAT_RATE = 'Õƒ— ' + CONVERT(VARCHAR, CONVERT(INT, DM.VAT_RATE)) + '%',
    SUM_SUP0 = SUM(DM.SUM_SUP * SIGN_OP - DM.SVAT_SUP * SIGN_OP),
    SVAT_SUP = SUM(DM.SVAT_SUP * SIGN_OP),
    SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),

    SUM_ACC0 = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(SVAT_ACC * SIGN_OP), --SUM(SUM_ACC * SIGN_OP) - SUM(SVAT_ACC * SIGN_OP),
    SVAT_ACC = SUM(SVAT_ACC * SIGN_OP),
    SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
	DELTA = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - SUM(DM.SUM_SUP * DM.SIGN_OP)
FROM DOC_MOVEMENT DM
WHERE DATE_OP <= @DATE_TO
AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)
GROUP BY DM.VAT_RATE
ORDER BY DM.VAT_RATE

CREATE TABLE #TOTALS
(
	VAT_RATE VARCHAR(2000),
	SUM_ACC0 MONEY,
	SVAT_ACC MONEY,
	SUM_ACC MONEY,
	SN SMALLINT
)

IF @SHOW_ADD = 1
INSERT INTO #TOTALS (VAT_RATE, SUM_ACC0, SVAT_ACC, SUM_ACC, SN)
select 
    VAT_RATE = A.VAT_RATE,
    SUM_ACC0 = A.SUM_ACC0,
    SVAT_ACC = A.SVAT_ACC,
    SUM_ACC = A.SUM_ACC,
	SN = -1
from #add A where ex = 1

IF @SHOW_SUB = 1
INSERT INTO #TOTALS (VAT_RATE, SUM_ACC0, SVAT_ACC, SUM_ACC, SN)
select 
    VAT_RATE = S.VAT_RATE,
    SUM_ACC0 = S.SUM_ACC0,
    SVAT_ACC = S.SVAT_ACC,
    SUM_ACC = S.SUM_ACC,
	SN = 1
from #sub S where ex = 1


select
    VAT_RATE = R.VAT_RATE,
    SUM_ACC0 = SUM(R.SUM_ACC0 * R.SN),
    SVAT_ACC = SUM(R.SVAT_ACC * R.SN),
    SUM_ACC = SUM(R.SUM_ACC * R.SN)
from #TOTALS R
group by R.VAT_RATE
order by R.VAT_RATE

RETURN 0
GO

/*

exec DBO.REP_GOODS_REPORTS_NG_EX_SERVICE N'
<XML>
	<DATE_FR>2010-09-11T15:26:59.167</DATE_FR>
	<DATE_TO>2011-12-20T15:26:59.167</DATE_TO>
	<!--<NO_DETAIL>0</NO_DETAIL>-->
	<SHOW_ADD>0</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<SORT_DOC>0</SORT_DOC>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>	
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
	<NOAU>1</NOAU>
	<CO>0</CO>
</XML>'
*/



SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'Statement_11.StatementFromParams'