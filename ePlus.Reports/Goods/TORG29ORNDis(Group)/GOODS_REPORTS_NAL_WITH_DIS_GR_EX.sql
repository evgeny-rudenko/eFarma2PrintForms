SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX') IS NULL EXEC('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX AS RETURN')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX
    @XMLPARAM NTEXT
AS
DECLARE @STORE VARCHAR(256)
DECLARE @LEN INT
DECLARE @PRICE_BEGIN MONEY
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @NO_DETAIL BIT, @SORT_DOC BIT, @SHOW_ADD BIT, @SHOW_SUB BIT, @REFRESH_DOC_MOV BIT
DECLARE @SHOW_RETURN BIT
DECLARE @NOAU BIT, @CO BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FR = DATE_FR,
        @DATE_TO = DATE_TO,
        @NO_DETAIL = NO_DETAIL,
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD,
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV,
		@SHOW_RETURN = SHOW_RETURN,
		@NOAU = NOAU,
		@CO = CO
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO',
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC',
        SHOW_ADD BIT 'SHOW_ADD',
        SHOW_SUB BIT 'SHOW_SUB',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV',
		SHOW_RETURN BIT 'SHOW_RETURN',
		NOAU BIT 'NOAU',
		CO BIT 'CO'
    )
/*
    SELECT DISTINCT C.ID_CONTRACTOR, C.NAME INTO #CONTRACTOR
    FROM CONTRACTOR C(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')) TAB ON TAB.ID_CONTRACTOR = C.ID_CONTRACTOR
    -- СКЛАДЫ
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE

IF NOT EXISTS(SELECT TOP 1 1 FROM #STORE) BEGIN
    INSERT INTO #STORE (ID_STORE, ID_CONTRACTOR, NAME)
    SELECT S.ID_STORE, S.ID_CONTRACTOR, S.NAME
    FROM STORE S(NOLOCK) INNER JOIN #CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
END
DELETE FROM #STORE WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR)*/


	--СКЛАДЫ
    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)

EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    -- пересчитать DOC_MOVEMENT по всем документам
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

-- отнормировать даты
EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT


	SELECT 
		C.ID_CONTRACTOR, 
		C.NAME
	INTO #CONTRACTOR
	FROM CONTRACTOR C
	WHERE C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #STORE)

    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)

DECLARE @ORDER VARCHAR(256)

IF @SHOW_ADD = 1 BEGIN
    -- ОБЩИЙ ПРИХОД ПО ДОКУМЕНТАМ
    SELECT
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
		INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END,
        ID_CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
        CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
		SUM_DIS = SUM(CASE WHEN CODE_OP='DIS' THEN DM.SUM_ACC ELSE 0 END),
		SUM_SUP = SUM(DM.SUM_SUP),
		SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),--SUM(DM.SUM_ACC),
		DIFF = SUM(DM.SUM_ACC-DM.SUM_SUP) --SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_FROM
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_FROM
    WHERE (@SHOW_RETURN=1 AND (CODE_OP='ADD' OR (CODE_OP='DIS' AND DM.ID_TABLE=19 AND SIGN_OP=-1)) --отбражать возврат в приходе
		  OR (@SHOW_RETURN=0 AND DM.CODE_OP='ADD' AND DM.ID_TABLE<>19))  		--забить на возврат в приходе
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
	AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_from not in (select id_store from #store where id_contractor = dm.id_contractor_to))
    GROUP BY DM.ID_DOCUMENT, 
			 DM.ID_TABLE, 
			 TD.DESCRIPTION, 
			 DM.DATE_OP, 
			 AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
             CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
			 CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE NULL END, 
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TD.DESCRIPTION END,
		CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
		DM.DATE_OP

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
		INCOMING_NUMBER = CAST(NULL AS NVARCHAR(128)),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
		SUM_DIS = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
		DIFF = CAST(NULL AS MONEY)
END

IF @SHOW_SUB = 1 BEGIN
    -- ОБЩИЙ РАСХОД ПО ДОКУМЕНТАМ
	SELECT 
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = CASE WHEN DM.ID_TABLE = 26 THEN MAX(VC.DOC_NUM) ELSE AD.DOC_NUM END,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
        ID_CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
        CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE=19 THEN DM.SUM_ACC * DM.SIGN_OP
						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE<>19 THEN DM.SUM_ACC
						   ELSE 0 END),
-- SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE <> 19 THEN DM.SUM_ACC 
-- 						   WHEN	DM.CODE_OP='DIS' AND DM.ID_TABLE = 19 AND SIGN_OP=1 THEN DM.SUM_ACC 
-- 						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE = 19 AND SIGN_OP=-1 THEN DM.SUM_ACC * -1 ELSE 0 END),		--SUM(CASE WHEN CODE_OP='DIS' THEN SUM_ACC * SIGN_OP ELSE 0 END),
		SUM_SUP = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_SUP * DM.SIGN_OP * -1
						   END),--SUM(DM.SUM_SUP),													--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END),
        SUM_ACC = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_ACC * DM.SIGN_OP * -1
						   END),													--SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END), 
		DIFF = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_ACC * DM.SIGN_OP * -1 END - 
				   CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_SUP * DM.SIGN_OP * -1 END)											
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    LEFT JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_TO
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_TO
	LEFT JOIN VAT_CORRECT VC ON VC.ID_VAT_CORRECT_GLOBAL = DM.ID_DOCUMENT
    WHERE ((@SHOW_RETURN=0 AND (CODE_OP IN ('SUB', 'DIS') OR DM.ID_TABLE=19))	--с возвратом
			OR (@SHOW_RETURN=1 AND (CODE_OP IN ('SUB', 'DIS') OR (DM.ID_TABLE=19 AND CODE_OP<>'ADD'))))  --без отображения возврата
		AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
		AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
		AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_to not in (select id_store from #store where id_contractor = dm.id_contractor_from))
    GROUP BY DM.ID_DOCUMENT, 
		     DM.ID_TABLE, 
             TD.DESCRIPTION, 
             DM.DATE_OP, 
             AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END 
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE NULL END, 
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TD.DESCRIPTION END,
		CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
		DM.DATE_OP

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
		SUM_DIS = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
		DIFF = CAST(NULL AS MONEY)
END

    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)


DECLARE @STORES VARCHAR(1024), @CONTRACTORS VARCHAR(1024)
EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT CONTRACTORS = @CONTRACTORS, STORES = @STORES

SELECT
	DIR = DIRECTOR_FIO,
	BUH = BUH_FIO
FROM CONTRACTOR
WHERE ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)

SELECT S_SUM_ACC = NULL

RETURN 0
GO

/*
exec REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX N'
<XML>
	<DATE_FR>2009-12-01T00:00:00.000</DATE_FR>
	<DATE_TO>2009-12-07T00:00:00.000</DATE_TO>
	<NO_DETAIL>0</NO_DETAIL>
	<SHOW_ADD>1</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<SORT_DOC>1</SORT_DOC>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<ID_STORE>152</ID_STORE>
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
	<SHOW_RETURN>0</SHOW_RETURN>
	<NOAU>0</NOAU>
	<CO>1</CO>
</XML>'*/

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('DBO.REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX_SERVICE') IS NULL EXEC('CREATE PROCEDURE DBO.REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX_SERVICE AS RETURN')
GO
ALTER PROCEDURE DBO.REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX_SERVICE
    @XMLPARAM NTEXT AS

DECLARE @STORE VARCHAR(256)
DECLARE @LEN INT
DECLARE @PRICE_BEGIN MONEY
DECLARE @HDOC INT, @SQL NVARCHAR(4000)
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @NO_DETAIL BIT, @SORT_DOC BIT, @SHOW_ADD BIT, @SHOW_SUB BIT, @REFRESH_DOC_MOV BIT
DECLARE @SHOW_RETURN BIT
DECLARE @NOAU BIT, @CO BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FR = DATE_FR,
        @DATE_TO = DATE_TO,
        @NO_DETAIL = NO_DETAIL,
        @SORT_DOC = SORT_DOC,
        @SHOW_ADD = SHOW_ADD,
        @SHOW_SUB = SHOW_SUB,
        @REFRESH_DOC_MOV = REFRESH_DOC_MOV,
		@SHOW_RETURN = SHOW_RETURN,
		@NOAU = NOAU,
		@CO = CO
    FROM OPENXML(@HDOC, '/XML') WITH(
        DATE_FR DATETIME 'DATE_FR',
        DATE_TO DATETIME 'DATE_TO',
        NO_DETAIL BIT 'NO_DETAIL',
        SORT_DOC BIT 'SORT_DOC',
        SHOW_ADD BIT 'SHOW_ADD',
        SHOW_SUB BIT 'SHOW_SUB',
        REFRESH_DOC_MOV BIT 'REFRESH_DOC_MOV',
		SHOW_RETURN BIT 'SHOW_RETURN',
		NOAU BIT 'NOAU',
		CO BIT 'CO'
    )

    SELECT DISTINCT S.ID_STORE, S.ID_CONTRACTOR, S.NAME INTO #STORE
    FROM STORE S(NOLOCK)
    INNER JOIN (SELECT * FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')) TAB ON TAB.ID_STORE = S.ID_STORE
    WHERE ((@CO <> 1 OR @CO IS NULL) 
		AND S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1))
		OR (@CO = 1)

EXEC SP_XML_REMOVEDOCUMENT @HDOC

IF @REFRESH_DOC_MOV = 1 BEGIN
    EXEC UTL_REFRESH_DOC_MOVEMENT 'REPAIR', 0
END

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

	

	SELECT 
		C.ID_CONTRACTOR, 
		C.NAME
	INTO #CONTRACTOR
	FROM CONTRACTOR C
	WHERE C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #STORE)

    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP < @DATE_FR
    AND (DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))

DECLARE @ORDER VARCHAR(256)

IF @SHOW_ADD = 1 BEGIN
    -- ОБЩИЙ ПРИХОД ПО ДОКУМЕНТАМ
    SELECT
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = DM.ID_TABLE,
        TABLE_NAME = TD.DESCRIPTION,    
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = AD.DOC_NUM,
        DOC_NAME = ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
		DATE_OP = DM.DATE_OP,
		INCOMING_NUMBER = CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END,
        ID_CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
        CONTRACTOR_FROM = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
		SUM_DIS = SUM(CASE WHEN CODE_OP='DIS' THEN DM.SUM_ACC ELSE 0 END),
		SUM_SUP = SUM(DM.SUM_SUP),
		SUM_ACC = SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END),--SUM(DM.SUM_ACC),
		DIFF = SUM(DM.SUM_ACC-DM.SUM_SUP) --SUM(CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_ACC ELSE 0 END - CASE WHEN CODE_OP<>'DIS' THEN DM.SUM_SUP ELSE 0 END)
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
	LEFT JOIN INVOICE I ON DM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_FROM
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_FROM
    WHERE (@SHOW_RETURN=1 AND (CODE_OP='ADD' OR (CODE_OP='DIS' AND DM.ID_TABLE=19 AND SIGN_OP=-1)) --отбражать возврат в приходе
		  OR (@SHOW_RETURN=0 AND DM.CODE_OP='ADD' AND DM.ID_TABLE<>19))  		--забить на возврат в приходе
	AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	AND DM.ID_STORE IN (SELECT ID_STORE FROM #STORE)	 
	AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_from not in (select id_store from #store where id_contractor = dm.id_contractor_to))
    GROUP BY DM.ID_DOCUMENT, 
			 DM.ID_TABLE, 
			 TD.DESCRIPTION, 
			 DM.DATE_OP, 
			 AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_FROM, 0) END,
             CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END,
			 CASE WHEN DM.ID_TABLE = 2 THEN ISNULL('№ НП:'+ I.INCOMING_NUMBER,'') ELSE '' END
    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE NULL END, 
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TD.DESCRIPTION END,
		CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
		DM.DATE_OP

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
		INCOMING_NUMBER = CAST(NULL AS NVARCHAR(128)),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
		SUM_DIS = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
		DIFF = CAST(NULL AS MONEY)
END

IF @SHOW_SUB = 1 BEGIN
    -- ОБЩИЙ РАСХОД ПО ДОКУМЕНТАМ
	SELECT 
        ID_DOCUMENT = DM.ID_DOCUMENT,
        ID_TABLE = CASE WHEN DM.ID_STORE IS NULL THEN 99 ELSE DM.ID_TABLE END,
        TABLE_NAME = CASE WHEN DM.ID_STORE IS NULL THEN 'Услуга' ELSE TD.DESCRIPTION END,
        DOC_DATE = DM.DATE_OP,
        DOC_NUM = CASE WHEN DM.ID_TABLE = 26 THEN MAX(VC.DOC_NUM) ELSE AD.DOC_NUM END,
        DOC_NAME = CASE WHEN DM.ID_STORE IS NULL THEN 'Услуга' ELSE ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END END,
		DATE_OP = DM.DATE_OP,
        ID_CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
        CONTRACTOR_TO = CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
        AMOUNT_ADD = SUM(DM.QUANTITY),
        SUM_DIS = SUM(CASE WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE=19 THEN DM.SUM_ACC * DM.SIGN_OP
						   WHEN DM.CODE_OP='DIS' AND DM.ID_TABLE<>19 THEN DM.SUM_ACC
						   ELSE 0 END),
		SUM_SUP = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_SUP * DM.SIGN_OP * -1
						   END),
        SUM_ACC = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0
						   ELSE DM.SUM_ACC * DM.SIGN_OP * -1
						   END),
		DIFF = SUM(CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_ACC * DM.SIGN_OP * -1 END - 
				   CASE WHEN DM.CODE_OP='DIS' THEN 0 ELSE DM.SUM_SUP * DM.SIGN_OP * -1 END)
	INTO #T
    FROM DOC_MOVEMENT DM
    INNER JOIN TABLE_DATA TD ON TD.ID_TABLE_DATA = DM.ID_TABLE
    LEFT JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = DM.ID_DOCUMENT
    LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = DM.ID_CONTRACTOR_TO
    LEFT JOIN STORE S ON S.ID_STORE = DM.ID_STORE_TO
	LEFT JOIN VAT_CORRECT VC ON VC.ID_VAT_CORRECT_GLOBAL = DM.ID_DOCUMENT
    WHERE ((@SHOW_RETURN=0 AND (CODE_OP IN ('SUB', 'DIS') OR DM.ID_TABLE=19))
			OR (@SHOW_RETURN=1 AND (CODE_OP IN ('SUB', 'DIS') OR (DM.ID_TABLE=19 AND DM.ID_STORE IS NULL OR CODE_OP<>'ADD'))))
		AND DATE_OP BETWEEN @DATE_FR AND @DATE_TO
		AND (DM.ID_STORE IS NULL OR DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))
		AND (@NOAU = 1 OR (DM.ID_TABLE not in (8, 37, 39)) OR dm.id_store_to not in (select id_store from #store where id_contractor = dm.id_contractor_from))
    GROUP BY DM.ID_DOCUMENT, 
			DM.ID_TABLE,
			CASE WHEN DM.ID_STORE IS NULL THEN 99 ELSE DM.ID_TABLE END,
			CASE WHEN DM.ID_STORE IS NULL THEN 'Услуга' ELSE TD.DESCRIPTION END,
             DM.DATE_OP, 
             AD.DOC_NUM, 
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(DM.ID_CONTRACTOR_TO, 0) END,
			 CASE WHEN DM.ID_TABLE=19 THEN NULL ELSE ISNULL(C.NAME,'') END,
			 CASE WHEN DM.ID_STORE IS NULL THEN 'Услуга' ELSE ISNULL(TD.DESCRIPTION+': ','')+CASE WHEN DM.ID_TABLE=19 THEN '' ELSE ISNULL(C.NAME,'')+ISNULL('('+S.NAME+')','') END END
--    ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DM.DATE_OP ELSE DM.ID_TABLE END, DM.DATE_OP
	ORDER BY CASE WHEN DM.ID_STORE IS NULL THEN 99 ELSE DM.ID_TABLE END, DM.DATE_OP
	
	SELECT * FROM #T
	ORDER BY CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN DOC_DATE ELSE NULL END,
		CASE WHEN NULLIF(@SORT_DOC,0) IS NULL THEN NULL ELSE TABLE_NAME END,
		CONTRACTOR_TO, DOC_DATE

END ELSE BEGIN
    SELECT
        ID_DOCUMENT = CAST(NULL AS UNIQUEIDENTIFIER),
        ID_TABLE = CAST(NULL AS BIGINT),
        TABLE_NAME = CAST(NULL AS NVARCHAR(128)),   
        DOC_DATE = CAST(NULL AS DATETIME),
        DOC_NUM = CAST(NULL AS NVARCHAR(128)),
        DOC_NAME = CAST(NULL AS NVARCHAR(128)),
		DATE_OP = CAST(NULL AS DATETIME),
        ID_CONTRACTOR_TO = CAST(NULL AS BIGINT),
        CONTRACTOR_TO = CAST(NULL AS NVARCHAR(128)),
        AMOUNT_ADD = CAST(NULL AS MONEY),
		SUM_DIS = CAST(NULL AS MONEY),
        SUM_SUP = CAST(NULL AS MONEY),
        SUM_ACC = CAST(NULL AS MONEY),
		DIFF = CAST(NULL AS MONEY)
END


    SELECT
        SUM_SUP = SUM(DM.SUM_SUP * DM.SIGN_OP),
        SUM_ACC = SUM(CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP),
		NAL = SUM((CASE WHEN ID_TABLE=19 AND CODE_OP='DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP) - DM.SUM_SUP * DM.SIGN_OP)
    FROM DOC_MOVEMENT DM
    WHERE DATE_OP <= @DATE_TO
    AND (DM.ID_STORE IN (SELECT ID_STORE FROM #STORE))


DECLARE @STORES VARCHAR(1024), @CONTRACTORS VARCHAR(1024)
EXEC DBO.USP_TABLE_NAMES '#STORE', @STORES OUT
EXEC DBO.USP_TABLE_NAMES '#CONTRACTOR', @CONTRACTORS OUT
SELECT CONTRACTORS = @CONTRACTORS, STORES = @STORES

SELECT
	DIR = DIRECTOR_FIO,
	BUH = BUH_FIO
FROM CONTRACTOR
WHERE ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1)

IF @SHOW_SUB = 1 BEGIN
SELECT S_SUM_ACC = SUM(SUM_ACC) FROM #T WHERE ID_TABLE = 99
end else
begin
SELECT S_SUM_ACC = NULL
end


RETURN 0
GO

/*
exec DBO.REP_GOODS_REPORTS_NAL_WITH_DIS_GR_EX_SERVICE N'
<XML>
	<DATE_FR>2010-01-01T00:00:00.000</DATE_FR>
	<DATE_TO>2010-06-01T00:00:00.000</DATE_TO>
	<NO_DETAIL>0</NO_DETAIL>
	<SHOW_ADD>1</SHOW_ADD>
	<SHOW_SUB>1</SHOW_SUB>
	<SORT_DOC>1</SORT_DOC>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>	
	<ID_STORE>152</ID_STORE>
	<REFRESH_DOC_MOV>0</REFRESH_DOC_MOV>
	<SHOW_RETURN>0</SHOW_RETURN>
	<NOAU>0</NOAU>
	<CO>1</CO>
</XML>'*/


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'TORG29ORNDis_Group_.FormParams'


