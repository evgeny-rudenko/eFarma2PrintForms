SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('DBO.STATIST_SALE_ZNVLS') IS NULL EXEC('CREATE PROCEDURE DBO.STATIST_SALE_ZNVLS AS RETURN')
GO
ALTER PROCEDURE DBO.STATIST_SALE_ZNVLS
    @XMLPARAM NTEXT
AS

DECLARE	@ALL_CONTRACTOR BIT
DECLARE	@HDOC INT, @DATE_FROM DATETIME, @DATE_TO DATETIME


EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT , @XMLPARAM OUTPUT 
SELECT TOP 1
    @DATE_FROM = DATE_FROM,
    @DATE_TO = DATE_TO

FROM OPENXML(@HDOC , '/XML') WITH(
	DATE_FROM DATETIME 'DATE_FROM',
    DATE_TO DATETIME 'DATE_TO')


SELECT S.ID_STORE, S.ID_CONTRACTOR INTO #STORE
FROM STORE S WHERE  S.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM OPENXML(@HDOC, '//XML/ID_CONTRACTOR') 
    WITH(ID_CONTRACTOR BIGINT '.'))


IF @@ROWCOUNT = 0 
	SET @ALL_CONTRACTOR = 1 
	ELSE SET @ALL_CONTRACTOR = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC
EXEC USP_RANGE_DAYS @DATE_FROM OUTPUT , @DATE_TO OUTPUT

SELECT 
--G.ID_GOODS,
	MNN = ISNULL(S.NAME,''),
	GOODS_NAME = G.NAME,
	UNIT_NAME = U.NAME+ '(' + CAST(SR.NUMERATOR AS VARCHAR) + '/' + CAST(SR.DENOMINATOR AS VARCHAR) + ')',
	PRODUCER_NAME = PR.NAME,
	QUANTITY_SUB = SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB) ELSE 0 END) * (SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))),
    --AVG_PRICE_SUP1 =avg(L.PRICE_SUP-ISNULL(L.PVAT_SUP, 0)),
	AVG_PRICE_SUP =--SUM(L.PRICE_SUP-ISNULL(L.PVAT_SUP, 0))
					(SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * (L.PRICE_SUP-ISNULL(L.PVAT_SUP, 0)) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * (L.PRICE_SUP -ISNULL(L.PVAT_SUP, 0)) 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * (L.PRICE_SUP-ISNULL(L.PVAT_SUP, 0))) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))))
					/
/*QUANTITY_SUB */	(SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB) ELSE 0 END) * (SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)))),
     --   AVG_PRICE_SAL1= avg(L.PRICE_SAL-ISNULL(L.PVAT_SAL, 0)),
	AVG_PRICE_SAL =--SUM(L.PRICE_SAL-ISNULL(L.PVAT_SAL, 0))
/*SUM_SAL*/			(SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * (L.PRICE_SAL-ISNULL(L.PVAT_SAL, 0)) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * (L.PRICE_SAL-ISNULL(L.PVAT_SAL, 0)) 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * (L.PRICE_SAL-ISNULL(L.PVAT_SAL, 0))) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))))
                    / 
/*QUANTITY_SUB */	(SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB) ELSE 0 END) * (SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)))),

    SUM_SAL = SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * L.PRICE_SAL ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * L.PRICE_SAL 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * L.PRICE_SAL) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))),
	SUM_SUP = SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * L.PRICE_SUP ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * L.PRICE_SUP 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * L.PRICE_SUP) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))),  
                    
	SUM_SUP_WITHOUT_VAT = SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * (L.PRICE_PROD-L.PVAT_PROD) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * (L.PRICE_PROD-L.PVAT_PROD) 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * (L.PRICE_PROD-L.PVAT_PROD)) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))), 
    AVG_PRICE_PROD =(SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * (L.PRICE_PROD-L.PVAT_PROD) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * (L.PRICE_PROD-L.PVAT_PROD) 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * (L.PRICE_PROD-L.PVAT_PROD)) ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))))
                    /
/*QUANTITY_SUB */	(SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB) ELSE 0 END) * (SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)))),
	--G_SUMDISCOUNT = SUM(CASE WHEN LM.QUANTITY_SUB<0 THEN -1 ELSE 1 END * LM.DISCOUNT_ACC),	
    PROFIT = SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * L.PRICE_SAL ELSE 0 END)* (SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * L.PRICE_SAL 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * L.PRICE_SAL) ELSE 0 END) * (SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)))-
               (SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB * L.PRICE_SUP ELSE 0 END)*(SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))) - 
                    SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD * L.PRICE_SUP 
                    WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB * L.PRICE_SUP) ELSE 0 END) * (SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR))))-
               SUM(LM.DISCOUNT_ACC)
FROM LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = L.ID_SUPPLIER
	INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = L.ID_SCALING_RATIO
	INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
	INNER JOIN PRODUCER PR ON PR.ID_PRODUCER = G.ID_PRODUCER
	INNER JOIN ALL_DOCUMENT AD ON AD.ID_DOCUMENT_GLOBAL = LM.ID_DOCUMENT
    INNER JOIN UNIT U ON U.ID_UNIT = SR.ID_UNIT
    LEFT JOIN SUBSTANCE S ON G.ID_SUBSTANCE = S.ID_SUBSTANCE
WHERE (LM.DATE_OP BETWEEN @DATE_FROM AND @DATE_TO)
    AND (@ALL_CONTRACTOR=1 OR EXISTS (SELECT NULL FROM #STORE S WHERE S.ID_STORE = L.ID_STORE))
	AND ( G.IMPORTANT = 1)
	AND ( AD.ID_TABLE<>6)
	AND (LM.CODE_OP<>'ACT_R2C')
GROUP BY G.ID_GOODS, G.NAME, PR.NAME, U.NAME, SR.NUMERATOR, SR.DENOMINATOR, S.NAME
HAVING SUM((CASE WHEN LM.QUANTITY_SUB>0 THEN LM.QUANTITY_SUB ELSE 0 END)*SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)) - 
	SUM((CASE WHEN LM.CODE_OP='ACT_R2B' AND LM.QUANTITY_ADD>0 THEN LM.QUANTITY_ADD 
	WHEN LM.CODE_OP='CHEQUE' AND LM.QUANTITY_SUB<0 THEN (-1 * LM.QUANTITY_SUB) ELSE 0 END) * SR.NUMERATOR / CONVERT(MONEY, SR.DENOMINATOR)) > 0
	
ORDER BY G.NAME





RETURN 0
GO
/*

EXEC STATIST_SALE_ZNVLS @XMLPARAM = N'
<XML>
	<DATE_FROM>2009-01-16T00:00:00.000</DATE_FROM>
	<DATE_TO>2012-09-26T00:00:00.000</DATE_TO>
	<ID_CONTRACTOR>5276</ID_CONTRACTOR>
</XML>'
*/
--select * from LOT_MOVEMENT
--select * from DOC_MOVEMENT
--select * from ALL_DOCUMENT
--select * from  SUBSTANCE
