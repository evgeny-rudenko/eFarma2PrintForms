SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_CASH_REFUSALS') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_CASH_REFUSALS AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_CASH_REFUSALS
    @XMLPARAM NTEXT AS

--declare @XMLPARAM XML = '<XML><DATE_FR>2014-10-17T10:55:04.626</DATE_FR><DATE_TO>2014-10-30T10:55:04.626</DATE_TO><ID_STORE>168</ID_STORE><ID_GOODS>188865</ID_GOODS><USER_CODE>b841f27e-1510-4ac6-bac1-3b0bc79ddd66</USER_CODE><SORT>DOCUMENT_DATE</SORT><CO>0</CO></XML>'
--IF object_id('tempdb..#USER_CODES') is not null
--	drop table #USER_CODES
--IF object_id('tempdb..#ID_GOODS') is not null
--	drop table #ID_GOODS
--IF object_id('tempdb..#ID_STORES') is not null
--	drop table #ID_STORES
--IF object_id('tempdb..#RES') is not null
--	drop table #RES
--IF object_id('tempdb..#TEMP') is not null
--	drop table #TEMP

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @CO BIT
DECLARE @SORT VARCHAR(20)

DECLARE @ALL_USER_CODES BIT
DECLARE @ALL_STORES BIT
DECLARE @ALL_GOODSES BIT

DECLARE @CONTRACTORS VARCHAR(2048)

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,	
	@CO = CO, 
	@SORT = SORT
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO', 
	CO BIT 'CO', 
	SORT VARCHAR(20) 'SORT'
)

SELECT * INTO #USER_CODES FROM OPENXML(@HDOC, '/XML/USER_CODE') WITH(USER_CODE UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_USER_CODES = 1

SELECT * INTO #ID_GOODS FROM OPENXML(@HDOC, '/XML/ID_GOODS') WITH(ID_GOODS BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_GOODSES = 1

SELECT * INTO #ID_STORES FROM OPENXML(@HDOC, '/XML/ID_STORE') WITH(ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_STORES = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT A.*
INTO #TEMP
FROM
(
SELECT 
	DOCUMENT_DATE = CONVERT(DATETIME, LEFT(CONVERT(VARCHAR(20), C.DATE_CHEQUE, 121),10), 121),   
	G.ID_GOODS, 
	G.NAME AS GOODS_NAME, 
	REFUSES_COUNT = 1, 
	QUANTITY = ISNULL(CI.QUANTITY, 0), 
	[USER_NAME] = ISNULL(MU.FULL_NAME, MU.NAME), 
	S.ID_STORE, 
	STORE_NAME = S.NAME, 
	ID_CONTRACTOR = S.ID_CONTRACTOR, 
	ID_USER_DATA = C.ID_USER_DATA
FROM CHEQUE C
INNER JOIN META_USER MU ON MU.USER_NUM = C.ID_USER_DATA
INNER JOIN CHEQUE_ITEM CI ON C.ID_CHEQUE_GLOBAL = CI.ID_CHEQUE_GLOBAL
INNER JOIN GOODS G ON CI.ID_GOODS = G.ID_GOODS
INNER JOIN LOT L ON CI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
WHERE C.CHEQUE_TYPE = 'RETURN'
AND C.DOCUMENT_STATE = 'PROC'
AND (S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1) OR @CO = 1)
-- ”—ÀŒ¬»≈ WHERE »« ‘»À‹“Œ¬
AND C.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO 
AND (@ALL_GOODSES = 1 OR (G.ID_GOODS IN (SELECT ID_GOODS FROM #ID_GOODS)))
AND (@ALL_STORES = 1 OR (S.ID_STORE IN (SELECT ID_STORE FROM #ID_STORES)))
AND (@ALL_USER_CODES = 1 OR (MU.ID_USER IN (SELECT USER_CODE FROM #USER_CODES)))
UNION ALL
SELECT 
	DOCUMENT_DATE = CONVERT(DATETIME, LEFT(CONVERT(VARCHAR(20), AR.DATE, 121),10), 121),   
	G.ID_GOODS, 
	G.NAME AS GOODS_NAME, 
	REFUSES_COUNT = 1, 
	QUANTITY = ISNULL(ARI.QUANTITY, 0), 
	[USER_NAME] = ISNULL(MU.FULL_NAME, MU.NAME), 
	S.ID_STORE, 
	STORE_NAME = S.NAME, 
	ID_CONTRACTOR = S.ID_CONTRACTOR, 
	ID_USER_DATA = AR.ID_USER_DATA
FROM ACT_RETURN_TO_BUYER AR
INNER JOIN ACT_RETURN_TO_BUYER_ITEM ARI ON ARI.ID_ACT_RETURN_TO_BUYER = AR.ID_ACT_RETURN_TO_BUYER
INNER JOIN META_USER MU ON MU.USER_NUM = AR.ID_USER_DATA
INNER JOIN GOODS G ON ARI.ID_GOODS = G.ID_GOODS
INNER JOIN LOT L ON ARI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
INNER JOIN STORE S ON S.ID_STORE = L.ID_STORE
WHERE AR.DOCUMENT_STATE = 'PROC' AND AR.ID_TABLE_DATA_DOCUMENT_BASE = 7
AND (S.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1) OR @CO = 1)
-- ”—ÀŒ¬»≈ WHERE »« ‘»À‹“Œ¬
AND AR.DATE BETWEEN @DATE_FR AND @DATE_TO 
AND (@ALL_GOODSES = 1 OR (G.ID_GOODS IN (SELECT ID_GOODS FROM #ID_GOODS)))
AND (@ALL_STORES = 1 OR (S.ID_STORE IN (SELECT ID_STORE FROM #ID_STORES)))
AND (@ALL_USER_CODES = 1 OR (MU.ID_USER IN (SELECT USER_CODE FROM #USER_CODES)))
) A

CREATE TABLE #RES
(
	DOCUMENT_DATE DATETIME, 
	ID_GOODS BIGINT, 
	GOODS_NAME VARCHAR(255), 
	REFUSES_COUNT INT, 
	QUANTITY INT, 
	[USER_NAME] VARCHAR(100), 
	ID_STORE BIGINT, 
	STORE_NAME VARCHAR(100), 
	ID_CONTRACTOR BIGINT
)

IF @CO = 1
BEGIN
	INSERT INTO #RES
        ( DOCUMENT_DATE ,
          ID_GOODS ,
		  GOODS_NAME ,
          REFUSES_COUNT ,
          QUANTITY ,
          [USER_NAME] ,
          ID_STORE ,
          STORE_NAME ,
          ID_CONTRACTOR
        )
	SELECT
		T.DOCUMENT_DATE,
		T.ID_GOODS, 
		T.GOODS_NAME, 
		REFUSES_COUNT = SUM(T.REFUSES_COUNT), 
		QUANTITY = SUM(T.QUANTITY), 
		[USER_NAME] = CNT.[USER_NAME], 
		ID_STORE = T.ID_STORE, 
		STORE_NAME = T.STORE_NAME, 
		T.ID_CONTRACTOR
	FROM #TEMP T
	LEFT JOIN 
	(SELECT DISTINCT
		TT.ID_GOODS, 
		TT.[USER_NAME], 
		TT.DOCUMENT_DATE
	FROM #TEMP TT
	WHERE TT.ID_GOODS IN
		(SELECT T1.ID_GOODS FROM #TEMP T1
		WHERE T1.DOCUMENT_DATE = TT.DOCUMENT_DATE
		GROUP BY T1.ID_GOODS, T1.DOCUMENT_DATE
		HAVING COUNT(DISTINCT T1.ID_USER_DATA) = 1)) CNT 
			ON T.ID_GOODS = CNT.ID_GOODS AND T.DOCUMENT_DATE = CNT.DOCUMENT_DATE
	GROUP BY T.ID_GOODS, T.DOCUMENT_DATE, T.GOODS_NAME, CNT.[USER_NAME], T.ID_STORE, 
		T.STORE_NAME, T.ID_CONTRACTOR
END
ELSE
BEGIN
	INSERT INTO #RES
        ( DOCUMENT_DATE ,
          ID_GOODS ,
		  GOODS_NAME ,
          REFUSES_COUNT ,
          QUANTITY ,
          [USER_NAME] ,
          ID_STORE ,
          STORE_NAME ,
          ID_CONTRACTOR
        )
	SELECT
		T.DOCUMENT_DATE, 
		T.ID_GOODS, 
		T.GOODS_NAME, 
		REFUSES_COUNT = SUM(T.REFUSES_COUNT), 
		QUANTITY = SUM(T.QUANTITY), 
		[USER_NAME] = CNT.[USER_NAME], 
		ID_STORE = NULL, 
		STORE_NAME = NULL, 
		T.ID_CONTRACTOR
	FROM #TEMP T
	LEFT JOIN 
	(SELECT DISTINCT
		TT.ID_GOODS, 
		TT.[USER_NAME], 
		TT.DOCUMENT_DATE
	FROM #TEMP TT
	WHERE TT.ID_GOODS IN
		(SELECT T1.ID_GOODS FROM #TEMP T1
		WHERE T1.DOCUMENT_DATE = TT.DOCUMENT_DATE
		GROUP BY T1.ID_GOODS, T1.DOCUMENT_DATE
	HAVING COUNT(DISTINCT T1.ID_USER_DATA) = 1)) CNT 
		ON T.ID_GOODS = CNT.ID_GOODS AND T.DOCUMENT_DATE = CNT.DOCUMENT_DATE
	GROUP BY T.ID_GOODS, T.DOCUMENT_DATE, T.GOODS_NAME, CNT.[USER_NAME], T.ID_CONTRACTOR
END

DROP TABLE #TEMP

DECLARE @SQL NVARCHAR(1000)
SET @SQL = '
SELECT 
	R.DOCUMENT_DATE, 
	R.ID_GOODS, 
	R.GOODS_NAME, 
	R.REFUSES_COUNT, 
	R.QUANTITY, 
	R.[USER_NAME], 
	R.ID_STORE, 
	R.STORE_NAME
FROM #RES R
ORDER BY R.'+@SORT+', R.STORE_NAME'

EXEC SP_EXECUTESQL @SQL

DECLARE @ID_CONTRACTOR BIGINT
DECLARE [GS$CURSOR] CURSOR LOCAL FAST_FORWARD
		FOR SELECT DISTINCT
			[GS].ID_CONTRACTOR 
		FROM #RES GS
		ORDER BY GS.ID_CONTRACTOR
OPEN [GS$CURSOR]
WHILE (1=1)
BEGIN
	FETCH NEXT FROM [GS$CURSOR] INTO @ID_CONTRACTOR
	IF @@fetch_status=-1 
      BREAK
	IF @@fetch_status=-2
      CONTINUE
    SET @CONTRACTORS = ''
    SELECT 
		@CONTRACTORS = 
			CASE WHEN (@CONTRACTORS IS NULL OR @CONTRACTORS = '') THEN  
				C.NAME
			ELSE 
				@CONTRACTORS + ', ' + C.NAME
			END
	FROM (SELECT DISTINCT ID_CONTRACTOR FROM #RES) T
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR
	ORDER BY T.ID_CONTRACTOR
END
	CLOSE [GS$CURSOR]
	DEALLOCATE [GS$CURSOR]
	
SELECT CONTRACTORS = @CONTRACTORS

RETURN
GO