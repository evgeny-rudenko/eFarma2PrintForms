SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_ACCOMPANIMENT_GOODS') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_ACCOMPANIMENT_GOODS AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_ACCOMPANIMENT_GOODS
    @XMLPARAM NTEXT AS

DECLARE @ALL_CONTRACTORS BIT
DECLARE @ALL_STORES BIT

DECLARE @HDOC INT

DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ID_GOODS BIGINT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@ID_GOODS = ID_GOODS
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	ID_GOODS BIGINT 'ID_GOODS'
)

SELECT * INTO #CONTRACTORS FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_CONTRACTORS = 1

SELECT * INTO #STORES FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')
IF @@ROWCOUNT = 0 SET @ALL_STORES = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT
EXEC DBO.REP_RANGEDAY @DATE_FR OUT, @DATE_TO OUT

--select @date_fr, @date_to, @id_goods
--select * from #contractors
--select * from #stores
/*
select chi.*
from cheque ch
	inner join cheque_item chi on chi.id_cheque_global = ch.id_cheque_global
where ch.date_cheque BETWEEN @DATE_FR AND @DATE_TO and chi.id_goods = 188884
*/
SELECT
	CH.ID_CHEQUE_GLOBAL,
	CH.CHEQUE_TYPE
INTO #temp_t
FROM CHEQUE CH
WHERE CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO 
	AND CH.CHEQUE_TYPE IN ('SALE', 'RETURN')
	AND EXISTS (SELECT * FROM CHEQUE_ITEM WHERE ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL AND ID_GOODS = @ID_GOODS)

--select * from #temp_t

SELECT
	GOODS_NAME = G.NAME,
	COUNT_CHEQUE = SUM(CASE WHEN T.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END),
	QUANTITY = SUM(CASE WHEN T.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * CHI.QUANTITY),
	PRICE = SUM(CASE WHEN T.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * CHI.SUMM)
INTO #temp_t2
FROM #temp_t T
	INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_CHEQUE_GLOBAL = T.ID_CHEQUE_GLOBAL
	INNER JOIN GOODS G ON G.ID_GOODS = CHI.ID_GOODS
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
WHERE CHI.ID_GOODS = @ID_GOODS
	AND (@ALL_STORES = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND (@ALL_CONTRACTORS = 1 OR ST.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS))
GROUP BY CHI.ID_GOODS, G.NAME

select
	GOODS_NAME,
	COUNT_CHEQUE,
	QUANTITY,
	AV = PRICE / QUANTITY
from #temp_t2

SELECT
	SUMM = SUM(CASE WHEN T.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * CHI.SUMM)
FROM #temp_t T
	INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_CHEQUE_GLOBAL = T.ID_CHEQUE_GLOBAL
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
WHERE (@ALL_STORES = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND (@ALL_CONTRACTORS = 1 OR ST.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS))	

select distinct chi.id_goods into #temp_t3 
from #temp_t T
	INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_CHEQUE_GLOBAL = T.ID_CHEQUE_GLOBAL
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
WHERE (@ALL_STORES = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND (@ALL_CONTRACTORS = 1 OR ST.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS))	
	and chi.id_goods <> @id_goods
	
--select * from #temp_t3
 
SELECT
	GOODS_NAME = T1.GOODS_NAME,
	COUNT_CHEQUE = T1.COUNT_CHEQUE - ISNULL(T2.COUNT_CHEQUE, 0),
	QUANTITY = T1.QUANTITY - ISNULL(T2.QUANTITY, 0),
	AV = case when (T1.QUANTITY - ISNULL(T2.QUANTITY, 0) = 0) then 0 else (T1.SUMM - ISNULL(T2.SUMM, 0)) / (T1.QUANTITY - ISNULL(T2.QUANTITY, 0)) end
FROM (
SELECT
	ID_GOODS = T.ID_GOODS,
	GOODS_NAME = G.NAME,
	COUNT_CHEQUE = COUNT(DISTINCT(CONVERT(CHAR(36), CHI.ID_CHEQUE_GLOBAL))),
	QUANTITY = SUM(CHI.QUANTITY),
	SUMM = SUM(CHI.SUMM)
FROM #temp_t3 T
	INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_GOODS = T.ID_GOODS
	--INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	INNER JOIN #temp_t CH ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	INNER JOIN GOODS G ON G.ID_GOODS = CHI.ID_GOODS
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
WHERE /*CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND */CH.CHEQUE_TYPE IN ('SALE')
	AND (@ALL_STORES = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND (@ALL_CONTRACTORS = 1 OR ST.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS))	
GROUP BY T.ID_GOODS, G.NAME) T1 LEFT JOIN 
(
SELECT
	ID_GOODS = T.ID_GOODS,
	GOODS_NAME = G.NAME,
	COUNT_CHEQUE = COUNT(DISTINCT(CONVERT(CHAR(36), CHI.ID_CHEQUE_GLOBAL))),
	QUANTITY = SUM(CHI.QUANTITY),
	SUMM = SUM(CHI.SUMM)
FROM #temp_t3 T
	INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_GOODS = T.ID_GOODS
	--INNER JOIN CHEQUE CH ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	INNER JOIN #temp_t CH ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
	INNER JOIN GOODS G ON G.ID_GOODS = CHI.ID_GOODS
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
WHERE /*CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND */CH.CHEQUE_TYPE IN ('RETURN')
	AND (@ALL_STORES = 1 OR ST.ID_STORE IN (SELECT ID_STORE FROM #STORES))
	AND (@ALL_CONTRACTORS = 1 OR ST.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTORS))	
GROUP BY T.ID_GOODS, G.NAME) T2 ON T1.ID_GOODS = T2.ID_GOODS
where T1.COUNT_CHEQUE - ISNULL(T2.COUNT_CHEQUE, 0) > 0
ORDER BY T1.GOODS_NAME

RETURN 0
GO

/*
EXEC REPEX_ACCOMPANIMENT_GOODS N'
<XML>
	<DATE_FR>2010-06-01T00:00:00.000</DATE_FR>
	<DATE_TO>2010-06-30T00:00:00.000</DATE_TO>
	<ID_GOODS>188784</ID_GOODS>
</XML>'*/