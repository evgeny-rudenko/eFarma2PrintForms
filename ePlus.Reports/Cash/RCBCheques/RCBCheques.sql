SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_CHEQUES') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_CHEQUES AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_CHEQUES
	(@XMLPARAM NTEXT) AS

DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME, @DATE_TO DATETIME
DECLARE @TIME_FR DATETIME, @TIME_TO DATETIME
DECLARE @TIME_FR2 INT, @TIME_TO2 INT
DECLARE @CO BIT

DECLARE @ALL_USERS BIT
DECLARE @ALL_STORES BIT
DECLARE @ALL_CONTRACTORS BIT
DECLARE @ALL_KKMS BIT
DECLARE @ALL_CHEQUES BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
	SELECT TOP 1 @DATE_FR = DATE_FR, @DATE_TO = DATE_TO,
        @TIME_FR = TIME_FR, @TIME_TO = TIME_TO,	@CO = CO
	FROM OPENXML(@HDOC, '/XML')
	WITH(DATE_FR DATETIME 'DATE_FR', DATE_TO DATETIME 'DATE_TO',
	TIME_FR DATETIME 'TIME_FR', TIME_TO DATETIME 'TIME_TO', CO BIT 'CO')

	-- ÒÀÁËÈÖÀ ÈÄÅÍÒÈÔÈÊÀÒÎÐÎÂ ×ÅÊÎÂ
	SELECT * INTO #CHEQUE
	FROM OPENXML(@HDOC, '//ID_CHEQUE') 
	WITH(ID_CHEQUE BIGINT '.')
	IF (@@ROWCOUNT = 0)	SET @ALL_CHEQUES = 1
	ELSE SET @ALL_CHEQUES = 0

	-- ÒÀÁËÈÖÀ ÈÄÅÍÒÈÔÈÊÀÒÎÐÎÂ ÊÀÑÑÈÐÎÂ
	SELECT * INTO #USER
	FROM OPENXML(@HDOC, '//ID_USER') 
	WITH(ID_USER BIGINT '.')
	IF (@@ROWCOUNT = 0)	SET @ALL_USERS = 1
	ELSE SET @ALL_USERS = 0

    -- ÒÀÁËÈÖÀ ÈÄÅÍÒÈÔÈÊÀÒÎÐÎÂ ÊÊÌ
	SELECT * INTO #CASH_REGISTER
	FROM OPENXML(@HDOC, '//ID_CASH_REGISTER') 
	WITH(ID_CASH_REGISTER BIGINT '.')
	IF (@@ROWCOUNT = 0)	SET @ALL_KKMS = 1
	ELSE SET @ALL_KKMS = 0

	-- ÒÀÁËÈÖÀ ÈÄÅÍÒÈÔÈÊÀÒÎÐÎÂ ÑÊËÀÄÎÂ
	SELECT * INTO #STORE
	FROM OPENXML(@HDOC, '//ID_STORE') 
	WITH(ID_STORE BIGINT '.')
	IF (@@ROWCOUNT = 0)	SET @ALL_STORES = 1
	ELSE SET @ALL_STORES = 0

    -- ÒÀÁËÈÖÀ ÈÄÅÍÒÈÔÈÊÀÒÎÐÎÂ ÊÎÍÒÐÀÃÅÍÒÎÂ
	SELECT ID_CONTRACTOR INTO #CONTRACTOR
	FROM OPENXML(@HDOC, '//ID_CONTRACTOR') 
	WITH(ID_CONTRACTOR BIGINT '.')
	IF (@@ROWCOUNT = 0)	SET @ALL_CONTRACTORS = 1
	ELSE SET @ALL_CONTRACTORS = 0

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

IF(@TIME_FR IS NOT NULL)
BEGIN
	SELECT @TIME_FR2 = DATEPART(HOUR, @TIME_FR)*60+DATEPART(MINUTE, @TIME_FR)
	SELECT @TIME_TO2 = DATEPART(HOUR, @TIME_TO)*60+DATEPART(MINUTE, @TIME_TO)
END

SELECT
	GROUP_NAME = A.GROUP_NAME,
	A.ID_CHEQUE,
	A.GOODS_NAME,
	A.PRODUCER_NAME,
	A.SUPPLIER_NAME,
	A.UNIT_NAME,
	QUANTITY = SUM(A.QUANTITY * A.[SIGN]),
	A.PRICE_SUP,
	SUMM_SUP = A.PRICE_SUP * SUM(A.QUANTITY * A.[SIGN]),
	A.PRICE_SAL,
	A.PRICE_SAL_ND,
	A.DISCOUNT_PERCENT,
	SUMM_DISCOUNT = ISNULL(SUM(A.SUMM_DISCOUNT * A.[SIGN]), 0),
	SUMM_ND = ISNULL(SUM(A.SUMM_ND * A.[SIGN]), 0),
	SUMM = ISNULL(SUM(SUMM * A.[SIGN]), 0)
FROM
(
SELECT 
-- ÀÉÄÈØÍÈÊÈ
	CH.ID_CHEQUE,
	G.ID_GOODS,
	CP.ID_PRODUCER AS ID_PRODUCER,
	C.ID_CONTRACTOR AS ID_DRUGSTORE,
	S.ID_STORE,
	CR.ID_CASH_REGISTER,
	MU.ID_USER,
	ID_SCALING_RATIO = CASE WHEN ISNULL(CHI.ID_SCALING_RATIO, 0) = 0 THEN L.ID_SCALING_RATIO ELSE CHI.ID_SCALING_RATIO END,
	U.ID_UNIT,
	L.ID_SUPPLIER,
-- ÂÑÏÎÌÎÃÀÒ
	[SIGN] = CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END,
-- ÄÀÍÍÛÅ
	GROUP_NAME = 'Àïòåêà ' + CASE WHEN ISNULL(C.FULL_NAME, '') = '' THEN ISNULL(C.[NAME], '-') ELSE C.FULL_NAME END + 
		': Ñêëàä ' + CASE WHEN ISNULL(S.[NAME], '') = '' THEN '-' ELSE S.[NAME] END + 
		': Êàññà ' + CASE WHEN ISNULL(CR.NAME_CASH_REGISTER, '') = '' THEN '-' ELSE CR.NAME_CASH_REGISTER END + 
		': Êàññèð ' + CASE WHEN ISNULL(MU.FULL_NAME, '') = '' THEN ISNULL(MU.[NAME], '-') ELSE MU.FULL_NAME END,
	GOODS_NAME = G.[NAME],
	PRODUCER_NAME = ISNULL(CP.[NAME], ''),
	UNIT_NAME = CAST(SR.NUMERATOR AS VARCHAR) + '/' + CAST(SR.DENOMINATOR AS VARCHAR) + ' ' + U.NAME,
	QUANTITY = ISNULL(CHI.QUANTITY, 0),
	L.PRICE_SUP,
	CHI.PRICE AS PRICE_SAL,
	PRICE_SAL_ND = (CHI.PRICE*CHI.QUANTITY - CHI.SUMM_DISCOUNT)/CHI.QUANTITY,
	DISCOUNT_PERCENT = ISNULL(CHI.SUMM_DISCOUNT, 0)*100/(CHI.PRICE*CHI.QUANTITY),
	SUMM_DISCOUNT = ISNULL(CHI.SUMM_DISCOUNT, 0),
	SUMM_ND = ISNULL(CHI.SUMM, 0) + ISNULL(CHI.SUMM_DISCOUNT, 0),
	SUMM = ISNULL(CHI.SUMM, 0), 

	SUPPLIER_NAME = CASE WHEN ISNULL(SUP.FULL_NAME, '') = '' THEN ISNULL(SUP.NAME, '') ELSE SUP.FULL_NAME END
FROM CHEQUE CH
INNER JOIN CHEQUE_ITEM CHI ON CH.ID_CHEQUE_GLOBAL = CHI.ID_CHEQUE_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = CHI.ID_GOODS
INNER JOIN PRODUCER CP ON CP.ID_PRODUCER = G.ID_PRODUCER
INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
INNER JOIN SCALING_RATIO SR ON SR.ID_SCALING_RATIO = 
	CASE WHEN ISNULL(CHI.ID_SCALING_RATIO, 0) = 0 THEN L.ID_SCALING_RATIO ELSE CHI.ID_SCALING_RATIO END
INNER JOIN UNIT U WITH(NOLOCK) ON SR.ID_UNIT = U.ID_UNIT
INNER JOIN STORE S ON L.ID_STORE = S.ID_STORE
INNER JOIN CONTRACTOR C ON S.ID_CONTRACTOR = C.ID_CONTRACTOR
INNER JOIN CASH_SESSION CS ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
	AND CS.DATE_CLOSE IS NOT NULL
INNER JOIN CASH_REGISTER CR ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
INNER JOIN META_USER MU ON CH.ID_USER_DATA = MU.USER_NUM
INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = L.ID_SUPPLIER
WHERE CH.CHEQUE_TYPE IN ('SALE', 'RETURN')
	AND CH.DOCUMENT_STATE = 'PROC'
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	AND (@TIME_FR IS NULL OR (DATEPART(HOUR, CH.DATE_CHEQUE)*60+DATEPART(MINUTE, CH.DATE_CHEQUE)) BETWEEN @TIME_FR2 AND @TIME_TO2)
	AND (C.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1 AND (@CO = 0 OR @CO IS NULL)) 
		OR (@CO = 1 AND (@ALL_CONTRACTORS = 1 OR C.ID_CONTRACTOR IN (SELECT ID_CONTRACTOR FROM #CONTRACTOR))))
	AND (@ALL_STORES = 1 OR S.ID_STORE IN (SELECT ID_STORE FROM #STORE))
	AND (@ALL_KKMS = 1 OR CR.ID_CASH_REGISTER IN (SELECT ID_CASH_REGISTER FROM #CASH_REGISTER))
	AND (@ALL_USERS = 1 OR MU.USER_NUM IN (SELECT ID_USER FROM #USER))
	AND (@ALL_CHEQUES = 1 OR CH.ID_CHEQUE IN (SELECT ID_CHEQUE FROM #CHEQUE))
) A
GROUP BY A.ID_CHEQUE, A.ID_GOODS, A.ID_PRODUCER, A.ID_DRUGSTORE, A.ID_STORE, A.ID_CASH_REGISTER, 
	A.ID_USER, A.ID_SCALING_RATIO, A.ID_UNIT, A.ID_SUPPLIER, A.GOODS_NAME, A.PRODUCER_NAME, 
	A.GROUP_NAME, A.UNIT_NAME, A.PRICE_SUP,
	A.PRICE_SAL, A.PRICE_SAL_ND, A.DISCOUNT_PERCENT, A.SUPPLIER_NAME
HAVING SUM(A.QUANTITY * A.[SIGN]) > 0
ORDER BY A.ID_CHEQUE, A.GROUP_NAME, A.GOODS_NAME, A.PRODUCER_NAME, A.SUPPLIER_NAME

RETURN 0
GO

/*
exec REPEX_CHEQUES 
@xmlParam=N'
<XML>
	<DATE_FR>2010-11-10T18:07:04.140</DATE_FR>
	<DATE_TO>2010-11-10T18:07:04.140</DATE_TO>
	<TIME_FR>11:23</TIME_FR>
	<TIME_TO>12:23</TIME_TO>
	<ID_CASH_REGISTER>47</ID_CASH_REGISTER>
	<ID_USER>2</ID_USER>
	<CO>1</CO>
</XML>'
*/