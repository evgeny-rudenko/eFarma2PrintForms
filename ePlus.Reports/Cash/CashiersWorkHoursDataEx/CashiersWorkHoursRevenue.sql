SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
SET DATEFORMAT DMY 
GO

IF OBJECT_ID('DBO.REPEX_CASHIERS_WORK_HOURS_REVENUE') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_CASHIERS_WORK_HOURS_REVENUE AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_CASHIERS_WORK_HOURS_REVENUE
    @XMLPARAM NTEXT AS
    
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @CO BIT
DECLARE @TYPE_CALC INT--chsa

DECLARE @ALL_USER_CODES BIT
DECLARE @ALL_DRUGSTORES BIT

DECLARE @CONTRACTORS VARCHAR(2048)

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,	
	@CO = CO
	,@TYPE_CALC = TYPE_CALC--chsa
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO', 
	CO BIT 'CO'
	,TYPE_CALC INT 'TYPE_CALC'--chsa
)
--chsa
SELECT DISTINCT  TYPE_PAYMENT INTO #TYPES_CALC FROM CHEQUE_PAYMENT
	where (CHEQUE_PAYMENT.TYPE_PAYMENT like (  CASE WHEN @TYPE_CALC = 0 THEN '%TYPE%' ELSE '%'+convert(varchar(5),@TYPE_CALC) END))
--chsa
SELECT * INTO #USER_CODES FROM OPENXML(@HDOC, '/XML/USER_CODE') WITH(USER_CODE UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_USER_CODES = 1

SELECT * INTO #GUID_CONTRACTORS FROM OPENXML(@HDOC, '/XML/GUID_CONTRACTOR') WITH(GUID_CONTRACTOR UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_DRUGSTORES = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT DISTINCT
	U.ID_USER, 
    US_NAME = ISNULL(U.FULL_NAME, NAME),
	CS = CASE 
			 WHEN CH.CHEQUE_TYPE='SALE' THEN 1 
			 WHEN CH.CHEQUE_TYPE='RETURN' THEN -1 
	       	 ELSE 0
         END, 
    DATE_CHEQUE = dateadd(dd,0,datediff(dd,0,CH.DATE_CHEQUE)),
	CHEQUE_TIME = CH.DATE_CHEQUE,
    SUMM = CH.SUMM, 
    CR.ID_CONTRACTOR, 
    CH.ID_USER_DATA
INTO #CHEQUE_INFO    
FROM CHEQUE CH
INNER JOIN CASH_SESSION CS ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL
INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
LEFT JOIN CHEQUE_PAYMENT CP ON CH.ID_CHEQUE_GLOBAL = CP.ID_CHEQUE_GLOBAL--chsa
WHERE 
	(
	(CR.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1) AND (@CO IS NULL OR @CO = 0))
		OR 
	(@CO = 1 AND 
		(CR.ID_CONTRACTOR IN (SELECT C.ID_CONTRACTOR FROM CONTRACTOR C 
			WHERE C.ID_CONTRACTOR_GLOBAL IN (SELECT GC.GUID_CONTRACTOR FROM #GUID_CONTRACTORS GC)) 
			OR @ALL_DRUGSTORES = 1))
	)
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO 
	AND (@ALL_USER_CODES = 1 OR (U.ID_USER IN (SELECT USER_CODE FROM #USER_CODES)))
	AND (CP.TYPE_PAYMENT IN (SELECT TYPE_PAYMENT FROM #TYPES_CALC))--chsa
   
SELECT  
	CI.ID_CONTRACTOR, 
	CNAME = C.NAME, 
	DATE_CHEQUE = CI.DATE_CHEQUE, 
	CI.ID_USER,
	CI.US_NAME,  
	QUANTITY = ISNULL(SUM(CI.CS), 0), 
	DAY_SUMM = ISNULL(SUM(CI.SUMM * CI.CS), 0), 
	SUM_CH_1 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=1 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_2 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=2 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_3 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=3 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_4 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=4 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_5 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=5 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_6 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=6 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_7 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=7 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_8 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=8 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_9 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=9 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_10 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=10 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_11 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=11 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_12 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=12 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_13 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=13 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_14 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=14 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_15 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=15 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_16 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=16 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_17 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=17 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_18 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=18 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_19 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=19 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_20 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=20 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_21 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=21 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_22 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=22 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_23 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=23 THEN CI.CS ELSE NULL END * CI.SUMM),0),
    SUM_CH_24 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=0 THEN CI.CS ELSE NULL END * CI.SUMM),0)
FROM #CHEQUE_INFO CI
INNER JOIN CONTRACTOR C ON CI.ID_CONTRACTOR = C.ID_CONTRACTOR
GROUP BY CI.DATE_CHEQUE, CI.ID_USER, CI.US_NAME, 
	CI.ID_USER_DATA, CI.ID_CONTRACTOR, C.NAME
ORDER BY C.NAME, CI.DATE_CHEQUE, CI.US_NAME

DECLARE @ID_CONTRACTOR BIGINT
DECLARE [CI$CURSOR] CURSOR LOCAL FAST_FORWARD
		FOR SELECT DISTINCT
			[CI].ID_CONTRACTOR 
		FROM #CHEQUE_INFO CI
		ORDER BY CI.ID_CONTRACTOR
OPEN [CI$CURSOR]
WHILE (1=1)
BEGIN
	FETCH NEXT FROM [CI$CURSOR] INTO @ID_CONTRACTOR
	IF @@fetch_status=-1 
      BREAK
	IF @@fetch_status=-2
      CONTINUE
    SET @CONTRACTORS = ''
    SELECT 
		@CONTRACTORS = 
			CASE WHEN (@CONTRACTORS IS NULL OR @CONTRACTORS = '') THEN  
				C.NAME
			ELSE 
				@CONTRACTORS + ', ' + C.NAME
			END
	FROM (SELECT DISTINCT ID_CONTRACTOR FROM #CHEQUE_INFO) T
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR
	ORDER BY T.ID_CONTRACTOR
END
	CLOSE [CI$CURSOR]
	DEALLOCATE [CI$CURSOR]
	
SELECT CONTRACTORS = @CONTRACTORS

RETURN
GO

/*
EXEC REPEX_CASHIERS_WORK_HOURS_REVENUE N'
<XML>
	<DATE_FR>2009-06-26T00:00:00.000</DATE_FR>
	<DATE_TO>2009-06-29T00:00:00.000</DATE_TO>
	<CO>1</CO>
</XML>'
*/
/*
EXEC REPEX_CASHIERS_WORK_HOURS_REVENUE N'
<XML>
	<DATE_FR>2010-01-01T18:46:55.593</DATE_FR>
	<DATE_TO>2010-10-29T18:46:55.593</DATE_TO>
	<GUID_CONTRACTOR>c2125625-cfa9-4b00-90e3-d0813f10d1b7</GUID_CONTRACTOR>
	<USER_CODE>0e04c478-7c2a-4005-bae5-66f6ab03afd6</USER_CODE>
	<CO>1</CO>
</XML>'*/


IF OBJECT_ID('DBO.REPEX_CASHIERS_WORK_HOURS_GOODS_COUNT') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_CASHIERS_WORK_HOURS_GOODS_COUNT AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_CASHIERS_WORK_HOURS_GOODS_COUNT
    @XMLPARAM NTEXT AS
    
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @CO BIT
DECLARE @TYPE_CALC INT--chsa

DECLARE @ALL_USER_CODES BIT
DECLARE @ALL_DRUGSTORES BIT

DECLARE @CONTRACTORS VARCHAR(2048)

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,	
	@CO = CO,
	@TYPE_CALC = TYPE_CALC
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO', 
	CO BIT 'CO',
	TYPE_CALC INT 'TYPE_CALC'
)

--chsa
SELECT DISTINCT  TYPE_PAYMENT INTO #TYPES_CALC FROM CHEQUE_PAYMENT
	where (CHEQUE_PAYMENT.TYPE_PAYMENT like (  CASE WHEN @TYPE_CALC = 0 THEN '%TYPE%' ELSE '%'+convert(varchar(5),@TYPE_CALC) END))
--chsa

SELECT * INTO #USER_CODES FROM OPENXML(@HDOC, '/XML/USER_CODE') WITH(USER_CODE UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_USER_CODES = 1

SELECT * INTO #GUID_CONTRACTORS FROM OPENXML(@HDOC, '/XML/GUID_CONTRACTOR') WITH(GUID_CONTRACTOR UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_DRUGSTORES = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT DISTINCT
	C.ID_USER, 
	C.US_NAME, 
	C.CS, 
	DATE_CHEQUE = dateadd(dd,0,datediff(dd,0,C.DATE_CHEQUE)),
	CHEQUE_TIME = C.DATE_CHEQUE,
	C.SUMM, 
	C.ID_CONTRACTOR, 
	C.ID_USER_DATA,
	GOODS_QUANTITY = SUM(CI.QUANTITY * C.CS * 
		(CASE WHEN ISNULL(SR.NUMERATOR, 0) = 0 THEN CONVERT(MONEY, SRL.NUMERATOR) / SRL.DENOMINATOR 
		ELSE CONVERT(MONEY, SR.NUMERATOR) / SR.DENOMINATOR END))
INTO #CHEQUE_INFO 
FROM CHEQUE_ITEM CI
LEFT JOIN SCALING_RATIO SR ON CI.ID_SCALING_RATIO = SR.ID_SCALING_RATIO
INNER JOIN LOT L on CI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
INNER JOIN SCALING_RATIO SRL ON L.ID_SCALING_RATIO = SRL.ID_SCALING_RATIO
LEFT JOIN CHEQUE_PAYMENT CP ON CI.ID_CHEQUE_GLOBAL = CP.ID_CHEQUE_GLOBAL--chsa
INNER JOIN 
	(SELECT 
		CH.ID_CHEQUE_GLOBAL, 
		U.ID_USER, 
		US_NAME = ISNULL(U.FULL_NAME, NAME),
		CS = CASE 
				 WHEN CH.CHEQUE_TYPE='SALE' THEN 1 
				 WHEN CH.CHEQUE_TYPE='RETURN' THEN -1 
				 ELSE 0
			 END, 
		DATE_CHEQUE = CH.DATE_CHEQUE,
		SUMM = CH.SUMM, 
		CR.ID_CONTRACTOR, 
		CH.ID_USER_DATA 
	FROM CHEQUE CH
	INNER JOIN CASH_SESSION CS ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL
	INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
	WHERE 
		(
		(CR.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1) AND (@CO IS NULL OR @CO = 0))
			OR 
		(@CO = 1 AND 
			(CR.ID_CONTRACTOR IN (SELECT C.ID_CONTRACTOR FROM CONTRACTOR C 
				WHERE C.ID_CONTRACTOR_GLOBAL IN (SELECT GC.GUID_CONTRACTOR FROM #GUID_CONTRACTORS GC)) 
				OR @ALL_DRUGSTORES = 1))
		)
		AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO 
		AND (@ALL_USER_CODES = 1 OR (U.ID_USER IN (SELECT USER_CODE FROM #USER_CODES)))
	) C ON C.ID_CHEQUE_GLOBAL = CI.ID_CHEQUE_GLOBAL
WHERE (CP.TYPE_PAYMENT IN (SELECT TYPE_PAYMENT FROM #TYPES_CALC))--chsa
	GROUP BY /*CI.ID_CHEQUE_GLOBAL, */C.ID_USER, 
	C.US_NAME, 
	C.CS, 
	C.DATE_CHEQUE, 
	C.SUMM, 
	C.ID_CONTRACTOR, 
	C.ID_USER_DATA 
ORDER BY C.ID_CONTRACTOR, C.DATE_CHEQUE, C.US_NAME
   
SELECT  
	CI.ID_CONTRACTOR, 
	CNAME = C.NAME, 
	DATE_CHEQUE = CI.DATE_CHEQUE, 
	CI.ID_USER,
	CI.US_NAME,  
	QUANTITY = ISNULL(SUM(CI.CS), 0), 
	DAY_SUMM = ISNULL(SUM(CI.SUMM * CI.CS), 0), 
	SUM_CH_1 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=1 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_2 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=2 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_3 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=3 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_4 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=4 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_5 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=5 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_6 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=6 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_7 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=7 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_8 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=8 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_9 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=9 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_10 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=10 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_11 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=11 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_12 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=12 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_13 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=13 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_14 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=14 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_15 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=15 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_16 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=16 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_17 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=17 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_18 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=18 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_19 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=19 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_20 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=20 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_21 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=21 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_22 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=22 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_23 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=23 THEN CI.GOODS_QUANTITY ELSE NULL END),0),
    SUM_CH_24 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=0 THEN CI.GOODS_QUANTITY ELSE NULL END),0)
FROM #CHEQUE_INFO CI
INNER JOIN CONTRACTOR C ON CI.ID_CONTRACTOR = C.ID_CONTRACTOR
GROUP BY CI.date_cheque, CI.ID_USER, CI.US_NAME, 
	CI.ID_USER_DATA, CI.ID_CONTRACTOR, C.NAME
ORDER BY C.NAME, CI.DATE_CHEQUE, CI.US_NAME

DECLARE @ID_CONTRACTOR BIGINT
DECLARE [CI$CURSOR] CURSOR LOCAL FAST_FORWARD
		FOR SELECT DISTINCT
			[CI].ID_CONTRACTOR 
		FROM #CHEQUE_INFO CI
		ORDER BY CI.ID_CONTRACTOR
OPEN [CI$CURSOR]
WHILE (1=1)
BEGIN
	FETCH NEXT FROM [CI$CURSOR] INTO @ID_CONTRACTOR
	IF @@fetch_status=-1 
      BREAK
	IF @@fetch_status=-2
      CONTINUE
    SET @CONTRACTORS = ''
    SELECT 
		@CONTRACTORS = 
			CASE WHEN (@CONTRACTORS IS NULL OR @CONTRACTORS = '') THEN  
				C.NAME
			ELSE 
				@CONTRACTORS + ', ' + C.NAME
			END
	FROM (SELECT DISTINCT ID_CONTRACTOR FROM #CHEQUE_INFO) T
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR
	ORDER BY T.ID_CONTRACTOR
END
	CLOSE [CI$CURSOR]
	DEALLOCATE [CI$CURSOR]
	
SELECT CONTRACTORS = @CONTRACTORS

RETURN
GO

/*
EXEC REPEX_CASHIERS_WORK_HOURS_GOODS_COUNT N'
<XML>
	<DATE_FR>2009-06-26T00:00:00.000</DATE_FR>
	<DATE_TO>2009-06-29T00:00:00.000</DATE_TO>
	<CO>1</CO>
</XML>'
*/
/*
EXEC REPEX_CASHIERS_WORK_HOURS_GOODS_COUNT N'
<XML>
	<DATE_FR>2010-01-01T18:46:55.593</DATE_FR>
	<DATE_TO>2010-10-29T18:46:55.593</DATE_TO>
	<GUID_CONTRACTOR>c2125625-cfa9-4b00-90e3-d0813f10d1b7</GUID_CONTRACTOR>
	<USER_CODE>0e04c478-7c2a-4005-bae5-66f6ab03afd6</USER_CODE>
	<CO>1</CO>
</XML>'*/


IF OBJECT_ID('DBO.REPEX_CASHIERS_WORK_HOURS_CHEQUES') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_CASHIERS_WORK_HOURS_CHEQUES AS RETURN')
GO
ALTER  PROCEDURE DBO.REPEX_CASHIERS_WORK_HOURS_CHEQUES
    @XMLPARAM NTEXT AS
    
DECLARE @HDOC INT
DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @CO BIT
DECLARE @TYPE_CALC INT--chsa

DECLARE @ALL_USER_CODES BIT
DECLARE @ALL_DRUGSTORES BIT

DECLARE @CONTRACTORS VARCHAR(2048)

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,	
	@CO = CO,
	@TYPE_CALC = TYPE_CALC
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO', 
	CO BIT 'CO',
	TYPE_CALC INT 'TYPE_CALC'
)
--chsa
SELECT DISTINCT  TYPE_PAYMENT INTO #TYPES_CALC FROM CHEQUE_PAYMENT
	where (CHEQUE_PAYMENT.TYPE_PAYMENT like (  CASE WHEN @TYPE_CALC = 0 THEN '%TYPE%' ELSE '%'+convert(varchar(5),@TYPE_CALC) END))
--chsa
SELECT * INTO #USER_CODES FROM OPENXML(@HDOC, '/XML/USER_CODE') WITH(USER_CODE UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_USER_CODES = 1

SELECT * INTO #GUID_CONTRACTORS FROM OPENXML(@HDOC, '/XML/GUID_CONTRACTOR') WITH(GUID_CONTRACTOR UNIQUEIDENTIFIER '.')
IF (@@ROWCOUNT = 0)	SET @ALL_DRUGSTORES = 1

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_DAYS @DATE_FR OUT, @DATE_TO OUT
EXEC USP_RANGE_NORM @DATE_FR OUT, @DATE_TO OUT

SELECT DISTINCT
	U.ID_USER, 
    US_NAME = ISNULL(U.FULL_NAME, NAME),
	CS = CASE 
			 WHEN CH.CHEQUE_TYPE='SALE' THEN 1 
			 WHEN CH.CHEQUE_TYPE='RETURN' THEN -1 
		     ELSE 0
	     END, 
    DATE_CHEQUE = dateadd(dd,0,datediff(dd,0,CH.DATE_CHEQUE)),
	CHEQUE_TIME = CH.DATE_CHEQUE,
    SUMM = CH.SUMM, 
    CR.ID_CONTRACTOR, 
    CH.ID_USER_DATA
INTO #CHEQUE_INFO    
FROM CHEQUE CH
INNER JOIN CASH_SESSION CS ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL
INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
LEFT JOIN [META_USER] U ON CH.ID_USER_DATA = U.USER_NUM
LEFT JOIN CHEQUE_PAYMENT CP ON CH.ID_CHEQUE_GLOBAL = CP.ID_CHEQUE_GLOBAL--chsa
WHERE 
	(
	(CR.ID_CONTRACTOR = (SELECT TOP 1 ID_CONTRACTOR FROM ENTERPRISE_BRANCH WHERE IS_SELF = 1) AND (@CO IS NULL OR @CO = 0))
		OR 
	(@CO = 1 AND 
		(CR.ID_CONTRACTOR IN (SELECT C.ID_CONTRACTOR FROM CONTRACTOR C 
			WHERE C.ID_CONTRACTOR_GLOBAL IN (SELECT GC.GUID_CONTRACTOR FROM #GUID_CONTRACTORS GC)) 
			OR @ALL_DRUGSTORES = 1))
	)
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO 
	AND (@ALL_USER_CODES = 1 OR (U.ID_USER IN (SELECT USER_CODE FROM #USER_CODES)))
	AND (CP.TYPE_PAYMENT IN (SELECT TYPE_PAYMENT FROM #TYPES_CALC))--chsa
   
SELECT  
	CI.ID_CONTRACTOR, 
	CNAME = C.NAME, 
	DATE_CHEQUE = CI.DATE_CHEQUE, 
	CI.ID_USER,
	CI.US_NAME,  
	QUANTITY = ISNULL(SUM(CI.CS), 0), 
	DAY_SUMM = ISNULL(SUM(CI.SUMM * CI.CS), 0), 
	SUM_CH_1 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=1 THEN CI.CS ELSE NULL END),0),
    SUM_CH_2 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=2 THEN CI.CS ELSE NULL END),0),
    SUM_CH_3 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=3 THEN CI.CS ELSE NULL END),0),
    SUM_CH_4 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=4 THEN CI.CS ELSE NULL END),0),
    SUM_CH_5 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=5 THEN CI.CS ELSE NULL END),0),
    SUM_CH_6 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=6 THEN CI.CS ELSE NULL END),0),
    SUM_CH_7 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=7 THEN CI.CS ELSE NULL END),0),
    SUM_CH_8 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=8 THEN CI.CS ELSE NULL END),0),
    SUM_CH_9 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=9 THEN CI.CS ELSE NULL END),0),
    SUM_CH_10 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=10 THEN CI.CS ELSE NULL END),0),
    SUM_CH_11 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=11 THEN CI.CS ELSE NULL END),0),
    SUM_CH_12 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=12 THEN CI.CS ELSE NULL END),0),
    SUM_CH_13 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=13 THEN CI.CS ELSE NULL END),0),
    SUM_CH_14 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=14 THEN CI.CS ELSE NULL END),0),
    SUM_CH_15 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=15 THEN CI.CS ELSE NULL END),0),
    SUM_CH_16 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=16 THEN CI.CS ELSE NULL END),0),
    SUM_CH_17 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=17 THEN CI.CS ELSE NULL END),0),
    SUM_CH_18 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=18 THEN CI.CS ELSE NULL END),0),
    SUM_CH_19 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=19 THEN CI.CS ELSE NULL END),0),
    SUM_CH_20 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=20 THEN CI.CS ELSE NULL END),0),
    SUM_CH_21 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=21 THEN CI.CS ELSE NULL END),0),
    SUM_CH_22 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=22 THEN CI.CS ELSE NULL END),0),
    SUM_CH_23 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=23 THEN CI.CS ELSE NULL END),0),
    SUM_CH_24 = ISNULL(SUM(CASE WHEN DATEPART(hh,CI.CHEQUE_TIME)=0 THEN CI.CS ELSE NULL END),0)
FROM #CHEQUE_INFO CI
INNER JOIN CONTRACTOR C ON CI.ID_CONTRACTOR = C.ID_CONTRACTOR
GROUP BY CI.date_cheque, CI.ID_USER, CI.US_NAME, 
	CI.ID_USER_DATA, CI.ID_CONTRACTOR, C.NAME
ORDER BY C.NAME, CI.DATE_CHEQUE, CI.US_NAME

DECLARE @ID_CONTRACTOR BIGINT
DECLARE [CI$CURSOR] CURSOR LOCAL FAST_FORWARD
		FOR SELECT DISTINCT
			[CI].ID_CONTRACTOR 
		FROM #CHEQUE_INFO CI
		ORDER BY CI.ID_CONTRACTOR
OPEN [CI$CURSOR]
WHILE (1=1)
BEGIN
	FETCH NEXT FROM [CI$CURSOR] INTO @ID_CONTRACTOR
	IF @@fetch_status=-1 
      BREAK
	IF @@fetch_status=-2
      CONTINUE
    SET @CONTRACTORS = ''
    SELECT 
		@CONTRACTORS = 
			CASE WHEN (@CONTRACTORS IS NULL OR @CONTRACTORS = '') THEN  
				C.NAME
			ELSE 
				@CONTRACTORS + ', ' + C.NAME
			END
	FROM (SELECT DISTINCT ID_CONTRACTOR FROM #CHEQUE_INFO) T
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CONTRACTOR
	ORDER BY T.ID_CONTRACTOR
END
	CLOSE [CI$CURSOR]
	DEALLOCATE [CI$CURSOR]
	
SELECT CONTRACTORS = @CONTRACTORS

RETURN
GO

/*
EXEC REPEX_CASHIERS_WORK_HOURS_CHEQUES N'
<XML>
	<DATE_FR>2009-06-26T00:00:00.000</DATE_FR>
	<DATE_TO>2009-06-29T00:00:00.000</DATE_TO>
	<CO>1</CO>
</XML>'*/

/*
EXEC REPEX_CASHIERS_WORK_HOURS_CHEQUES N'
<XML>
	<DATE_FR>2010-01-01T18:46:55.593</DATE_FR>
	<DATE_TO>2010-10-29T18:46:55.593</DATE_TO>
	<GUID_CONTRACTOR>c2125625-cfa9-4b00-90e3-d0813f10d1b7</GUID_CONTRACTOR>
	<USER_CODE>0e04c478-7c2a-4005-bae5-66f6ab03afd6</USER_CODE>
	<CO>1</CO>
</XML>'*/
