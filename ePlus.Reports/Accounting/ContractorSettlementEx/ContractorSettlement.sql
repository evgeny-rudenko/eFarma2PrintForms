SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.REPEX_CONTRACTOR_SETTLEMENT') IS NULL) EXEC ('CREATE PROCEDURE DBO.REPEX_CONTRACTOR_SETTLEMENT AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_CONTRACTOR_SETTLEMENT]
    @XMLPARAM NTEXT AS

DECLARE @HDOC INT

DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ID_CONTRACTOR BIGINT
DECLARE @SHOW_ON_THE_WAY BIT
DECLARE @ID_SECTION INT
DECLARE @NOAU BIT

DECLARE @SUPPLIER_SECTION_TEXT VARCHAR(20)
SET @SUPPLIER_SECTION_TEXT = 'Поставщики'

DECLARE @CLIENT_SECTION_TEXT VARCHAR(20)
SET @CLIENT_SECTION_TEXT = 'Аптеки'

DECLARE @BUYER_SECTION_TEXT VARCHAR(20)
SET @BUYER_SECTION_TEXT = 'Покупатели'

DECLARE @ALL_SUPPLIER BIT, @ALL_CLIENT BIT, @ALL_BUYER BIT
DECLARE @ALL BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
SELECT 
    @DATE_FROM = DATE_FROM,
    @DATE_TO = DATE_TO,
    @ID_CONTRACTOR = ID_CONTRACTOR,
    @SHOW_ON_THE_WAY = SHOW_ON_THE_WAY,
	@ALL = [ALL],
	@ID_SECTION = ID_SECTION,
	@NOAU = NOAU
FROM OPENXML(@HDOC, '/XML') WITH(
	[ALL] BIT 'ALL', 
    DATE_FROM DATETIME 'DATE_FROM',
    DATE_TO DATETIME 'DATE_TO',
    ID_CONTRACTOR BIGINT 'ID_CONTRACTOR',
    SHOW_ON_THE_WAY BIT 'SHOW_ON_THE_WAY',
	ID_SECTION INT 'ID_SECTION',
	NOAU BIT 'NOAU'
)

select id_store into #stores_ex from store where id_contractor <> @id_contractor
--select * from #stores_ex

SELECT * into #sups
FROM OPENXML(@HDOC, '/XML/SUP') WITH(SUP BIGINT '.')

SELECT 
    T.ID_SUPPLIER,
    C.NAME
INTO #SUPPLIER
FROM OPENXML(@HDOC, '/XML/SUPPLIER') WITH(
    ID_SUPPLIER BIGINT '.'
) T
LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_SUPPLIER
IF (@@ROWCOUNT=0)
    SET @ALL_SUPPLIER = 1    

SELECT 
    T.ID_CLIENT,
    C.NAME  
INTO #CLIENT
FROM OPENXML(@HDOC, '/XML/CLIENT') WITH(
    ID_CLIENT BIGINT '.'
) T
LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_CLIENT

IF (@@ROWCOUNT=0)
    SET @ALL_CLIENT = 1    

SELECT 
    T.ID_BUYER,
    C.NAME
INTO #BUYER
FROM OPENXML(@HDOC, '/XML/BUYER') WITH(
    ID_BUYER BIGINT '.'
) T
LEFT JOIN CONTRACTOR C ON C.ID_CONTRACTOR = T.ID_BUYER

IF (@@ROWCOUNT=0)
    SET @ALL_BUYER = 1    
    
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC dbo.USP_RANGE_DAYS @DATE_FROM OUTPUT,	@DATE_TO OUTPUT
EXEC dbo.USP_RANGE_NORM @DATE_FROM OUTPUT,	@DATE_TO OUTPUT
    
    
    DECLARE @ALL_FILTER BIT    

    IF (@ALL_SUPPLIER=1 AND @ALL_CLIENT=1 AND @ALL_BUYER=1) BEGIN
        SET @ALL_FILTER = 1 
    END
--select * from #sups
    SELECT *
    INTO #TEMP
    FROM (

SELECT
	ID_SECTION = 3,
	SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
	ID_SUPPLIER = I.ID_CONTRACTOR_FROM,
	SUPPLIER_NAME = SUP.NAME,
	BEGIN_SUM = CONVERT(MONEY, NULL),
	ID_CONTRACTOR = C.ID_CONTRACTOR,
	CONTRACTOR_NAME = C.NAME, 
	DOC_NUM = I.MNEMOCODE,
	DOC_DATE = I.[DATE],
	INVOICE_SUM = CONVERT(MONEY, NULL),
	EXPENCE_SUM = I.TOTAL_WITH_VAT, 
	DATE_PAYMENT = NULL
FROM ACT_RETURN_TO_BUYER I
	INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = I.ID_CONTRACTOR_FROM
	INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE_TO
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
	--INNER JOIN INVOICE_OUT II ON II.ID_INVOICE_OUT = I.ID_DOCUMENT_BASE
WHERE I.DOCUMENT_STATE = 'PROC'
	AND (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_SUPPLIER FROM #SUPPLIER)))
	AND C.ID_CONTRACTOR = @ID_CONTRACTOR
UNION ALL		
	     SELECT 
              ID_SECTION = 1,
              SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
              ID_SUPPLIER = I.ID_CONTRACTOR_SUPPLIER,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = I.MNEMOCODE + ISNULL(CHAR(10)+CHAR(13)+'№ пост.: '+I.INCOMING_NUMBER, '')+ISNULL(CHAR(10)+CHAR(13)+'Сч/Ф.: '+I.INCOMING_BILL_NUMBER,''),
    	      DOC_DATE = I.DOCUMENT_DATE,
    	      INVOICE_SUM = I.SUM_SUPPLIER,
    	      EXPENCE_SUM = CONVERT(MONEY, NULL), 
			  I.DATE_PAYMENT
          FROM INVOICE I
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
          INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
          WHERE (I.DOCUMENT_STATE = 'PROC' OR (I.DOCUMENT_STATE='SAVE' AND I.ON_THE_WAY=1 AND @SHOW_ON_THE_WAY=1))
          AND (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_SUPPLIER FROM #SUPPLIER)))
          AND C.ID_CONTRACTOR = @ID_CONTRACTOR
          UNION ALL

          SELECT 
              ID_SECTION = 1,
              SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
              ID_SUPPLIER = AR.ID_CONTRACTOR_TO,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = AR.MNEMOCODE,
    	      DOC_DATE = AR.DATE,
    	      INVOICE_SUM = CONVERT(MONEY, NULL),
    	      EXPENCE_SUM = TOTAL, 
			  NULL
          FROM dbo.ACT_RETURN_TO_CONTRACTOR AR
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = AR.ID_CONTRACTOR_TO
          INNER JOIN STORE S ON S.ID_STORE = AR.ID_STORE
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
          WHERE AR.DOCUMENT_STATE = 'PROC'
          AND (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_SUPPLIER FROM #SUPPLIER)))
          AND C.ID_CONTRACTOR = @ID_CONTRACTOR
          UNION ALL
          SELECT 
              ID_SECTION = 1,
              SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
              ID_SUPPLIER = CO.ID_CONTRACTOR,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = CO.MNEMOCODE,
    	      DOC_DATE = CO.DATE,
    	      INVOICE_SUM = CASE DOC_TYPE                
                              WHEN 'INVOICE_CASH_ORDER' THEN [SUM]
                              ELSE 0
                            END,    	      
    	      EXPENCE_SUM = CASE DOC_TYPE                
                              WHEN 'EXPENSE_CASH_ORDER' THEN [SUM]
                              ELSE 0
                            END, 
			  NULL
          FROM dbo.CASH_ORDER CO
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = CO.ID_CONTRACTOR
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = CO.ID_CONTRACTOR_OWNER
          WHERE (DOC_TYPE = 'EXPENSE_CASH_ORDER' or DOC_TYPE = 'INVOICE_CASH_ORDER')
          AND (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_SUPPLIER FROM #SUPPLIER)))
          AND C.ID_CONTRACTOR = @ID_CONTRACTOR
          AND SUP.ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM STORE)
			AND CO.DOCUMENT_STATE <> 'DEL'

          UNION ALL
          SELECT
              ID_SECTION = 1,
              SECTION_NAME = @SUPPLIER_SECTION_TEXT,
              ID_SUPPLIER = PO.ID_RECIPIENT,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME,
              DOC_NUM = PO.MNEMOCODE,
              DOC_DATE = PO.DATE,
              INVOICE_SUM = CONVERT(MONEY, NULL),
              EXPENCE_SUM = SUM_VAT, 
			  NULL
          FROM PAYMENT_ORDER PO
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = PO.ID_RECIPIENT
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = PO.ID_PAYER
          WHERE (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_SUPPLIER FROM #SUPPLIER)))
          AND C.ID_CONTRACTOR = @ID_CONTRACTOR
			AND PO.DOCUMENT_STATE <> 'DEL'

          UNION ALL
          SELECT
              ID_SECTION = 1,
              SECTION_NAME = @SUPPLIER_SECTION_TEXT,
              ID_SUPPLIER = R_IT.ID_SUPPLIER,
              SUPPLIER_NAME = C.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME,
              DOC_NUM = IR.MNEMOCODE,
              DOC_DATE = IR.DOCUMENT_DATE,
              INVOICE_SUM = R_IT.SUPPLIER_SUM_VAT,
              EXPENCE_SUM = CONVERT(MONEY, NULL), 
			  NULL
          FROM IMPORT_REMAINS IR
          INNER JOIN IMPORT_REMAINS_ITEM R_IT ON R_IT.ID_IMPORT_REMAINS_GLOBAL = IR.ID_IMPORT_REMAINS_GLOBAL          
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = R_IT.ID_SUPPLIER
          WHERE (@ALL_FILTER = 1 OR (R_IT.ID_SUPPLIER IN (SELECT ID_SUPPLIER FROM #SUPPLIER)))
			AND IR.DOCUMENT_STATE = 'PROC'

          UNION ALL
          SELECT 
              ID_SECTION = 2,
              SECTION_NAME = @CLIENT_SECTION_TEXT, 
              ID_SUPPLIER = SUP.ID_CONTRACTOR,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = M.MNEMOCODE,
    	      DOC_DATE = M.DATE,
    	      INVOICE_SUM = TOTAL_SALE,
    	      EXPENCE_SUM = CONVERT(MONEY, NULL), 
			  NULL
          FROM MOVEMENT M  -- приход
          INNER JOIN STORE SF ON SF.ID_STORE = M.ID_STORE_FROM
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = SF.ID_CONTRACTOR
          INNER JOIN STORE ST ON ST.ID_STORE = M.ID_STORE_TO
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = ST.ID_CONTRACTOR
          WHERE M.DOCUMENT_STATE = 'PROC'
          AND (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_CLIENT FROM #CLIENT)))
          AND C.ID_CONTRACTOR = @ID_CONTRACTOR
 AND
		(@NOAU = 1 OR M.ID_STORE_FROM NOT IN (SELECT ID_STORE FROM #STORES_EX))
          UNION ALL
          SELECT 
              ID_SECTION = 2,
              SECTION_NAME = @CLIENT_SECTION_TEXT, 
              ID_SUPPLIER = SUP.ID_CONTRACTOR,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = M.MNEMOCODE,
    	      DOC_DATE = M.DATE,
    	      INVOICE_SUM = CONVERT(MONEY, NULL),
    	      EXPENCE_SUM = TOTAL_SALE, 
			  NULL
          FROM MOVEMENT M -- расход
          INNER JOIN STORE SF ON SF.ID_STORE = M.ID_STORE_TO
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = SF.ID_CONTRACTOR
          INNER JOIN STORE ST ON ST.ID_STORE = M.ID_STORE_FROM
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = ST.ID_CONTRACTOR
          WHERE M.DOCUMENT_STATE = 'PROC'
          AND (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_CLIENT FROM #CLIENT)))
          AND C.ID_CONTRACTOR = @ID_CONTRACTOR
 AND
		(@NOAU = 1 OR M.ID_STORE_TO NOT IN (SELECT ID_STORE FROM #STORES_EX))
          UNION ALL
          SELECT 
              ID_SECTION = 2,
              SECTION_NAME = @CLIENT_SECTION_TEXT, 
              ID_SUPPLIER = CO.ID_CONTRACTOR,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = CO.MNEMOCODE,
    	      DOC_DATE = CO.DATE,
    	      INVOICE_SUM = CASE DOC_TYPE                
                              WHEN 'INVOICE_CASH_ORDER' THEN [SUM]
                              ELSE 0
                            END,    	      
    	      EXPENCE_SUM = CASE DOC_TYPE                
                              WHEN 'EXPENSE_CASH_ORDER' THEN [SUM]
                              ELSE 0
                            END, 
			  NULL
          FROM dbo.CASH_ORDER CO
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = CO.ID_CONTRACTOR
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = CO.ID_CONTRACTOR_OWNER
          WHERE (DOC_TYPE = 'EXPENSE_CASH_ORDER' or DOC_TYPE = 'INVOICE_CASH_ORDER')
          AND (@ALL_FILTER = 1 OR (CO.ID_CONTRACTOR_OWNER IN (SELECT ID_CLIENT FROM #CLIENT)))
    	  AND CO.DOCUMENT_STATE <> 'DEL'
         
          UNION ALL
          SELECT
              ID_SECTION = 2,
              SECTION_NAME = @CLIENT_SECTION_TEXT,
              ID_SUPPLIER = PO.ID_RECIPIENT,
              SUPPLIER_NAME = SUP.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME,
              DOC_NUM = PO.MNEMOCODE,
              DOC_DATE = PO.DATE,
              INVOICE_SUM = CONVERT(MONEY, NULL),
              EXPENCE_SUM = SUM_VAT, 
			  NULL
          FROM PAYMENT_ORDER PO
          INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = PO.ID_RECIPIENT
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = PO.ID_PAYER
          WHERE (@ALL_FILTER = 1 OR (SUP.ID_CONTRACTOR IN (SELECT ID_CLIENT FROM #CLIENT)))
			AND PO.DOCUMENT_STATE <> 'DEL'
                  
          UNION ALL
          SELECT 
              ID_SECTION = 3,
              SECTION_NAME = @BUYER_SECTION_TEXT, 
              ID_SUPPLIER = I1.ID_CONTRACTOR_TO,
              SUPPLIER_NAME = BUY.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = I1.MNEMOCODE,
    	      DOC_DATE = I1.DATE,
    	      INVOICE_SUM = I1.SUM_SAL,
    	      EXPENCE_SUM = CONVERT(MONEY, NULL), 
			  NULL
          FROM INVOICE_OUT I1
          INNER JOIN CONTRACTOR BUY ON BUY.ID_CONTRACTOR = I1.ID_CONTRACTOR_TO
          INNER JOIN STORE S ON S.ID_STORE = I1.ID_STORE
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
          WHERE I1.STATE = 'PROC'
          AND (@ALL_FILTER = 1 OR (BUY.ID_CONTRACTOR IN (SELECT ID_BUYER FROM #BUYER)))
          AND C.ID_CONTRACTOR = @ID_CONTRACTOR
--           UNION
--           SELECT 
--               ID_SECTION = 3,
--               SECTION_NAME = @BUYER_SECTION_TEXT, 
--               ID_SUPPLIER = ARB.ID_CONTRACTOR_FROM,
--               SUPPLIER_NAME = BUY.NAME,
--               BEGIN_SUM = CONVERT(MONEY, NULL),
--               ID_CONTRACTOR = C.ID_CONTRACTOR,
--               CONTRACTOR_NAME = C.NAME, 
--               DOC_NUM = ARB.MNEMOCODE,
--     	      DOC_DATE = ARB.DATE,
--     	      INVOICE_SUM = TOTAL_WITH_VAT,
--     	      EXPENCE_SUM = CONVERT(MONEY, NULL)
--           FROM ACT_RETURN_TO_BUYER ARB
--           INNER JOIN CONTRACTOR BUY ON BUY.ID_CONTRACTOR = ARB.ID_CONTRACTOR_FROM
--           INNER JOIN STORE S ON S.ID_STORE = ARB.ID_STORE_TO
--           INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
--           WHERE ARB.DOCUMENT_STATE = 'PROC'
--           AND (@ALL_BUYER = 1 OR (BUY.ID_CONTRACTOR IN (SELECT ID_BUYER FROM #BUYER)))
--           AND C.ID_CONTRACTOR = @ID_CONTRACTOR
          UNION ALL
          SELECT 
              ID_SECTION = 3,
              SECTION_NAME = @BUYER_SECTION_TEXT, 
              ID_SUPPLIER = CO1.ID_CONTRACTOR,
              SUPPLIER_NAME = BUY.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME, 
              DOC_NUM = CO1.MNEMOCODE,
    	      DOC_DATE = CO1.DATE,
    	      INVOICE_SUM = CASE DOC_TYPE                
                              WHEN 'INVOICE_CASH_ORDER' THEN [SUM]
                              ELSE 0
                            END,    	      
    	      EXPENCE_SUM = CASE DOC_TYPE                
                              WHEN 'EXPENSE_CASH_ORDER' THEN [SUM]
                              ELSE 0
                            END, 
			  NULL
          FROM CASH_ORDER CO1
          INNER JOIN CONTRACTOR BUY ON BUY.ID_CONTRACTOR = CO1.ID_CONTRACTOR
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = CO1.ID_CONTRACTOR_OWNER
          WHERE (DOC_TYPE = 'EXPENSE_CASH_ORDER' or DOC_TYPE = 'INVOICE_CASH_ORDER')
          AND (@ALL_FILTER = 1 OR (BUY.ID_CONTRACTOR IN (SELECT ID_BUYER FROM #BUYER)))
          AND BUY.ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM STORE)
			AND CO1.DOCUMENT_STATE <> 'DEL'
			
          UNION ALL
          SELECT
              ID_SECTION = 3,
              SECTION_NAME = @BUYER_SECTION_TEXT,
              ID_SUPPLIER = PO.ID_RECIPIENT,
              SUPPLIER_NAME = BUY.NAME,
              BEGIN_SUM = CONVERT(MONEY, NULL),
              ID_CONTRACTOR = C.ID_CONTRACTOR,
              CONTRACTOR_NAME = C.NAME,
              DOC_NUM = PO.MNEMOCODE,
              DOC_DATE = PO.DATE,
              INVOICE_SUM = CONVERT(MONEY, NULL),
              EXPENCE_SUM = SUM_VAT, 
			  NULL
          FROM PAYMENT_ORDER PO
          INNER JOIN CONTRACTOR BUY ON BUY.ID_CONTRACTOR = PO.ID_RECIPIENT
          INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = PO.ID_PAYER
          WHERE (@ALL_FILTER = 1 OR (BUY.ID_CONTRACTOR IN (SELECT ID_BUYER FROM #BUYER)))
			AND PO.DOCUMENT_STATE <> 'DEL'

			
    ) A
    WHERE DOC_DATE < @DATE_TO

	SELECT
		ID_SECTION,
		SECTION_NAME = MIN(SECTION_NAME),
		ID_SUPPLIER,
		SUPPLIER_NAME = MIN(SUPPLIER_NAME),
		BEGIN_SUM = SUM(ISNULL(INVOICE_SUM,0)) - SUM(ISNULL(EXPENCE_SUM,0))
	INTO #BEGIN_SUM
	FROM #TEMP
	WHERE DOC_DATE <@DATE_FROM
	GROUP BY ID_SECTION, ID_SUPPLIER

/*  Отладка
	SELECT
		ID_SECTION,
		SECTION_NAME = MIN(SECTION_NAME),
		ID_SUPPLIER,
		SUPPLIER_NAME = MIN(SUPPLIER_NAME),
		BEGIN_SUM = SUM(ISNULL(INVOICE_SUM,0)) - SUM(ISNULL(EXPENCE_SUM,0))
	FROM #TEMP
	WHERE DOC_DATE <@DATE_FROM
	GROUP BY ID_SECTION, ID_SUPPLIER
    order by ID_SECTION
*/

    UPDATE T SET
        BEGIN_SUM = SS.BEGIN_SUM
    FROM #TEMP T
    LEFT JOIN (SELECT
                    ID_SECTION,
                    ID_SUPPLIER,
                    BEGIN_SUM = SUM(BEGIN_SUM)
                FROM #BEGIN_SUM SS
                GROUP BY ID_SECTION, ID_SUPPLIER) 
    SS ON SS.ID_SUPPLIER = T.ID_SUPPLIER
        AND SS.ID_SECTION = T.ID_SECTION
    WHERE DOC_DATE > @DATE_FROM

    
    DELETE FROM #TEMP WHERE DOC_DATE<@DATE_FROM

	IF (@ALL=1) BEGIN
		DELETE S FROM #SUPPLIER S WHERE NOT EXISTS (SELECT NULL FROM #TEMP T WHERE T.ID_SECTION=1)
		DELETE S FROM #CLIENT S WHERE NOT EXISTS (SELECT NULL FROM #TEMP T WHERE T.ID_SECTION=2)
		DELETE S FROM #BUYER S WHERE NOT EXISTS (SELECT NULL FROM #TEMP T WHERE T.ID_SECTION=3)
	END

SELECT * FROM (
    SELECT *
    FROM #TEMP
    UNION
    SELECT 
		ID_SECTION =BS.ID_SECTION,
		SECTION_NAME = BS.SECTION_NAME,
		ID_SUPPLIER = BS.ID_SUPPLIER,
		SUPPLIER_NAME = BS.SUPPLIER_NAME,
		BEGIN_SUM = SS.BEGIN_SUM,
        ID_CONTRACTOR = NULL,
        CONTRACTOR_NAME = NULL, 
        DOC_NUM = NULL,
        DOC_DATE = NULL,
        INVOICE_SUM = NULL,
        EXPENCE_SUM = NULL, 
		NULL
     FROM #BEGIN_SUM BS
     LEFT JOIN (SELECT
                    ID_SUPPLIER,
                    ID_SECTION,
                    BEGIN_SUM = SUM(BEGIN_SUM)
                FROM #BEGIN_SUM SS
                GROUP BY ID_SECTION, ID_SUPPLIER) SS ON SS.ID_SUPPLIER = BS.ID_SUPPLIER AND SS.ID_SECTION = BS.ID_SECTION
    WHERE NOT EXISTS (SELECT NULL FROM #TEMP T1 WHERE T1.ID_SUPPLIER=BS.ID_SUPPLIER)
    UNION
    SELECT 
        ID_SECTION=1,
        SECTION_NAME =@SUPPLIER_SECTION_TEXT,
        ID_SUPPLIER = NULL,
        SUPPLIER_NAME = NULL,
        BEGIN_SUM = NULL,
        ID_CONTRACTOR = NULL,
        CONTRACTOR_NAME = NULL, 
        DOC_NUM = NULL,
        DOC_DATE = NULL,
        INVOICE_SUM = NULL,
        EXPENCE_SUM = NULL, 
		NULL
    WHERE (@ALL_FILTER=1 OR EXISTS (SELECT NULL FROM #SUPPLIER)) AND NOT EXISTS (SELECT NULL FROM #TEMP WHERE ID_SECTION=1)
    UNION
    SELECT 
        ID_SECTION=2,
        SECTION_NAME =@CLIENT_SECTION_TEXT,
        ID_SUPPLIER = NULL,
        SUPPLIER_NAME = NULL,
        BEGIN_SUM = NULL,
        ID_CONTRACTOR = NULL,
        CONTRACTOR_NAME = NULL, 
        DOC_NUM = NULL,
        DOC_DATE = NULL,
        INVOICE_SUM = NULL,
        EXPENCE_SUM = NULL, 
		NULL
    WHERE (@ALL_FILTER=1 OR EXISTS (SELECT NULL FROM #CLIENT)) AND NOT EXISTS (SELECT NULL FROM #TEMP WHERE ID_SECTION=2)
    UNION
    SELECT 
        ID_SECTION=3,
        SECTION_NAME =@BUYER_SECTION_TEXT,
        ID_SUPPLIER = NULL,
        SUPPLIER_NAME = NULL,
        BEGIN_SUM = NULL,
        ID_CONTRACTOR = NULL,
        CONTRACTOR_NAME = NULL, 
        DOC_NUM = NULL,
        DOC_DATE = NULL,
        INVOICE_SUM = NULL,
        EXPENCE_SUM = NULL, 
		NULL
    WHERE (@ALL_FILTER=1 OR EXISTS (SELECT NULL FROM #BUYER)) AND NOT EXISTS (SELECT NULL FROM #TEMP WHERE ID_SECTION=3)
    UNION
    SELECT
        ID_SECTION=1,
        SECTION_NAME =@SUPPLIER_SECTION_TEXT,
        ID_SUPPLIER = T.ID_SUPPLIER,
        SUPPLIER_NAME = T.NAME,
        BEGIN_SUM = 0,
        ID_CONTRACTOR = NULL,
        CONTRACTOR_NAME = NULL, 
        DOC_NUM = NULL,
        DOC_DATE = NULL,
        INVOICE_SUM = NULL,
        EXPENCE_SUM = NULL, 
		NULL
    FROM #SUPPLIER T
    WHERE ISNULL(@ALL_FILTER,0)=0 
    AND EXISTS (SELECT NULL FROM #SUPPLIER) 
    AND NOT EXISTS (SELECT NULL FROM #TEMP T1 WHERE T1.ID_SECTION=1 AND T1.ID_SUPPLIER = T.ID_SUPPLIER)
    AND NOT EXISTS (SELECT NULL FROM #BEGIN_SUM BS WHERE BS.ID_SUPPLIER = T.ID_SUPPLIER AND BS.ID_SECTION=1)
    UNION
    SELECT
        ID_SECTION=2,
        SECTION_NAME =@CLIENT_SECTION_TEXT,
        ID_SUPPLIER = T.ID_CLIENT,
        SUPPLIER_NAME = T.NAME,
        BEGIN_SUM = 0,
        ID_CONTRACTOR = NULL,
        CONTRACTOR_NAME = NULL, 
        DOC_NUM = NULL,
        DOC_DATE = NULL,
        INVOICE_SUM = NULL,
        EXPENCE_SUM = NULL, 
		NULL
    FROM #CLIENT T
    WHERE ISNULL(@ALL_FILTER,0)=0 
    AND EXISTS (SELECT NULL FROM #CLIENT) 
    AND NOT EXISTS (SELECT NULL FROM #TEMP T1 WHERE T1.ID_SECTION=2 AND T1.ID_SUPPLIER = T.ID_CLIENT)
    AND NOT EXISTS (SELECT NULL FROM #BEGIN_SUM BS WHERE BS.ID_SUPPLIER = T.ID_CLIENT AND BS.ID_SECTION=2)
    UNION
    SELECT
        ID_SECTION=3,
        SECTION_NAME =@BUYER_SECTION_TEXT,
        ID_SUPPLIER = T.ID_BUYER,
        SUPPLIER_NAME = T.NAME,
        BEGIN_SUM = 0,
        ID_CONTRACTOR = NULL,
        CONTRACTOR_NAME = NULL, 
        DOC_NUM = NULL,
        DOC_DATE = NULL,
        INVOICE_SUM = NULL,
        EXPENCE_SUM = NULL, 
		NULL
    FROM #BUYER T   
    WHERE ISNULL(@ALL_FILTER,0)=0 
    AND EXISTS (SELECT NULL FROM #BUYER) 
    AND NOT EXISTS (SELECT NULL FROM #TEMP T1 WHERE T1.ID_SECTION=3 AND T1.ID_SUPPLIER = T.ID_BUYER)
    AND NOT EXISTS (SELECT NULL FROM #BEGIN_SUM BS WHERE BS.ID_SUPPLIER = T.ID_BUYER AND BS.ID_SECTION=3)    
     ) AS OLD_SHIT
WHERE ID_SECTION = @ID_SECTION
	AND ID_SUPPLIER IN (SELECT SUP from #sups)
ORDER BY ID_SECTION ASC, ID_SUPPLIER ASC, DOC_DATE ASC

RETURN
GO

/*
exec REPEX_CONTRACTOR_SETTLEMENT N'
<XML>
	<DATE_FROM>2009-12-08T13:19:46.765</DATE_FROM>
	<DATE_TO>2009-12-10T13:19:46.765</DATE_TO>
	<ID_CONTRACTOR>5271</ID_CONTRACTOR>
	<SHOW_ON_THE_WAY>0</SHOW_ON_THE_WAY>
	<ID_SECTION>1</ID_SECTION>
	<REP_TYPE>Покупатели</REP_TYPE>
	<SUP>5283</SUP>
	<NOAU>1</NOAU>
</XML>'*/

SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('DBO.REPEX_CONTRACTOR_SETTLEMENT_2') IS NULL) EXEC ('CREATE PROCEDURE DBO.REPEX_CONTRACTOR_SETTLEMENT_2 AS RETURN')
GO
ALTER PROCEDURE [dbo].[REPEX_CONTRACTOR_SETTLEMENT_2]
    @XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ID_CONTRACTOR BIGINT
DECLARE @SHOW_ON_THE_WAY BIT
DECLARE @ID_SECTION INT

DECLARE @SUPPLIER_SECTION_TEXT VARCHAR(20)
SET @SUPPLIER_SECTION_TEXT = 'Поставщики'

DECLARE @CLIENT_SECTION_TEXT VARCHAR(20)
SET @CLIENT_SECTION_TEXT = 'Аптеки'

DECLARE @BUYER_SECTION_TEXT VARCHAR(20)
SET @BUYER_SECTION_TEXT = 'Покупатели'

DECLARE @ALL_SUPPLIER BIT, @ALL_CLIENT BIT, @ALL_BUYER BIT
DECLARE @ALL BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
SELECT 
    @DATE_FROM = DATE_FROM,
    @DATE_TO = DATE_TO,
    @ID_CONTRACTOR = ID_CONTRACTOR,
    @SHOW_ON_THE_WAY = SHOW_ON_THE_WAY,
	@ALL = [ALL],
	@ID_SECTION = ID_SECTION
FROM OPENXML(@HDOC, '/XML') WITH(
	[ALL] BIT 'ALL', 
    DATE_FROM DATETIME 'DATE_FROM',
    DATE_TO DATETIME 'DATE_TO',
    ID_CONTRACTOR BIGINT 'ID_CONTRACTOR',
    SHOW_ON_THE_WAY BIT 'SHOW_ON_THE_WAY',
	ID_SECTION INT 'ID_SECTION'
)

SELECT * into #sups
FROM OPENXML(@HDOC, '/XML/SUP') WITH(SUP BIGINT '.')

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC dbo.USP_RANGE_DAYS @DATE_FROM OUTPUT,	@DATE_TO OUTPUT
EXEC dbo.USP_RANGE_NORM @DATE_FROM OUTPUT,	@DATE_TO OUTPUT    

--select * from #sups

SELECT *
INTO #TEMP
FROM (
SELECT
	ID_SECTION = 3,
	SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
	ID_SUPPLIER = I.ID_CONTRACTOR_FROM,
	SUPPLIER_NAME = SUP.NAME,
	BEGIN_SUM = CONVERT(MONEY, NULL),
	ID_CONTRACTOR = C.ID_CONTRACTOR,
	CONTRACTOR_NAME = C.NAME, 
	DOC_NUM = I.MNEMOCODE,
	DOC_DATE = I.[DATE],
	INVOICE_SUM = I.TOTAL_WITH_VAT,
	EXPENCE_SUM = CONVERT(MONEY, NULL),
	DATE_PAYMENT = NULL
FROM ACT_RETURN_TO_BUYER I
	INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = I.ID_CONTRACTOR_FROM
	INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE_TO
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
WHERE I.DOCUMENT_STATE = 'PROC'
	AND C.ID_CONTRACTOR = @ID_CONTRACTOR
UNION ALL
 SELECT
      ID_SECTION = 1,
      SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
      ID_SUPPLIER = I.ID_CONTRACTOR_SUPPLIER,
      SUPPLIER_NAME = SUP.NAME,
      BEGIN_SUM = CONVERT(MONEY, NULL),
      ID_CONTRACTOR = C.ID_CONTRACTOR,
      CONTRACTOR_NAME = C.NAME, 
      DOC_NUM = I.MNEMOCODE + ISNULL(CHAR(10)+CHAR(13)+'№ пост.: '+I.INCOMING_NUMBER, '')+ISNULL(CHAR(10)+CHAR(13)+'Сч/Ф.: '+I.INCOMING_BILL_NUMBER,''),
      DOC_DATE = I.DOCUMENT_DATE,
      INVOICE_SUM = I.SUM_SUPPLIER,
      EXPENCE_SUM = CONVERT(MONEY, NULL),
	  I.DATE_PAYMENT
FROM INVOICE I
	INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
	INNER JOIN STORE S ON S.ID_STORE = I.ID_STORE
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
WHERE (I.DOCUMENT_STATE = 'PROC' OR (I.DOCUMENT_STATE='SAVE' AND I.ON_THE_WAY=1 AND @SHOW_ON_THE_WAY=1))
	AND C.ID_CONTRACTOR = @ID_CONTRACTOR
UNION ALL
SELECT 
	ID_SECTION = 1,
	SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
	ID_SUPPLIER = AR.ID_CONTRACTOR_TO,
	SUPPLIER_NAME = SUP.NAME,
	BEGIN_SUM = CONVERT(MONEY, NULL),
	ID_CONTRACTOR = C.ID_CONTRACTOR,
	CONTRACTOR_NAME = C.NAME, 
	DOC_NUM = AR.MNEMOCODE,
	DOC_DATE = AR.DATE,
	INVOICE_SUM = CONVERT(MONEY, NULL),
	EXPENCE_SUM = TOTAL,
	NULL
FROM dbo.ACT_RETURN_TO_CONTRACTOR AR
	INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = AR.ID_CONTRACTOR_TO
	INNER JOIN STORE S ON S.ID_STORE = AR.ID_STORE
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
WHERE AR.DOCUMENT_STATE = 'PROC'
	AND C.ID_CONTRACTOR = @ID_CONTRACTOR
UNION ALL
SELECT 
	ID_SECTION = 1,
	SECTION_NAME = @SUPPLIER_SECTION_TEXT, 
	ID_SUPPLIER = CO.ID_CONTRACTOR,
	SUPPLIER_NAME = SUP.NAME,
	BEGIN_SUM = CONVERT(MONEY, NULL),
	ID_CONTRACTOR = C.ID_CONTRACTOR,
	CONTRACTOR_NAME = C.NAME, 
	DOC_NUM = CO.MNEMOCODE,
	DOC_DATE = CO.DATE,
	INVOICE_SUM = CASE DOC_TYPE                
				  WHEN 'INVOICE_CASH_ORDER' THEN [SUM]
				  ELSE 0
				END,    	      
	EXPENCE_SUM = CASE DOC_TYPE                
				  WHEN 'EXPENSE_CASH_ORDER' THEN [SUM]
				  ELSE 0
				END,
	NULL
FROM dbo.CASH_ORDER CO
	INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = CO.ID_CONTRACTOR
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = CO.ID_CONTRACTOR_OWNER
WHERE (DOC_TYPE = 'EXPENSE_CASH_ORDER' or DOC_TYPE = 'INVOICE_CASH_ORDER')
	AND C.ID_CONTRACTOR = @ID_CONTRACTOR
	AND SUP.ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR FROM STORE)
	AND CO.DOCUMENT_STATE <> 'DEL'
UNION ALL
SELECT
	ID_SECTION = 1,
	SECTION_NAME = @SUPPLIER_SECTION_TEXT,
	ID_SUPPLIER = PO.ID_RECIPIENT,
	SUPPLIER_NAME = SUP.NAME,
	BEGIN_SUM = CONVERT(MONEY, NULL),
	ID_CONTRACTOR = C.ID_CONTRACTOR,
	CONTRACTOR_NAME = C.NAME,
	DOC_NUM = PO.MNEMOCODE,
	DOC_DATE = PO.DATE,
	INVOICE_SUM = CONVERT(MONEY, NULL),
	EXPENCE_SUM = SUM_VAT,
	NULL
FROM PAYMENT_ORDER PO
	INNER JOIN CONTRACTOR SUP ON SUP.ID_CONTRACTOR = PO.ID_RECIPIENT
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = PO.ID_PAYER
WHERE C.ID_CONTRACTOR = @ID_CONTRACTOR
	AND PO.DOCUMENT_STATE <> 'DEL'
UNION ALL
SELECT
	ID_SECTION = 1,
	SECTION_NAME = @SUPPLIER_SECTION_TEXT,
	ID_SUPPLIER = R_IT.ID_SUPPLIER,
	SUPPLIER_NAME = C.NAME,
	BEGIN_SUM = CONVERT(MONEY, NULL),
	ID_CONTRACTOR = C.ID_CONTRACTOR,
	CONTRACTOR_NAME = C.NAME,
	DOC_NUM = IR.MNEMOCODE,
	DOC_DATE = IR.DOCUMENT_DATE,
	INVOICE_SUM = R_IT.SUPPLIER_SUM_VAT,
	EXPENCE_SUM = CONVERT(MONEY, NULL),
	NULL
FROM IMPORT_REMAINS IR
	INNER JOIN IMPORT_REMAINS_ITEM R_IT ON R_IT.ID_IMPORT_REMAINS_GLOBAL = IR.ID_IMPORT_REMAINS_GLOBAL
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = R_IT.ID_SUPPLIER
WHERE IR.DOCUMENT_STATE = 'PROC' and R_IT.ID_SUPPLIER IN (SELECT SUP from #sups)
UNION ALL
SELECT 
	ID_SECTION = 3,
	SECTION_NAME = @BUYER_SECTION_TEXT, 
	ID_SUPPLIER = I1.ID_CONTRACTOR_TO,
	SUPPLIER_NAME = BUY.NAME,
	BEGIN_SUM = CONVERT(MONEY, NULL),
	ID_CONTRACTOR = C.ID_CONTRACTOR,
	CONTRACTOR_NAME = C.NAME, 
	DOC_NUM = I1.MNEMOCODE,
	DOC_DATE = I1.DATE,
	INVOICE_SUM = CONVERT(MONEY, NULL),
	EXPENCE_SUM = I1.SUM_SAL,
	NULL
FROM INVOICE_OUT I1
	INNER JOIN CONTRACTOR BUY ON BUY.ID_CONTRACTOR = I1.ID_CONTRACTOR_TO
	INNER JOIN STORE S ON S.ID_STORE = I1.ID_STORE
	INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
WHERE I1.STATE = 'PROC'
AND C.ID_CONTRACTOR = @ID_CONTRACTOR	
) A WHERE DOC_DATE < @DATE_TO

--select * from #temp

SELECT
	ID_SUPPLIER,
	SUPPLIER_NAME = MIN(SUPPLIER_NAME),
	BEGIN_SUM = SUM(ISNULL(INVOICE_SUM,0)) - SUM(ISNULL(EXPENCE_SUM,0))		
INTO #BEGIN_SUM
FROM #TEMP
WHERE DOC_DATE < @DATE_FROM
GROUP BY ID_SUPPLIER

--select * from #begin_sum

UPDATE T SET
    BEGIN_SUM = (SELECT BEGIN_SUM FROM #BEGIN_SUM WHERE id_supplier = t.id_supplier)
FROM #TEMP T WHERE DOC_DATE > @DATE_FROM

--select * from #temp

SELECT * FROM #TEMP
WHERE ID_SUPPLIER IN (SELECT SUP from #sups) and doc_date > @date_from
ORDER BY SUPPLIER_NAME ASC, DOC_DATE ASC

RETURN
GO

/*
exec REPEX_CONTRACTOR_SETTLEMENT_2 N'
<XML>
	<DATE_FROM>2009-09-15T13:19:46.765</DATE_FROM>
	<DATE_TO>2009-09-16T13:19:46.765</DATE_TO>
	<ID_CONTRACTOR>5277</ID_CONTRACTOR>
	<SHOW_ON_THE_WAY>0</SHOW_ON_THE_WAY>
	<ID_SECTION>3</ID_SECTION>
	<REP_TYPE>Покупатели</REP_TYPE>
	<SUP>5283</SUP>
</XML>'*/