SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF (OBJECT_ID('dbo.REPEXT_RETURN_TO_CONTRACTOR') IS NULL) EXEC ('CREATE PROCEDURE dbo.REPEXT_RETURN_TO_CONTRACTOR AS RETURN')
GO

ALTER PROCEDURE [dbo].[REPEXT_RETURN_TO_CONTRACTOR]
  @XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @DATE_FROM DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ALL_CONTRACTORS_FROM BIT
DECLARE @ALL_STORES BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUT, @XMLPARAM
SELECT
  @DATE_FROM = DATE_FROM,
  @DATE_TO = DATE_TO
FROM OPENXML(@HDOC, '/XML') WITH(
  DATE_FROM DATETIME 'DATE_FROM',
  DATE_TO DATETIME 'DATE_TO'
)

EXEC DBO.USP_RANGE_NORM @DATE_FROM OUTPUT, @DATE_TO OUTPUT
EXEC DBO.USP_RANGE_DAYS @DATE_FROM OUTPUT, @DATE_TO OUTPUT

SELECT P.ID_STORE, C.ID_CONTRACTOR INTO #STORES_PARAMS
FROM OPENXML(@HDOC, '/XML/ID_STORE') WITH(
  ID_STORE BIGINT '.'
) P LEFT JOIN dbo.STORE S ON P.ID_STORE = S.ID_STORE
  INNER JOIN dbo.CONTRACTOR C ON C.ID_CONTRACTOR = S.ID_CONTRACTOR
IF (@@ROWCOUNT = 0)
  SET @ALL_STORES = 1

SELECT ID_CONTRACTOR_FROM INTO #CONTRACTORS_FROM
FROM OPENXML(@HDOC, '/XML/ID_CONTRACTOR_FROM') WITH(
  ID_CONTRACTOR_FROM BIGINT '.'
)
IF (@@ROWCOUNT = 0)
  SET @ALL_CONTRACTORS_FROM = 1

SELECT S.ID_STORE INTO #STORES_FILTER
FROM #CONTRACTORS_FROM CF INNER JOIN dbo.STORE S ON
CF.ID_CONTRACTOR_FROM IN (SELECT ID_CONTRACTOR FROM #STORES_PARAMS) AND S.ID_STORE IN (SELECT ID_STORE FROM #STORES_PARAMS)
OR CF.ID_CONTRACTOR_FROM NOT IN (SELECT ID_CONTRACTOR FROM #STORES_PARAMS) AND CF.ID_CONTRACTOR_FROM = S.ID_CONTRACTOR
UNION ALL
SELECT ID_STORE
FROM #STORES_PARAMS
WHERE ID_CONTRACTOR NOT IN (SELECT ID_CONTRACTOR_FROM FROM #CONTRACTORS_FROM)

SELECT ARTC.DATE, C.[NAME], ARTC.MNEMOCODE, ARTC.BASE_DOCUMENT_NAME,
  ARTC.TOTAL, SUM(L.PRICE_SAL * ARTCI.QUANTITY) AS TOTAL_RET
FROM dbo.ACT_RETURN_TO_CONTRACTOR ARTC
  INNER JOIN dbo.CONTRACTOR C ON ARTC.ID_CONTRACTOR_TO = C.ID_CONTRACTOR
  INNER JOIN dbo.ACT_RETURN_TO_CONTRACTOR_ITEM ARTCI
    ON ARTC.ID_ACT_RETURN_TO_CONTRACTOR = ARTCI.ID_ACT_RETURN_TO_CONTRACTOR
  INNER JOIN dbo.LOT L ON ARTCI.ID_LOT_GLOBAL = L.ID_LOT_GLOBAL
WHERE ARTC.DOCUMENT_STATE = 'PROC'
AND (@ALL_CONTRACTORS_FROM = 1 OR ARTC.ID_CONTRACTOR_FROM IN (SELECT ID_CONTRACTOR_FROM FROM #CONTRACTORS_FROM))
AND (@ALL_STORES = 1 OR ARTC.ID_STORE IN (SELECT ID_STORE FROM #STORES_FILTER))
AND ARTC.DATE BETWEEN @DATE_FROM AND @DATE_TO
GROUP BY ARTC.DATE, C.[NAME], ARTC.MNEMOCODE, ARTC.BASE_DOCUMENT_NAME,
  ARTC.TOTAL
ORDER BY C.[NAME], ARTC.DATE

RETURN
GO


SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO 

IF OBJECT_ID('DBO.REMOVE_REPORT_BY_TYPE_NAME') IS NULL EXEC('CREATE PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME AS RETURN')
GO
ALTER PROCEDURE DBO.REMOVE_REPORT_BY_TYPE_NAME 
	@REPORT_TYPE_NAME VARCHAR(200) AS
	
DECLARE @id_meta_report BIGINT

	select 
		@id_meta_report = id_meta_report
	from meta_report
	where type_name = @REPORT_TYPE_NAME
	--select @id_meta_report
		
	DECLARE @SQL NVARCHAR(200)
	SET @SQL = N'delete from META_REPORT_2_REPORT_GROUPS
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('META_REPORT_2_REPORT_GROUPS') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_csv_export
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_csv_export') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_visible
		where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_visible') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report
		

	SET @SQL = N'delete from meta_report_settings_managed
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_managed') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	SET @SQL = N'delete from meta_report_settings_archive
				where id_meta_report = @id_meta_report'
	IF (OBJECT_ID('meta_report_settings_archive') IS NOT NULL)
		EXEC SP_EXECUTESQL @SQL, N'@id_meta_report BIGINT', @id_meta_report=@id_meta_report


	delete from meta_report
	where id_meta_report = @id_meta_report

RETURN 0
GO

EXEC DBO.REMOVE_REPORT_BY_TYPE_NAME 'ReturnToContractor.ControlReturnToContractorForm'