SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_FACTOR_REESTR') IS NULL EXEC ('CREATE PROCEDURE DBO.REPEX_FACTOR_REESTR AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_FACTOR_REESTR
    @XMLPARAM NTEXT
AS

DECLARE @DATE_FR DATETIME
DECLARE @DATE_TO DATETIME
DECLARE @ZNVLS BIT
DECLARE @ALL_STORES BIT
DECLARE @ALL_CONTRACTORS BIT

DECLARE @HDOC INT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT

SELECT
	@DATE_FR = DATE_FR,
	@DATE_TO = DATE_TO,
	@ZNVLS = ZNVLS
FROM OPENXML(@HDOC, '/XML') WITH(
	DATE_FR DATETIME 'DATE_FR',
	DATE_TO DATETIME 'DATE_TO',
	ZNVLS BIT 'ZNVLS'
)

SELECT * INTO #STORES FROM OPENXML(@HDOC, '//ID_STORE') WITH(ID_STORE BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_STORES = 1
--select * from #stores
SELECT * INTO #CONTRACTORS FROM OPENXML(@HDOC, '//ID_CONTRACTOR') WITH(ID_CONTRACTOR BIGINT '.')
IF (@@ROWCOUNT = 0)	SET @ALL_CONTRACTORS = 1
--select * from #contractors

EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC DBO.USP_RANGE_NORM	@DATE_FR OUTPUT, @DATE_TO OUTPUT
EXEC DBO.USP_RANGE_DAYS	@DATE_FR OUTPUT, @DATE_TO OUTPUT

--SELECT @DATE_FR, @DATE_TO, @ZNVLS, @ALL_CONTRACTORS, @ALL_STORES

DECLARE @TEMP_T TABLE(
	DATE_OP DATETIME,
	ID_CONTRACTOR BIGINT,
	ID_STORE BIGINT,
	CONTRACTOR_NAME VARCHAR(100),
	STORE_NAME VARCHAR(100),
	SUM_SUP MONEY,
	SUM_SAL MONEY
)

DECLARE @DDATE_FR INT
DECLARE @DDATE_TO INT
SET @DDATE_FR = FLOOR(CONVERT(FLOAT,@DATE_FR))
SET @DDATE_TO = FLOOR(CONVERT(FLOAT,@DATE_TO))

CREATE TABLE #T (DT INT)
DECLARE @C INT
SET @C = @DDATE_FR

WHILE @C <= @DDATE_TO
BEGIN
	INSERT INTO #T VALUES(@C)
	SET @C = @C + 1
END

SELECT
	CONTRACTOR_NAME = t3.CONTRACTOR_NAME,
	STORE_NAME = t3.STORE_NAME,
	DT = CAST(ISNULL(t1.DT, t3.DT) AS DATETIME),
	PROD_PRICE = t4.PROD_PRICE,
	SUM_SUP = T1.SUM_SUP,
	SUM_SAL = T1.SUM_SAL,
	ADPRICE_SUP = CASE WHEN t4.PROD_PRICE = 0 THEN NULL ELSE t1.sum_sal / t4.PROD_PRICE * 100 - 100 END,
	BEGIN_SUM_SUP = T3.SUM_SUP,
	BEGIN_SUM_SAL = T3.SUM_SAL,
	CHEQUE_COUNT = t5.ch_count,
	AVG_PRICE = CASE WHEN T5.ch_count = 0 THEN NULL ELSE T2.SUM_SAL / T5.ch_count END,
	NAPOLN = case when t5.ch_count = 0 then NULL else cast(t5.chi_count as money) / t5.ch_count end,
	t5.chi_count,
	CHEQUE_SUM_SUP = T2.SUM_SUP,
	CHEQUE_SUM_SAL = T2.SUM_SAL,
	SUM_DISCOUNT = T2.SUM_DISCOUNT,
	TORG_N = CASE WHEN T2.SUM_SAL = 0 OR T2.SUM_SUP = 0 THEN NULL ELSE T2.SUM_SAL / T2.SUM_SUP * 100 - 100 END,
	DAYS_REM = CASE WHEN T2.SUM_SUP = 0 THEN NULL ELSE T3.SUM_SUP / T2.SUM_SUP END,
	DELTA = T2.SUM_SAL - T2.SUM_SUP
FROM
(
/*SELECT
	DT = FLOOR(CONVERT(FLOAT, DM.DATE_OP)),
	ID_STORE = ST.ID_STORE,
	SUM_SUP = SUM(SUM_SUP),
	SUM_SAL = SUM(SUM_ACC)
FROM DOC_MOVEMENT DM
	INNER JOIN STORE ST ON ST.ID_STORE = DM.ID_STORE
WHERE (DM.ID_TABLE = 2 OR DM.ID_TABLE = 30) AND DM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	and (@ALL_CONTRACTORS = 1 or st.ID_CONTRACTOR in (select ID_CONTRACTOR from #contractors))
	and (@ALL_STORES = 1 or st.ID_STORE in (select ID_STORE from #STORES))
GROUP BY FLOOR(CONVERT(FLOAT, DM.DATE_OP)), ST.ID_STORE*/

SELECT
	DT = FLOOR(CONVERT(FLOAT, LM.DATE_OP)),
	ID_STORE = ST.ID_STORE,
	SUM_SUP = SUM(SUM_SUP),
	SUM_SAL = SUM(SUM_ACC)
FROM dbo.LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	INNER JOIN GOODS G ON L.ID_GOODS = G.ID_GOODS
WHERE (LM.ID_TABLE = 2 OR LM.ID_TABLE = 30) AND LM.DATE_OP BETWEEN @DATE_FR AND @DATE_TO
	and (@ALL_CONTRACTORS = 1 or st.ID_CONTRACTOR in (select ID_CONTRACTOR from #contractors))
	and (@ALL_STORES = 1 or st.ID_STORE in (select ID_STORE from #STORES))
	AND (@ZNVLS = 0 OR (@ZNVLS = 1 AND G.IMPORTANT = 1))
GROUP BY FLOOR(CONVERT(FLOAT, LM.DATE_OP)), ST.ID_STORE

) t1
FULL OUTER JOIN
(
SELECT
	DT = FLOOR(CONVERT(FLOAT, CH.DATE_CHEQUE)),
	ID_STORE = st.ID_STORE,
	SUM_SUP = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * L.PRICE_SUP * CHI.QUANTITY),
	SUM_SAL = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * CHI.SUMM),
	SUM_DISCOUNT = SUM(CASE WHEN CH.CHEQUE_TYPE = 'SALE' THEN 1 ELSE -1 END * CHI.SUMM_DISCOUNT)
FROM CASH_REGISTER CR
	LEFT JOIN CASH_SESSION CS ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
	INNER JOIN CHEQUE CH ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL
	INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL	
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	INNER JOIN GOODS G ON L.ID_GOODS = G.ID_GOODS
WHERE CH.DOCUMENT_STATE = 'PROC'
	AND CH.CHEQUE_TYPE IN ('SALE','RETURN')
	AND CH.DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO
	and (@ALL_CONTRACTORS = 1 or st.ID_CONTRACTOR in (select ID_CONTRACTOR from #contractors))
	and (@ALL_STORES = 1 or st.ID_STORE in (select ID_STORE from #STORES))	
	AND (@ZNVLS = 0 OR (@ZNVLS = 1 AND G.IMPORTANT = 1))	
GROUP BY FLOOR(CONVERT(FLOAT, CH.DATE_CHEQUE)), ST.ID_STORE
) t2 on t1.dt = t2.dt and t1.ID_STORE = t2.ID_STORE
INNER JOIN
(
/*
SELECT
	DT = t.DT,
	ID_STORE = ST.ID_STORE,
	CONTRACTOR_NAME = CT.NAME,
	STORE_NAME = ST.NAME,
	SUM_SUP = ISNULL(SUM(CASE WHEN DM.ID_TABLE = 19 AND DM.CODE_OP = 'DIS' THEN -1 ELSE 1 END * DM.SUM_SUP * DM.SIGN_OP), 0),
	SUM_SAL = ISNULL(SUM(CASE WHEN DM.ID_TABLE = 19 AND DM.CODE_OP = 'DIS' THEN -1 ELSE 1 END * DM.SUM_ACC * DM.SIGN_OP), 0)
FROM DOC_MOVEMENT DM
	INNER JOIN #T t ON FLOOR(CONVERT(FLOAT, DM.DATE_OP)) < t.DT
	INNER JOIN STORE ST ON ST.ID_STORE = DM.ID_STORE
	INNER JOIN CONTRACTOR CT ON CT.ID_CONTRACTOR = ST.ID_CONTRACTOR
WHERE (@ALL_CONTRACTORS = 1 or st.ID_CONTRACTOR in (select ID_CONTRACTOR from #contractors))
	and (@ALL_STORES = 1 or st.ID_STORE in (select ID_STORE from #STORES))
group by t.dt, ST.ID_STORE, CT.NAME, ST.NAME*/

SELECT 
	DT, 
	ID_STORE, 
	CONTRACTOR_NAME, 
	STORE_NAME, 
	SUM_SUP = SUM(SUM_SUP), 
	SUM_SAL = SUM(SUM_SAL)
FROM
(
SELECT  
	DATE_OP = LM.DATE_OP, 
	ID_STORE = ST.ID_STORE,
	CONTRACTOR_NAME = CT.NAME,
	STORE_NAME = ST.NAME, 
	SUM_SUP = ISNULL(L.PRICE_SUP * SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES), 0),
	SUM_SAL = ISNULL(L.PRICE_SAL * SUM(LM.QUANTITY_ADD - LM.QUANTITY_SUB - LM.QUANTITY_RES), 0)
FROM LOT_MOVEMENT LM
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	INNER JOIN CONTRACTOR CT ON CT.ID_CONTRACTOR = ST.ID_CONTRACTOR
	INNER JOIN GOODS G ON L.ID_GOODS = G.ID_GOODS
--WHERE G.IMPORTANT = 1
WHERE (@ALL_CONTRACTORS = 1 or st.ID_CONTRACTOR in (select ID_CONTRACTOR from #contractors))
	AND (@ALL_STORES = 1 or st.ID_STORE in (select ID_STORE from #STORES))
	AND (@ZNVLS = 0 OR (@ZNVLS = 1 AND G.IMPORTANT = 1))
GROUP BY LM.DATE_OP, ST.ID_STORE, CT.NAME, ST.NAME, L.PRICE_SUP, L.PRICE_SAL--, L.ID_GOODS
--GROUP BY t.dt, ST.ID_STORE, CT.NAME, ST.NAME
) AS tmp
	INNER JOIN #T t ON FLOOR(CONVERT(FLOAT, tmp.DATE_OP)) < t.DT
	GROUP BY t.dt, tmp.ID_STORE, tmp.CONTRACTOR_NAME, tmp.STORE_NAME
	
) t3 on (t3.DT = t1.DT and t3.ID_STORE = t1.ID_STORE) or (t3.DT = t2.dt and t3.ID_STORE = t2.ID_STORE)
LEFT JOIN
(
SELECT
	DT = FLOOR(CONVERT(FLOAT, I.DOCUMENT_DATE)),
	ID_STORE = ST.ID_STORE,
	PROD_PRICE = SUM(II.PRODUCER_PRICE * II.QUANTITY)
FROM INVOICE I	
	INNER JOIN INVOICE_ITEM II ON II.ID_INVOICE_GLOBAL = I.ID_INVOICE_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = I.ID_STORE
WHERE I.DOCUMENT_DATE BETWEEN @DATE_FR AND @DATE_TO
	and (@ALL_CONTRACTORS = 1 or st.ID_CONTRACTOR in (select ID_CONTRACTOR from #contractors))
	and (@ALL_STORES = 1 or st.ID_STORE in (select ID_STORE from #STORES))
GROUP BY FLOOR(CONVERT(FLOAT, I.DOCUMENT_DATE)), ST.ID_STORE
) t4 on t4.DT = t1.dt and t4.ID_STORE = t1.id_store
LEFT JOIN
(
select
	dt = x.dt,
	id_store = x.id_store,
	chi_count = sum(x.cs),
	ch_count = sum(case when x.cs > 0 then 1 else -1 end)
from
(
SELECT
	DT = FLOOR(CONVERT(FLOAT, CH.DATE_CHEQUE)),
	ID_STORE = ST.ID_STORE,
	CS = SUM(CASE WHEN CHEQUE_TYPE='SALE' THEN 1 ELSE -1 END),
	ch.Id_cheque_global	
FROM CASH_REGISTER CR
	LEFT JOIN CASH_SESSION CS ON CR.ID_CASH_REGISTER = CS.ID_CASH_REGISTER
	INNER JOIN CHEQUE CH ON CH.ID_CASH_SESSION_GLOBAL = CS.ID_CASH_SESSION_GLOBAL
	INNER JOIN CHEQUE_ITEM CHI ON CHI.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL
	INNER JOIN LOT L ON L.ID_LOT_GLOBAL = CHI.ID_LOT_GLOBAL
	INNER JOIN STORE ST ON ST.ID_STORE = L.ID_STORE
	INNER JOIN GOODS G ON L.ID_GOODS = G.ID_GOODS
WHERE CH.DOCUMENT_STATE = 'PROC'
	AND CHEQUE_TYPE IN ('SALE','RETURN')
	AND DATE_CHEQUE BETWEEN @DATE_FR AND @DATE_TO	
	and (@ALL_CONTRACTORS = 1 or st.ID_CONTRACTOR in (select ID_CONTRACTOR from #contractors))
	and (@ALL_STORES = 1 or st.ID_STORE in (select ID_STORE from #STORES))
	AND (@ZNVLS = 0 OR (@ZNVLS = 1 AND G.IMPORTANT = 1))
group by FLOOR(CONVERT(FLOAT, CH.DATE_CHEQUE)), ST.ID_STORE, ch.ID_CHEQUE_GLOBAL

) x
GROUP BY x.dt, x.ID_STORE

) t5 on t5.DT = t2.dt and t5.ID_STORE = t2.ID_STORE
order by ISNULL(t1.DT, t3.DT), t3.CONTRACTOR_NAME, t3.STORE_NAME

RETURN
GO


/*
exec DBO.REPEX_FACTOR_REESTR N'
<XML>	
	<DATE_FR>2010-07-23T16:13:14.453</DATE_FR>
	<DATE_TO>2010-07-23T16:13:14.453</DATE_TO>
</XML>'*/

/*
	
	<ID_CONTRACTOR>5272</ID_CONTRACTOR>
	<ID_STORE>32</ID_STORE>
	<ID_STORE>332</ID_STORE>
	<ZNVLS>1</ZNVLS>
*/